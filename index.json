[{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat.html","title":"FSharp.Text.StructuredFormat","content":"Display \nLayoutOps \nFormatOptions \nIEnvironment \nJoint \nLayout"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx.html","title":"FSharpx","content":"Async \nChoice \nContinuation \nEnum \nLazy \nMonoid \nNullable \nOperators \nOption \nPrelude \nReader \nResult \nSemigroup \nState \nStm \nString \nTask \nTimeMeasurement \nUndo \nValidation \nWriter \nZipList \nCont\u003C\u0027T, \u0027r\u003E \nCoroutine \nDictionary \nEnumerableEx \nFSharpAsyncEx \nFSharpChoice \nFSharpFunc \nFSharpLazy \nFSharpList \nFSharpMap \nFSharpOption \nFSharpResult \nFSharpSet \nFuncs \nISemigroup\u003C\u0027T\u003E \nL \nMonoid\u003C\u0027T\u003E \nNonEmptyListEx"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections.html","title":"FSharpx.Collections","content":"ByteString \nList \nMap \nSeq \nSet"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional.html","title":"FSharpx.Functional","content":"Enumerator \nIteratee \nLens \nEnumeratee\u003C\u0027ChunkOut, \u0027ChunkIn, \u0027T\u003E \nEnumerator\u003C\u0027Chunk, \u0027T\u003E \nIteratee\u003C\u0027Chunk, \u0027T\u003E \nLens\u003C\u0027T, \u0027U\u003E \nStream\u003C\u0027Chunk\u003E"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http.html","title":"FSharpx.Http","content":"Conneg"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io.html","title":"FSharpx.IO","content":"IOPrimitives"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-linq.html","title":"FSharpx.Linq","content":"ExtraHashCompare"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text.html","title":"FSharpx.Text","content":"Regex \nStrings \nActiveMatch"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-displaymodule.html","title":"Display","content":"Display \n \nDisplay.any_to_string \nany_to_string \nDisplay.output_any \noutput_any \nDisplay.any_to_layout \nany_to_layout \nDisplay.squash_layout \nsquash_layout \nDisplay.output_layout \noutput_layout \nDisplay.layout_as_string \nlayout_as_string \nDisplay.layout_to_string \nlayout_to_string"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-displaymodule.html#any_to_string","title":"Display.any_to_string","content":"Display.any_to_string \nany_to_string \n\n Convert any value to a string using a standard formatter\n Data is typically formatted in a structured format, e.g.\n lists are formatted using the \u0022[1;2]\u0022 notation.\n The details of the format are not specified and may change\n from version to version and according to the flags given\n to the F# compiler.  The format is intended to be human-readable,\n not machine readable.  If alternative generic formats are required\n you should develop your own formatter, using the code in the\n implementation of this file as a starting point.\n\n Data from other .NET languages is formatted using a virtual\n call to Object.ToString() on the boxed version of the input.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-displaymodule.html#output_any","title":"Display.output_any","content":"Display.output_any \noutput_any \n\n Ouput any value to a channel using the same set of formatting rules\n as any_to_string\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-displaymodule.html#any_to_layout","title":"Display.any_to_layout","content":"Display.any_to_layout \nany_to_layout \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-displaymodule.html#squash_layout","title":"Display.squash_layout","content":"Display.squash_layout \nsquash_layout \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-displaymodule.html#output_layout","title":"Display.output_layout","content":"Display.output_layout \noutput_layout \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-displaymodule.html#layout_as_string","title":"Display.layout_as_string","content":"Display.layout_as_string \nlayout_as_string \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-displaymodule.html#layout_to_string","title":"Display.layout_to_string","content":"Display.layout_to_string \nlayout_to_string \n\n Convert any value to a layout using the given formatting options.  The\n layout can then be processed using formatting display engines such as\n those in the LayoutOps module.  any_to_string and output_any are\n built using any_to_layout with default format options.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html","title":"LayoutOps","content":"LayoutOps \n\n A layout is a sequence of strings which have been joined together.\n The strings are classified as words, separators and left and right parenthesis.\n This classification determines where spaces are inserted.\n A joint is either unbreakable, breakable or broken.\n If a joint is broken the RHS layout occurs on the next line with optional indentation.\n A layout can be squashed to for given width which forces breaks as required.\n \nLayoutOps.emptyL \nemptyL \nLayoutOps.isEmptyL \nisEmptyL \nLayoutOps.objL \nobjL \nLayoutOps.wordL \nwordL \nLayoutOps.sepL \nsepL \nLayoutOps.rightL \nrightL \nLayoutOps.leftL \nleftL \nLayoutOps.(^^) \n(^^) \nLayoutOps.(\u002B\u002B) \n(\u002B\u002B) \nLayoutOps.(--) \n(--) \nLayoutOps.(---) \n(---) \nLayoutOps.(@@) \n(@@) \nLayoutOps.(@@-) \n(@@-) \nLayoutOps.(@@--) \n(@@--) \nLayoutOps.commaListL \ncommaListL \nLayoutOps.spaceListL \nspaceListL \nLayoutOps.semiListL \nsemiListL \nLayoutOps.sepListL \nsepListL \nLayoutOps.bracketL \nbracketL \nLayoutOps.squareBracketL \nsquareBracketL \nLayoutOps.braceL \nbraceL \nLayoutOps.tupleL \ntupleL \nLayoutOps.aboveL \naboveL \nLayoutOps.aboveListL \naboveListL \nLayoutOps.optionL \noptionL \nLayoutOps.listL \nlistL \nLayoutOps.tagAttrL \ntagAttrL \nLayoutOps.unfoldL \nunfoldL"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#emptyL","title":"LayoutOps.emptyL","content":"LayoutOps.emptyL \nemptyL \n\n The empty layout\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#isEmptyL","title":"LayoutOps.isEmptyL","content":"LayoutOps.isEmptyL \nisEmptyL \n\n Is it the empty layout?\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#objL","title":"LayoutOps.objL","content":"LayoutOps.objL \nobjL \n\n An uninterpreted leaf, to be interpreted into a string\n by the layout engine. This allows leaf layouts for numbers, strings and\n other atoms to be customized according to culture.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#wordL","title":"LayoutOps.wordL","content":"LayoutOps.wordL \nwordL \n\n An string leaf \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#sepL","title":"LayoutOps.sepL","content":"LayoutOps.sepL \nsepL \n\n An string which requires no spaces either side.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#rightL","title":"LayoutOps.rightL","content":"LayoutOps.rightL \nrightL \n\n An string which is right parenthesis (no space on the left).\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#leftL","title":"LayoutOps.leftL","content":"LayoutOps.leftL \nleftL \n\n An string which is left  parenthesis (no space on the right).\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#(^^)","title":"LayoutOps.(^^)","content":"LayoutOps.(^^) \n(^^) \n\n Join, unbreakable. \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#(\u002B\u002B)","title":"LayoutOps.(\u002B\u002B)","content":"LayoutOps.(\u002B\u002B) \n(\u002B\u002B) \n\n Join, possible break with indent=0\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#(--)","title":"LayoutOps.(--)","content":"LayoutOps.(--) \n(--) \n\n Join, possible break with indent=1\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#(---)","title":"LayoutOps.(---)","content":"LayoutOps.(---) \n(---) \n\n Join, possible break with indent=2 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#(@@)","title":"LayoutOps.(@@)","content":"LayoutOps.(@@) \n(@@) \n\n Join broken with ident=0\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#(@@-)","title":"LayoutOps.(@@-)","content":"LayoutOps.(@@-) \n(@@-) \n\n Join broken with ident=1 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#(@@--)","title":"LayoutOps.(@@--)","content":"LayoutOps.(@@--) \n(@@--) \n\n Join broken with ident=2 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#commaListL","title":"LayoutOps.commaListL","content":"LayoutOps.commaListL \ncommaListL \n\n Join layouts into a comma separated list.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#spaceListL","title":"LayoutOps.spaceListL","content":"LayoutOps.spaceListL \nspaceListL \n\n Join layouts into a space separated list.    \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#semiListL","title":"LayoutOps.semiListL","content":"LayoutOps.semiListL \nsemiListL \n\n Join layouts into a semi-colon separated list.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#sepListL","title":"LayoutOps.sepListL","content":"LayoutOps.sepListL \nsepListL \n\n Join layouts into a list separated using the given Layout.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#bracketL","title":"LayoutOps.bracketL","content":"LayoutOps.bracketL \nbracketL \n\n Wrap round brackets around Layout.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#squareBracketL","title":"LayoutOps.squareBracketL","content":"LayoutOps.squareBracketL \nsquareBracketL \n\n Wrap square brackets around layout.    \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#braceL","title":"LayoutOps.braceL","content":"LayoutOps.braceL \nbraceL \n\n Wrap braces around layout.        \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#tupleL","title":"LayoutOps.tupleL","content":"LayoutOps.tupleL \ntupleL \n\n Form tuple of layouts.            \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#aboveL","title":"LayoutOps.aboveL","content":"LayoutOps.aboveL \naboveL \n\n Layout two vertically.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#aboveListL","title":"LayoutOps.aboveListL","content":"LayoutOps.aboveListL \naboveListL \n\n Layout list vertically.    \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#optionL","title":"LayoutOps.optionL","content":"LayoutOps.optionL \noptionL \n\n Layout like an F# option.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#listL","title":"LayoutOps.listL","content":"LayoutOps.listL \nlistL \n\n Layout like an F# list.    \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#tagAttrL","title":"LayoutOps.tagAttrL","content":"LayoutOps.tagAttrL \ntagAttrL \n\n See tagL\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layoutopsmodule.html#unfoldL","title":"LayoutOps.unfoldL","content":"LayoutOps.unfoldL \nunfoldL \n\n For limitting layout of list-like sequences (lists,arrays,etc).\n unfold a list of items using (project and z) making layout list via itemL.\n If reach maxLength (before exhausting) then truncate.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html","title":"FormatOptions","content":"FormatOptions \n\n A record of options to control structural formatting.\n For F# Interactive properties matching those of this value can be accessed via the \u0027fsi\u0027\n value.\n \n Floating Point format given in the same format accepted by System.Double.ToString,\n e.g. f6 or g15.\n\n If ShowProperties is set the printing process will evaluate properties of the values being\n displayed.  This may cause additional computation.  \n\n The ShowIEnumerable is set the printing process will force the evalution of IEnumerable objects\n to a small, finite depth, as determined by the printing parameters.\n This may lead to additional computation being performed during printing.\n\n \u003Cexample\u003E\n From F# Interactive the default settings can be adjusted using, for example, \n \u003Cpre\u003E\n   open Microsoft.FSharp.Compiler.Interactive.Settings;;\n   setPrintWidth 120;;\n \u003C/pre\u003E\n \u003C/example\u003E\n \nFormatOptions.Default \nDefault \nFormatOptions.FloatingPointFormat \nFloatingPointFormat \nFormatOptions.AttributeProcessor \nAttributeProcessor \nFormatOptions.FormatProvider \nFormatProvider \nFormatOptions.BindingFlags \nBindingFlags \nFormatOptions.PrintWidth \nPrintWidth \nFormatOptions.PrintDepth \nPrintDepth \nFormatOptions.PrintLength \nPrintLength \nFormatOptions.PrintSize \nPrintSize \nFormatOptions.ShowProperties \nShowProperties \nFormatOptions.ShowIEnumerable \nShowIEnumerable"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#Default","title":"FormatOptions.Default","content":"FormatOptions.Default \nDefault \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#FloatingPointFormat","title":"FormatOptions.FloatingPointFormat","content":"FormatOptions.FloatingPointFormat \nFloatingPointFormat \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#AttributeProcessor","title":"FormatOptions.AttributeProcessor","content":"FormatOptions.AttributeProcessor \nAttributeProcessor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#FormatProvider","title":"FormatOptions.FormatProvider","content":"FormatOptions.FormatProvider \nFormatProvider \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#BindingFlags","title":"FormatOptions.BindingFlags","content":"FormatOptions.BindingFlags \nBindingFlags \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#PrintWidth","title":"FormatOptions.PrintWidth","content":"FormatOptions.PrintWidth \nPrintWidth \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#PrintDepth","title":"FormatOptions.PrintDepth","content":"FormatOptions.PrintDepth \nPrintDepth \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#PrintLength","title":"FormatOptions.PrintLength","content":"FormatOptions.PrintLength \nPrintLength \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#PrintSize","title":"FormatOptions.PrintSize","content":"FormatOptions.PrintSize \nPrintSize \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#ShowProperties","title":"FormatOptions.ShowProperties","content":"FormatOptions.ShowProperties \nShowProperties \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-formatoptions.html#ShowIEnumerable","title":"FormatOptions.ShowIEnumerable","content":"FormatOptions.ShowIEnumerable \nShowIEnumerable \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-ienvironment.html","title":"IEnvironment","content":"IEnvironment \n \nIEnvironment.GetLayout \nGetLayout \nIEnvironment.MaxColumns \nMaxColumns \nIEnvironment.MaxRows \nMaxRows"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-ienvironment.html#GetLayout","title":"IEnvironment.GetLayout","content":"IEnvironment.GetLayout \nGetLayout \n\n Return to the layout-generation \n environment to layout any otherwise uninterpreted object\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-ienvironment.html#MaxColumns","title":"IEnvironment.MaxColumns","content":"IEnvironment.MaxColumns \nMaxColumns \n\n The maximum number of elements for which to generate layout for \n list-like structures, or columns in table-like \n structures.  -1 if no maximum.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-ienvironment.html#MaxRows","title":"IEnvironment.MaxRows","content":"IEnvironment.MaxRows \nMaxRows \n\n The maximum number of rows for which to generate layout for table-like \n structures.  -1 if no maximum.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-joint.html","title":"Joint","content":"Joint \n\n Data representing joints in structured layouts of terms.  The representation\n of this data type is only for the consumption of formatting engines.\n \nJoint.Unbreakable \nUnbreakable \nJoint.Breakable \nBreakable \nJoint.Broken \nBroken"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-joint.html#Unbreakable","title":"Joint.Unbreakable","content":"Joint.Unbreakable \nUnbreakable \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-joint.html#Breakable","title":"Joint.Breakable","content":"Joint.Breakable \nBreakable \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-joint.html#Broken","title":"Joint.Broken","content":"Joint.Broken \nBroken \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layout.html","title":"Layout","content":"Layout \n\n Data representing structured layouts of terms.  The representation\n of this data type is only for the consumption of formatting engines.\n \nLayout.Leaf \nLeaf \nLayout.Node \nNode \nLayout.Attr \nAttr"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layout.html#Leaf","title":"Layout.Leaf","content":"Layout.Leaf \nLeaf \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layout.html#Node","title":"Layout.Node","content":"Layout.Node \nNode \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharp-text-structuredformat-layout.html#Attr","title":"Layout.Attr","content":"Layout.Attr \nAttr \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html","title":"Async","content":"Async \n \nAsync.bind \nbind \nAsync.returnM \nreturnM \nAsync.(\u003E\u003E=) \n(\u003E\u003E=) \nAsync.(=\u003C\u003C) \n(=\u003C\u003C) \nAsync.(\u003C*\u003E) \n(\u003C*\u003E) \nAsync.ap \nap \nAsync.pipe \npipe \nAsync.pipe2 \npipe2 \nAsync.pipe3 \npipe3 \nAsync.map \nmap \nAsync.lift2 \nlift2 \nAsync.(\u003C!\u003E) \n(\u003C!\u003E) \nAsync.( *\u003E ) \n( *\u003E ) \nAsync.( \u003C* ) \n( \u003C* ) \nAsync.(\u003E\u003E.) \n(\u003E\u003E.) \nAsync.(\u003E=\u003E) \n(\u003E=\u003E) \nAsync.(\u003C=\u003C) \n(\u003C=\u003C) \nAsync.foldM \nfoldM \nAsync.sequence \nsequence \nAsync.mapM \nmapM"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#bind","title":"Async.bind","content":"Async.bind \nbind \n\n Sequentially compose two actions, passing any value produced by the second as an argument to the first.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#returnM","title":"Async.returnM","content":"Async.returnM \nreturnM \n\n Inject a value into the async type\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#(\u003E\u003E=)","title":"Async.(\u003E\u003E=)","content":"Async.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Sequentially compose two actions, passing any value produced by the first as an argument to the second.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#(=\u003C\u003C)","title":"Async.(=\u003C\u003C)","content":"Async.(=\u003C\u003C) \n(=\u003C\u003C) \n\n Flipped \u003E\u003E=\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#(\u003C*\u003E)","title":"Async.(\u003C*\u003E)","content":"Async.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#ap","title":"Async.ap","content":"Async.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#pipe","title":"Async.pipe","content":"Async.pipe \npipe \n\n Flipped map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#pipe2","title":"Async.pipe2","content":"Async.pipe2 \npipe2 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#pipe3","title":"Async.pipe3","content":"Async.pipe3 \npipe3 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#map","title":"Async.map","content":"Async.map \nmap \n\n Transforms an async value by using a specified mapping function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#lift2","title":"Async.lift2","content":"Async.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#(\u003C!\u003E)","title":"Async.(\u003C!\u003E)","content":"Async.(\u003C!\u003E) \n(\u003C!\u003E) \n\n Infix map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#( *\u003E )","title":"Async.( *\u003E )","content":"Async.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#( \u003C* )","title":"Async.( \u003C* )","content":"Async.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#(\u003E\u003E.)","title":"Async.(\u003E\u003E.)","content":"Async.(\u003E\u003E.) \n(\u003E\u003E.) \n\n Sequentially compose two async actions, discarding any value produced by the first\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#(\u003E=\u003E)","title":"Async.(\u003E=\u003E)","content":"Async.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Left-to-right Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#(\u003C=\u003C)","title":"Async.(\u003C=\u003C)","content":"Async.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Right-to-left Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#foldM","title":"Async.foldM","content":"Async.foldM \nfoldM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#sequence","title":"Async.sequence","content":"Async.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-async.html#mapM","title":"Async.mapM","content":"Async.mapM \nmapM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html","title":"Choice","content":"Choice \n \nChoice.EitherBuilder \nEitherBuilder \nChoice.returnM \nreturnM \nChoice.get \nget \nChoice.getOrRaise \ngetOrRaise \nChoice.getOrReraise \ngetOrReraise \nChoice.protect \nprotect \nChoice.cast \ncast \nChoice.ap \nap \nChoice.(\u003C*\u003E) \n(\u003C*\u003E) \nChoice.map \nmap \nChoice.(\u003C!\u003E) \n(\u003C!\u003E) \nChoice.lift2 \nlift2 \nChoice.( *\u003E ) \n( *\u003E ) \nChoice.( \u003C* ) \n( \u003C* ) \nChoice.bind \nbind \nChoice.(\u003E\u003E=) \n(\u003E\u003E=) \nChoice.(=\u003C\u003C) \n(=\u003C\u003C) \nChoice.(\u003E\u003E.) \n(\u003E\u003E.) \nChoice.(\u003E=\u003E) \n(\u003E=\u003E) \nChoice.(\u003C=\u003C) \n(\u003C=\u003C) \nChoice.bimap \nbimap \nChoice.choice \nchoice \nChoice.mapSecond \nmapSecond \nChoice.choose \nchoose \nChoice.toOption \ntoOption \nChoice.ofOption \nofOption \nChoice.foldM \nfoldM \nChoice.sequence \nsequence \nChoice.mapM \nmapM \nChoice.isChoice1Of2 \nisChoice1Of2 \nChoice.isChoice2Of2 \nisChoice2Of2 \nChoice.isChoice1Of3 \nisChoice1Of3 \nChoice.isChoice2Of3 \nisChoice2Of3 \nChoice.isChoice3Of3 \nisChoice3Of3 \nChoice.isChoice1Of4 \nisChoice1Of4 \nChoice.isChoice2Of4 \nisChoice2Of4 \nChoice.isChoice3Of4 \nisChoice3Of4 \nChoice.isChoice4Of4 \nisChoice4Of4 \nChoice.isChoice1Of5 \nisChoice1Of5 \nChoice.isChoice2Of5 \nisChoice2Of5 \nChoice.isChoice3Of5 \nisChoice3Of5 \nChoice.isChoice4Of5 \nisChoice4Of5 \nChoice.isChoice5Of5 \nisChoice5Of5 \nChoice.isChoice1Of6 \nisChoice1Of6 \nChoice.isChoice2Of6 \nisChoice2Of6 \nChoice.isChoice3Of6 \nisChoice3Of6 \nChoice.isChoice4Of6 \nisChoice4Of6 \nChoice.isChoice5Of6 \nisChoice5Of6 \nChoice.isChoice6Of6 \nisChoice6Of6 \nChoice.isChoice1Of7 \nisChoice1Of7 \nChoice.isChoice2Of7 \nisChoice2Of7 \nChoice.isChoice3Of7 \nisChoice3Of7 \nChoice.isChoice4Of7 \nisChoice4Of7 \nChoice.isChoice5Of7 \nisChoice5Of7 \nChoice.isChoice6Of7 \nisChoice6Of7 \nChoice.isChoice7Of7 \nisChoice7Of7"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#returnM","title":"Choice.returnM","content":"Choice.returnM \nreturnM \n\n Inject a value into the Choice type\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#get","title":"Choice.get","content":"Choice.get \nget \n\n If Choice is 1Of2, return its value.\n Otherwise throw ArgumentException.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#getOrRaise","title":"Choice.getOrRaise","content":"Choice.getOrRaise \ngetOrRaise \n\n If Choice is 1Of2, return its value.\n Otherwise raise the exception in 2Of2.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#getOrReraise","title":"Choice.getOrReraise","content":"Choice.getOrReraise \ngetOrReraise \n\n If Choice is 1Of2, return its value.\n Otherwise reraise the exception in 2Of2.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#protect","title":"Choice.protect","content":"Choice.protect \nprotect \n\n Wraps a function, encapsulates any exception thrown within to a Choice\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#cast","title":"Choice.cast","content":"Choice.cast \ncast \n\n Attempts to cast an object.\n Stores the cast value in 1Of2 if successful, otherwise stores the exception in 2Of2\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#ap","title":"Choice.ap","content":"Choice.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#(\u003C*\u003E)","title":"Choice.(\u003C*\u003E)","content":"Choice.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#map","title":"Choice.map","content":"Choice.map \nmap \n\n Transforms a Choice\u0027s first value by using a specified mapping function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#(\u003C!\u003E)","title":"Choice.(\u003C!\u003E)","content":"Choice.(\u003C!\u003E) \n(\u003C!\u003E) \n\n Infix map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#lift2","title":"Choice.lift2","content":"Choice.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#( *\u003E )","title":"Choice.( *\u003E )","content":"Choice.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#( \u003C* )","title":"Choice.( \u003C* )","content":"Choice.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#bind","title":"Choice.bind","content":"Choice.bind \nbind \n\n Monadic bind\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#(\u003E\u003E=)","title":"Choice.(\u003E\u003E=)","content":"Choice.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Sequentially compose two actions, passing any value produced by the first as an argument to the second.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#(=\u003C\u003C)","title":"Choice.(=\u003C\u003C)","content":"Choice.(=\u003C\u003C) \n(=\u003C\u003C) \n\n Flipped \u003E\u003E=\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#(\u003E\u003E.)","title":"Choice.(\u003E\u003E.)","content":"Choice.(\u003E\u003E.) \n(\u003E\u003E.) \n\n Sequentially compose two either actions, discarding any value produced by the first\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#(\u003E=\u003E)","title":"Choice.(\u003E=\u003E)","content":"Choice.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Left-to-right Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#(\u003C=\u003C)","title":"Choice.(\u003C=\u003C)","content":"Choice.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Right-to-left Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#bimap","title":"Choice.bimap","content":"Choice.bimap \nbimap \n\n Maps both parts of a Choice.\n Applies the first function if Choice is 1Of2.\n Otherwise applies the second function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#choice","title":"Choice.choice","content":"Choice.choice \nchoice \n\n Maps both parts of a Choice.\n Applies the first function if Choice is 1Of2.\n Otherwise applies the second function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#mapSecond","title":"Choice.mapSecond","content":"Choice.mapSecond \nmapSecond \n\n Transforms a Choice\u0027s second value by using a specified mapping function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#choose","title":"Choice.choose","content":"Choice.choose \nchoose \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#toOption","title":"Choice.toOption","content":"Choice.toOption \ntoOption \n\n If Choice is 1Of2, returns Some value. Otherwise, returns None.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#ofOption","title":"Choice.ofOption","content":"Choice.ofOption \nofOption \n\n If Some value, returns Choice1Of2 value. Otherwise, returns the supplied default value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#foldM","title":"Choice.foldM","content":"Choice.foldM \nfoldM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#sequence","title":"Choice.sequence","content":"Choice.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#mapM","title":"Choice.mapM","content":"Choice.mapM \nmapM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice1Of2","title":"Choice.isChoice1Of2","content":"Choice.isChoice1Of2 \nisChoice1Of2 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice2Of2","title":"Choice.isChoice2Of2","content":"Choice.isChoice2Of2 \nisChoice2Of2 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice1Of3","title":"Choice.isChoice1Of3","content":"Choice.isChoice1Of3 \nisChoice1Of3 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice2Of3","title":"Choice.isChoice2Of3","content":"Choice.isChoice2Of3 \nisChoice2Of3 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice3Of3","title":"Choice.isChoice3Of3","content":"Choice.isChoice3Of3 \nisChoice3Of3 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice1Of4","title":"Choice.isChoice1Of4","content":"Choice.isChoice1Of4 \nisChoice1Of4 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice2Of4","title":"Choice.isChoice2Of4","content":"Choice.isChoice2Of4 \nisChoice2Of4 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice3Of4","title":"Choice.isChoice3Of4","content":"Choice.isChoice3Of4 \nisChoice3Of4 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice4Of4","title":"Choice.isChoice4Of4","content":"Choice.isChoice4Of4 \nisChoice4Of4 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice1Of5","title":"Choice.isChoice1Of5","content":"Choice.isChoice1Of5 \nisChoice1Of5 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice2Of5","title":"Choice.isChoice2Of5","content":"Choice.isChoice2Of5 \nisChoice2Of5 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice3Of5","title":"Choice.isChoice3Of5","content":"Choice.isChoice3Of5 \nisChoice3Of5 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice4Of5","title":"Choice.isChoice4Of5","content":"Choice.isChoice4Of5 \nisChoice4Of5 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice5Of5","title":"Choice.isChoice5Of5","content":"Choice.isChoice5Of5 \nisChoice5Of5 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice1Of6","title":"Choice.isChoice1Of6","content":"Choice.isChoice1Of6 \nisChoice1Of6 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice2Of6","title":"Choice.isChoice2Of6","content":"Choice.isChoice2Of6 \nisChoice2Of6 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice3Of6","title":"Choice.isChoice3Of6","content":"Choice.isChoice3Of6 \nisChoice3Of6 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice4Of6","title":"Choice.isChoice4Of6","content":"Choice.isChoice4Of6 \nisChoice4Of6 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice5Of6","title":"Choice.isChoice5Of6","content":"Choice.isChoice5Of6 \nisChoice5Of6 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice6Of6","title":"Choice.isChoice6Of6","content":"Choice.isChoice6Of6 \nisChoice6Of6 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice1Of7","title":"Choice.isChoice1Of7","content":"Choice.isChoice1Of7 \nisChoice1Of7 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice2Of7","title":"Choice.isChoice2Of7","content":"Choice.isChoice2Of7 \nisChoice2Of7 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice3Of7","title":"Choice.isChoice3Of7","content":"Choice.isChoice3Of7 \nisChoice3Of7 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice4Of7","title":"Choice.isChoice4Of7","content":"Choice.isChoice4Of7 \nisChoice4Of7 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice5Of7","title":"Choice.isChoice5Of7","content":"Choice.isChoice5Of7 \nisChoice5Of7 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice6Of7","title":"Choice.isChoice6Of7","content":"Choice.isChoice6Of7 \nisChoice6Of7 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice.html#isChoice7Of7","title":"Choice.isChoice7Of7","content":"Choice.isChoice7Of7 \nisChoice7Of7 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html","title":"EitherBuilder","content":"EitherBuilder \n \nEitherBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEitherBuilder.Bind \nBind \nEitherBuilder.Delay \nDelay \nEitherBuilder.For \nFor \nEitherBuilder.Return \nReturn \nEitherBuilder.ReturnFrom \nReturnFrom \nEitherBuilder.Run \nRun \nEitherBuilder.TryFinally \nTryFinally \nEitherBuilder.TryWith \nTryWith \nEitherBuilder.Using \nUsing \nEitherBuilder.While \nWhile \nEitherBuilder.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"EitherBuilder.\u0060\u0060.ctor\u0060\u0060","content":"EitherBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#Bind","title":"EitherBuilder.Bind","content":"EitherBuilder.Bind \nBind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#Delay","title":"EitherBuilder.Delay","content":"EitherBuilder.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#For","title":"EitherBuilder.For","content":"EitherBuilder.For \nFor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#Return","title":"EitherBuilder.Return","content":"EitherBuilder.Return \nReturn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#ReturnFrom","title":"EitherBuilder.ReturnFrom","content":"EitherBuilder.ReturnFrom \nReturnFrom \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#Run","title":"EitherBuilder.Run","content":"EitherBuilder.Run \nRun \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#TryFinally","title":"EitherBuilder.TryFinally","content":"EitherBuilder.TryFinally \nTryFinally \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#TryWith","title":"EitherBuilder.TryWith","content":"EitherBuilder.TryWith \nTryWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#Using","title":"EitherBuilder.Using","content":"EitherBuilder.Using \nUsing \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#While","title":"EitherBuilder.While","content":"EitherBuilder.While \nWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-choice-eitherbuilder.html#Zero","title":"EitherBuilder.Zero","content":"EitherBuilder.Zero \nZero \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html","title":"Continuation","content":"Continuation \n \nContinuation.ContinuationBuilder \nContinuationBuilder \nContinuation.runCont \nrunCont \nContinuation.throw \nthrow \nContinuation.callcc \ncallcc \nContinuation.bind \nbind \nContinuation.cont \ncont \nContinuation.returnM \nreturnM \nContinuation.(\u003E\u003E=) \n(\u003E\u003E=) \nContinuation.(=\u003C\u003C) \n(=\u003C\u003C) \nContinuation.(\u003C*\u003E) \n(\u003C*\u003E) \nContinuation.ap \nap \nContinuation.map \nmap \nContinuation.(\u003C!\u003E) \n(\u003C!\u003E) \nContinuation.lift2 \nlift2 \nContinuation.( *\u003E ) \n( *\u003E ) \nContinuation.( \u003C* ) \n( \u003C* ) \nContinuation.(\u003E\u003E.) \n(\u003E\u003E.) \nContinuation.(\u003E=\u003E) \n(\u003E=\u003E) \nContinuation.(\u003C=\u003C) \n(\u003C=\u003C) \nContinuation.foldM \nfoldM \nContinuation.sequence \nsequence \nContinuation.mapM \nmapM"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#runCont","title":"Continuation.runCont","content":"Continuation.runCont \nrunCont \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#throw","title":"Continuation.throw","content":"Continuation.throw \nthrow \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#callcc","title":"Continuation.callcc","content":"Continuation.callcc \ncallcc \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#bind","title":"Continuation.bind","content":"Continuation.bind \nbind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#cont","title":"Continuation.cont","content":"Continuation.cont \ncont \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#returnM","title":"Continuation.returnM","content":"Continuation.returnM \nreturnM \n\n Inject a value into the Cont type\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#(\u003E\u003E=)","title":"Continuation.(\u003E\u003E=)","content":"Continuation.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Sequentially compose two actions, passing any value produced by the first as an argument to the second.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#(=\u003C\u003C)","title":"Continuation.(=\u003C\u003C)","content":"Continuation.(=\u003C\u003C) \n(=\u003C\u003C) \n\n Flipped \u003E\u003E=\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#(\u003C*\u003E)","title":"Continuation.(\u003C*\u003E)","content":"Continuation.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#ap","title":"Continuation.ap","content":"Continuation.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#map","title":"Continuation.map","content":"Continuation.map \nmap \n\n Transforms a Cont value by using a specified mapping function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#(\u003C!\u003E)","title":"Continuation.(\u003C!\u003E)","content":"Continuation.(\u003C!\u003E) \n(\u003C!\u003E) \n\n Infix map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#lift2","title":"Continuation.lift2","content":"Continuation.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#( *\u003E )","title":"Continuation.( *\u003E )","content":"Continuation.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#( \u003C* )","title":"Continuation.( \u003C* )","content":"Continuation.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#(\u003E\u003E.)","title":"Continuation.(\u003E\u003E.)","content":"Continuation.(\u003E\u003E.) \n(\u003E\u003E.) \n\n Sequentially compose two continuation actions, discarding any value produced by the first\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#(\u003E=\u003E)","title":"Continuation.(\u003E=\u003E)","content":"Continuation.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Left-to-right Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#(\u003C=\u003C)","title":"Continuation.(\u003C=\u003C)","content":"Continuation.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Right-to-left Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#foldM","title":"Continuation.foldM","content":"Continuation.foldM \nfoldM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#sequence","title":"Continuation.sequence","content":"Continuation.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule.html#mapM","title":"Continuation.mapM","content":"Continuation.mapM \nmapM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html","title":"ContinuationBuilder","content":"ContinuationBuilder \n \nContinuationBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nContinuationBuilder.Bind \nBind \nContinuationBuilder.Catch \nCatch \nContinuationBuilder.Combine \nCombine \nContinuationBuilder.Delay \nDelay \nContinuationBuilder.For \nFor \nContinuationBuilder.Return \nReturn \nContinuationBuilder.ReturnFrom \nReturnFrom \nContinuationBuilder.TryFinally \nTryFinally \nContinuationBuilder.TryWith \nTryWith \nContinuationBuilder.Using \nUsing \nContinuationBuilder.While \nWhile \nContinuationBuilder.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"ContinuationBuilder.\u0060\u0060.ctor\u0060\u0060","content":"ContinuationBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#Bind","title":"ContinuationBuilder.Bind","content":"ContinuationBuilder.Bind \nBind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#Catch","title":"ContinuationBuilder.Catch","content":"ContinuationBuilder.Catch \nCatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#Combine","title":"ContinuationBuilder.Combine","content":"ContinuationBuilder.Combine \nCombine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#Delay","title":"ContinuationBuilder.Delay","content":"ContinuationBuilder.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#For","title":"ContinuationBuilder.For","content":"ContinuationBuilder.For \nFor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#Return","title":"ContinuationBuilder.Return","content":"ContinuationBuilder.Return \nReturn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#ReturnFrom","title":"ContinuationBuilder.ReturnFrom","content":"ContinuationBuilder.ReturnFrom \nReturnFrom \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#TryFinally","title":"ContinuationBuilder.TryFinally","content":"ContinuationBuilder.TryFinally \nTryFinally \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#TryWith","title":"ContinuationBuilder.TryWith","content":"ContinuationBuilder.TryWith \nTryWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#Using","title":"ContinuationBuilder.Using","content":"ContinuationBuilder.Using \nUsing \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#While","title":"ContinuationBuilder.While","content":"ContinuationBuilder.While \nWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-continuationmodule-continuationbuilder.html#Zero","title":"ContinuationBuilder.Zero","content":"ContinuationBuilder.Zero \nZero \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-enum.html","title":"Enum","content":"Enum \n \nEnum.tryParse \ntryParse \nEnum.parse \nparse \nEnum.getValues \ngetValues \nEnum.isDefined \nisDefined \nEnum.toString \ntoString"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-enum.html#tryParse","title":"Enum.tryParse","content":"Enum.tryParse \ntryParse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-enum.html#parse","title":"Enum.parse","content":"Enum.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-enum.html#getValues","title":"Enum.getValues","content":"Enum.getValues \ngetValues \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-enum.html#isDefined","title":"Enum.isDefined","content":"Enum.isDefined \nisDefined \n\n From http://www.fssnip.net/4V/title/Check-if-value-is-a-valid-enum-or-flags-combination\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-enum.html#toString","title":"Enum.toString","content":"Enum.toString \ntoString \n\n Returns the name of the enum as string\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-lazymodule.html","title":"Lazy","content":"Lazy \n \nLazy.force \nforce"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-lazymodule.html#force","title":"Lazy.force","content":"Lazy.force \nforce \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html","title":"Monoid","content":"Monoid \n \nMonoid.dual \ndual \nMonoid.tuple2 \ntuple2 \nMonoid.tuple3 \ntuple3 \nMonoid.sum \nsum \nMonoid.product \nproduct \nMonoid.sumInt \nsumInt \nMonoid.productInt \nproductInt \nMonoid.minInt \nminInt \nMonoid.maxInt \nmaxInt \nMonoid.string \nstring \nMonoid.all \nall \nMonoid.any \nany \nMonoid.unit \nunit \nMonoid.endo \nendo"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#dual","title":"Monoid.dual","content":"Monoid.dual \ndual \n\n The dual of a monoid, obtained by swapping the arguments of \u0027Combine\u0027.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#tuple2","title":"Monoid.tuple2","content":"Monoid.tuple2 \ntuple2 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#tuple3","title":"Monoid.tuple3","content":"Monoid.tuple3 \ntuple3 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#sum","title":"Monoid.sum","content":"Monoid.sum \nsum \n\n Monoid (a,0,\u002B)\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#product","title":"Monoid.product","content":"Monoid.product \nproduct \n\n Monoid (a,1,*)\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#sumInt","title":"Monoid.sumInt","content":"Monoid.sumInt \nsumInt \n\n Monoid (int,0,\u002B)\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#productInt","title":"Monoid.productInt","content":"Monoid.productInt \nproductInt \n\n Monoid (int,1,*)\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#minInt","title":"Monoid.minInt","content":"Monoid.minInt \nminInt \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#maxInt","title":"Monoid.maxInt","content":"Monoid.maxInt \nmaxInt \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#string","title":"Monoid.string","content":"Monoid.string \nstring \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#all","title":"Monoid.all","content":"Monoid.all \nall \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#any","title":"Monoid.any","content":"Monoid.any \nany \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#unit","title":"Monoid.unit","content":"Monoid.unit \nunit \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid.html#endo","title":"Monoid.endo","content":"Monoid.endo \nendo \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html","title":"Nullable","content":"Nullable \n \nNullable.create \ncreate \nNullable.getOrDefault \ngetOrDefault \nNullable.getOrElse \ngetOrElse \nNullable.get \nget \nNullable.ofOption \nofOption \nNullable.toOption \ntoOption \nNullable.bind \nbind \nNullable.hasValue \nhasValue \nNullable.isNull \nisNull \nNullable.count \ncount \nNullable.fold \nfold \nNullable.foldBack \nfoldBack \nNullable.exists \nexists \nNullable.forall \nforall \nNullable.iter \niter \nNullable.map \nmap \nNullable.toArray \ntoArray \nNullable.toList \ntoList \nNullable.lift2 \nlift2 \nNullable.mapBool \nmapBool \nNullable.(\u002B?) \n(\u002B?) \nNullable.(-?) \n(-?) \nNullable.( *? ) \n( *? ) \nNullable.(/?) \n(/?) \nNullable.(\u003E?) \n(\u003E?) \nNullable.(\u003E=?) \n(\u003E=?) \nNullable.(\u003C?) \n(\u003C?) \nNullable.(\u003C=?) \n(\u003C=?) \nNullable.notn \nnotn \nNullable.(\u0026?) \n(\u0026?) \nNullable.(|?) \n(|?) \nNullable.n \nn \nNullable.n \nn \nNullable.n \nn \nNullable.n \nn \nNullable.n \nn \nNullable.n \nn \nNullable.n \nn \nNullable.n \nn \nNullable.n \nn \nNullable.n \nn \nNullable.n \nn \nNullable.n \nn \nNullable.(|Null|Value|) \n(|Null|Value|)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#create","title":"Nullable.create","content":"Nullable.create \ncreate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#getOrDefault","title":"Nullable.getOrDefault","content":"Nullable.getOrDefault \ngetOrDefault \n\n Gets the value associated with the nullable or the supplied default value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#getOrElse","title":"Nullable.getOrElse","content":"Nullable.getOrElse \ngetOrElse \n\n Gets the value associated with the nullable or the supplied default value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#get","title":"Nullable.get","content":"Nullable.get \nget \n\n Gets the value associated with the Nullable.\n If no value, throws.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#ofOption","title":"Nullable.ofOption","content":"Nullable.ofOption \nofOption \n\n Converts option to nullable\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#toOption","title":"Nullable.toOption","content":"Nullable.toOption \ntoOption \n\n Converts nullable to option\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#bind","title":"Nullable.bind","content":"Nullable.bind \nbind \n\n Monadic bind\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#hasValue","title":"Nullable.hasValue","content":"Nullable.hasValue \nhasValue \n\n True if Nullable has value\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#isNull","title":"Nullable.isNull","content":"Nullable.isNull \nisNull \n\n True if Nullable does not have value\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#count","title":"Nullable.count","content":"Nullable.count \ncount \n\n Returns 1 if Nullable has value, otherwise 0\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#fold","title":"Nullable.fold","content":"Nullable.fold \nfold \n\n Evaluates the equivalent of List.fold for a nullable.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#foldBack","title":"Nullable.foldBack","content":"Nullable.foldBack \nfoldBack \n\n Performs the equivalent of the List.foldBack operation on a nullable.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#exists","title":"Nullable.exists","content":"Nullable.exists \nexists \n\n Evaluates the equivalent of List.exists for a nullable.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#forall","title":"Nullable.forall","content":"Nullable.forall \nforall \n\n Evaluates the equivalent of List.forall for a nullable.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#iter","title":"Nullable.iter","content":"Nullable.iter \niter \n\n Executes a function for a nullable value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#map","title":"Nullable.map","content":"Nullable.map \nmap \n\n Transforms a Nullable value by using a specified mapping function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#toArray","title":"Nullable.toArray","content":"Nullable.toArray \ntoArray \n\n Convert the nullable to an array of length 0 or 1.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#toList","title":"Nullable.toList","content":"Nullable.toList \ntoList \n\n Convert the nullable to a list of length 0 or 1.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#lift2","title":"Nullable.lift2","content":"Nullable.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#mapBool","title":"Nullable.mapBool","content":"Nullable.mapBool \nmapBool \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#(\u002B?)","title":"Nullable.(\u002B?)","content":"Nullable.(\u002B?) \n(\u002B?) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#(-?)","title":"Nullable.(-?)","content":"Nullable.(-?) \n(-?) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#( *? )","title":"Nullable.( *? )","content":"Nullable.( *? ) \n( *? ) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#(/?)","title":"Nullable.(/?)","content":"Nullable.(/?) \n(/?) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#(\u003E?)","title":"Nullable.(\u003E?)","content":"Nullable.(\u003E?) \n(\u003E?) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#(\u003E=?)","title":"Nullable.(\u003E=?)","content":"Nullable.(\u003E=?) \n(\u003E=?) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#(\u003C?)","title":"Nullable.(\u003C?)","content":"Nullable.(\u003C?) \n(\u003C?) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#(\u003C=?)","title":"Nullable.(\u003C=?)","content":"Nullable.(\u003C=?) \n(\u003C=?) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#notn","title":"Nullable.notn","content":"Nullable.notn \nnotn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#(\u0026?)","title":"Nullable.(\u0026?)","content":"Nullable.(\u0026?) \n(\u0026?) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#(|?)","title":"Nullable.(|?)","content":"Nullable.(|?) \n(|?) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#n","title":"Nullable.n","content":"Nullable.n \nn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nullable.html#(|Null|Value|)","title":"Nullable.(|Null|Value|)","content":"Nullable.(|Null|Value|) \n(|Null|Value|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-operators.html","title":"Operators","content":"Operators \n\n Generic monadic operators    \n \nOperators.returnM \nreturnM \nOperators.bindM \nbindM \nOperators.liftM \nliftM \nOperators.applyM \napplyM"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-operators.html#returnM","title":"Operators.returnM","content":"Operators.returnM \nreturnM \n\n Inject a value into the monadic type\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-operators.html#bindM","title":"Operators.bindM","content":"Operators.bindM \nbindM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-operators.html#liftM","title":"Operators.liftM","content":"Operators.liftM \nliftM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-operators.html#applyM","title":"Operators.applyM","content":"Operators.applyM \napplyM \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html","title":"Option","content":"Option \n \nOption.MaybeBuilder \nMaybeBuilder \nOption.maybe \nmaybe \nOption.monoid \nmonoid \nOption.returnM \nreturnM \nOption.(\u003E\u003E=) \n(\u003E\u003E=) \nOption.(=\u003C\u003C) \n(=\u003C\u003C) \nOption.(\u003C*\u003E) \n(\u003C*\u003E) \nOption.ap \nap \nOption.(\u003C!\u003E) \n(\u003C!\u003E) \nOption.lift2 \nlift2 \nOption.( *\u003E ) \n( *\u003E ) \nOption.( \u003C* ) \n( \u003C* ) \nOption.(\u003E\u003E.) \n(\u003E\u003E.) \nOption.(\u003E=\u003E) \n(\u003E=\u003E) \nOption.(\u003C=\u003C) \n(\u003C=\u003C) \nOption.ofNullable \nofNullable \nOption.toNullable \ntoNullable \nOption.ofBool \nofBool \nOption.tryParseWith \ntryParseWith \nOption.ofBoolAndValue \nofBoolAndValue \nOption.ofChoice \nofChoice \nOption.ofResult \nofResult \nOption.ofUnchecked \nofUnchecked \nOption.getOrElse \ngetOrElse \nOption.getOrElseLazy \ngetOrElseLazy \nOption.getOrElseF \ngetOrElseF \nOption.getOrFail \ngetOrFail \nOption.getOrRaise \ngetOrRaise \nOption.getOrReraise \ngetOrReraise \nOption.getOrDefault \ngetOrDefault \nOption.orElse \norElse \nOption.orElseLazy \norElseLazy \nOption.filter \nfilter \nOption.cast \ncast \nOption.foldM \nfoldM \nOption.sequence \nsequence \nOption.mapM \nmapM \nOption.getOrElseWith \ngetOrElseWith \nOption.option \noption \nOption.fromTryPattern \nfromTryPattern \nOption.concat \nconcat \nOption.isNone \nisNone \nOption.isSome \nisSome \nOption.someIf \nsomeIf"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#maybe","title":"Option.maybe","content":"Option.maybe \nmaybe \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#monoid","title":"Option.monoid","content":"Option.monoid \nmonoid \n\n Option wrapper monoid\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#returnM","title":"Option.returnM","content":"Option.returnM \nreturnM \n\n Inject a value into the option type\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#(\u003E\u003E=)","title":"Option.(\u003E\u003E=)","content":"Option.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Sequentially compose two actions, passing any value produced by the first as an argument to the second.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#(=\u003C\u003C)","title":"Option.(=\u003C\u003C)","content":"Option.(=\u003C\u003C) \n(=\u003C\u003C) \n\n Flipped \u003E\u003E=\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#(\u003C*\u003E)","title":"Option.(\u003C*\u003E)","content":"Option.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#ap","title":"Option.ap","content":"Option.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#(\u003C!\u003E)","title":"Option.(\u003C!\u003E)","content":"Option.(\u003C!\u003E) \n(\u003C!\u003E) \n\n Infix map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#lift2","title":"Option.lift2","content":"Option.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#( *\u003E )","title":"Option.( *\u003E )","content":"Option.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#( \u003C* )","title":"Option.( \u003C* )","content":"Option.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#(\u003E\u003E.)","title":"Option.(\u003E\u003E.)","content":"Option.(\u003E\u003E.) \n(\u003E\u003E.) \n\n Sequentially compose two maybe actions, discarding any value produced by the first\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#(\u003E=\u003E)","title":"Option.(\u003E=\u003E)","content":"Option.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Left-to-right Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#(\u003C=\u003C)","title":"Option.(\u003C=\u003C)","content":"Option.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Right-to-left Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#ofNullable","title":"Option.ofNullable","content":"Option.ofNullable \nofNullable \n\n Maps a Nullable to Option\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#toNullable","title":"Option.toNullable","content":"Option.toNullable \ntoNullable \n\n Maps an Option to Nullable\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#ofBool","title":"Option.ofBool","content":"Option.ofBool \nofBool \n\n True -\u003E Some(), False -\u003E None\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#tryParseWith","title":"Option.tryParseWith","content":"Option.tryParseWith \ntryParseWith \n\n Converts a function returning bool,value to a function returning value option.\n Useful to process TryXX style functions.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#ofBoolAndValue","title":"Option.ofBoolAndValue","content":"Option.ofBoolAndValue \nofBoolAndValue \n\n If true,value then returns Some value. Otherwise returns None.\n Useful to process TryXX style functions.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#ofChoice","title":"Option.ofChoice","content":"Option.ofChoice \nofChoice \n\n Maps Choice 1Of2 to Some value, otherwise None.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#ofResult","title":"Option.ofResult","content":"Option.ofResult \nofResult \n\n Maps Result Ok to Some value, otherwise None.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#ofUnchecked","title":"Option.ofUnchecked","content":"Option.ofUnchecked \nofUnchecked \n\n Maps Unchecked object when null to None, otherwise Some value.\n It\u0027s useful when getting data from external sources, pe.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#getOrElse","title":"Option.getOrElse","content":"Option.getOrElse \ngetOrElse \n\n Gets the value associated with the option or the supplied default value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#getOrElseLazy","title":"Option.getOrElseLazy","content":"Option.getOrElseLazy \ngetOrElseLazy \n\n Gets the value associated with the option or the supplied default value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#getOrElseF","title":"Option.getOrElseF","content":"Option.getOrElseF \ngetOrElseF \n\n Gets the value associated with the option or the supplied default value from a function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#getOrFail","title":"Option.getOrFail","content":"Option.getOrFail \ngetOrFail \n\n Gets the value associated with the option or fails with the supplied message.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#getOrRaise","title":"Option.getOrRaise","content":"Option.getOrRaise \ngetOrRaise \n\n Gets the value associated with the option or raises the supplied exception.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#getOrReraise","title":"Option.getOrReraise","content":"Option.getOrReraise \ngetOrReraise \n\n Gets the value associated with the option or reraises the supplied exception.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#getOrDefault","title":"Option.getOrDefault","content":"Option.getOrDefault \ngetOrDefault \n\n Gets the value associated with the option or the default value for the type.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#orElse","title":"Option.orElse","content":"Option.orElse \norElse \n\n Gets the option if Some x, otherwise the supplied default value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#orElseLazy","title":"Option.orElseLazy","content":"Option.orElseLazy \norElseLazy \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#filter","title":"Option.filter","content":"Option.filter \nfilter \n\n Applies a predicate to the option. If the predicate returns true, returns Some x, otherwise None.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#cast","title":"Option.cast","content":"Option.cast \ncast \n\n Attempts to cast an object. Returns None if unsuccessful.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#foldM","title":"Option.foldM","content":"Option.foldM \nfoldM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#sequence","title":"Option.sequence","content":"Option.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#mapM","title":"Option.mapM","content":"Option.mapM \nmapM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#getOrElseWith","title":"Option.getOrElseWith","content":"Option.getOrElseWith \ngetOrElseWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#option","title":"Option.option","content":"Option.option \noption \n\n Haskell-style maybe operator\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#fromTryPattern","title":"Option.fromTryPattern","content":"Option.fromTryPattern \nfromTryPattern \n\n transforms a function in the Try...(input, out output) style\n into a function of type: input -\u003E output Option\n Example: fromTryPattern(System.Double.TryParse)\n See Examples.Option\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#concat","title":"Option.concat","content":"Option.concat \nconcat \n\n Concatenates an option of option.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#isNone","title":"Option.isNone","content":"Option.isNone \nisNone \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#isSome","title":"Option.isSome","content":"Option.isSome \nisSome \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option.html#someIf","title":"Option.someIf","content":"Option.someIf \nsomeIf \n\n Checks condition on x - if true returns Some x else None\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html","title":"MaybeBuilder","content":"MaybeBuilder \n\n The maybe monad.\n This monad is my own and uses an \u0027T option. Others generally make their own Maybe\u003C\u0027T\u003E type from Option\u003C\u0027T\u003E.\n The builder approach is from Matthew Podwysocki\u0027s excellent Creating Extended Builders series http://codebetter.com/blogs/matthew.podwysocki/archive/2010/01/18/much-ado-about-monads-creating-extended-builders.aspx.\n \nMaybeBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMaybeBuilder.Bind \nBind \nMaybeBuilder.Combine \nCombine \nMaybeBuilder.Delay \nDelay \nMaybeBuilder.For \nFor \nMaybeBuilder.Return \nReturn \nMaybeBuilder.ReturnFrom \nReturnFrom \nMaybeBuilder.Run \nRun \nMaybeBuilder.TryFinally \nTryFinally \nMaybeBuilder.TryWith \nTryWith \nMaybeBuilder.Using \nUsing \nMaybeBuilder.While \nWhile \nMaybeBuilder.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"MaybeBuilder.\u0060\u0060.ctor\u0060\u0060","content":"MaybeBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#Bind","title":"MaybeBuilder.Bind","content":"MaybeBuilder.Bind \nBind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#Combine","title":"MaybeBuilder.Combine","content":"MaybeBuilder.Combine \nCombine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#Delay","title":"MaybeBuilder.Delay","content":"MaybeBuilder.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#For","title":"MaybeBuilder.For","content":"MaybeBuilder.For \nFor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#Return","title":"MaybeBuilder.Return","content":"MaybeBuilder.Return \nReturn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#ReturnFrom","title":"MaybeBuilder.ReturnFrom","content":"MaybeBuilder.ReturnFrom \nReturnFrom \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#Run","title":"MaybeBuilder.Run","content":"MaybeBuilder.Run \nRun \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#TryFinally","title":"MaybeBuilder.TryFinally","content":"MaybeBuilder.TryFinally \nTryFinally \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#TryWith","title":"MaybeBuilder.TryWith","content":"MaybeBuilder.TryWith \nTryWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#Using","title":"MaybeBuilder.Using","content":"MaybeBuilder.Using \nUsing \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#While","title":"MaybeBuilder.While","content":"MaybeBuilder.While \nWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-option-maybebuilder.html#Zero","title":"MaybeBuilder.Zero","content":"MaybeBuilder.Zero \nZero \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html","title":"Prelude","content":"Prelude \n \nPrelude.flip \nflip \nPrelude.flip3 \nflip3 \nPrelude.flip4 \nflip4 \nPrelude.curry \ncurry \nPrelude.uncurry \nuncurry \nPrelude.curry3 \ncurry3 \nPrelude.uncurry3 \nuncurry3 \nPrelude.swap \nswap \nPrelude.konst \nkonst \nPrelude.konst2 \nkonst2 \nPrelude.tuple2 \ntuple2 \nPrelude.tuple3 \ntuple3 \nPrelude.tuple4 \ntuple4 \nPrelude.tuple5 \ntuple5 \nPrelude.tuple6 \ntuple6 \nPrelude.fix \nfix \nPrelude.fix2 \nfix2 \nPrelude.fix3 \nfix3 \nPrelude.(^) \n(^) \nPrelude.undefined \nundefined \nPrelude.tee \ntee \nPrelude.(!\u003E) \n(!\u003E) \nPrelude.(|\u003E!) \n(|\u003E!) \nPrelude.reraise\u0027 \nreraise\u0027 \nPrelude.reraiseWith \nreraiseWith \nPrelude.toOption \ntoOption \nPrelude.tryWith \ntryWith \nPrelude.parse \nparse \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseExactWithOptions \nparseExactWithOptions \nPrelude.parseExact \nparseExact \nPrelude.parseWithOptions \nparseWithOptions \nPrelude.parse \nparse \nPrelude.parseExactWithOptions \nparseExactWithOptions \nPrelude.parseExact \nparseExact \nPrelude.(|Boolean|_|) \n(|Boolean|_|) \nPrelude.(|Byte|_|) \n(|Byte|_|) \nPrelude.(|SByte|_|) \n(|SByte|_|) \nPrelude.(|UInt16|_|) \n(|UInt16|_|) \nPrelude.(|Int16|_|) \n(|Int16|_|) \nPrelude.(|UInt32|_|) \n(|UInt32|_|) \nPrelude.(|Int32|_|) \n(|Int32|_|) \nPrelude.(|UInt64|_|) \n(|UInt64|_|) \nPrelude.(|Int64|_|) \n(|Int64|_|) \nPrelude.(|Decimal|_|) \n(|Decimal|_|) \nPrelude.(|Single|_|) \n(|Single|_|) \nPrelude.(|Double|_|) \n(|Double|_|) \nPrelude.(|DateTime|_|) \n(|DateTime|_|) \nPrelude.(|DateTimeOffset|_|) \n(|DateTimeOffset|_|)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#flip","title":"Prelude.flip","content":"Prelude.flip \nflip \n\n Transforms a function by flipping the order of its arguments.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#flip3","title":"Prelude.flip3","content":"Prelude.flip3 \nflip3 \n\n Transforms a function by flipping the order of its arguments.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#flip4","title":"Prelude.flip4","content":"Prelude.flip4 \nflip4 \n\n Transforms a function by flipping the order of its arguments.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#curry","title":"Prelude.curry","content":"Prelude.curry \ncurry \n\n Transforms an uncurried function to a curried function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#uncurry","title":"Prelude.uncurry","content":"Prelude.uncurry \nuncurry \n\n Transforms an uncurried function to a curried function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#curry3","title":"Prelude.curry3","content":"Prelude.curry3 \ncurry3 \n\n Transforms an uncurried function to a triple-curried function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#uncurry3","title":"Prelude.uncurry3","content":"Prelude.uncurry3 \nuncurry3 \n\n Transforms an uncurried function to a triple-curried function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#swap","title":"Prelude.swap","content":"Prelude.swap \nswap \n\n Swap the elements of a pair.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#konst","title":"Prelude.konst","content":"Prelude.konst \nkonst \n\n Given a value, creates a function with one ignored argument which returns the value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#konst2","title":"Prelude.konst2","content":"Prelude.konst2 \nkonst2 \n\n Given a value, creates a function with two ignored arguments which returns the value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#tuple2","title":"Prelude.tuple2","content":"Prelude.tuple2 \ntuple2 \n\n Creates a pair\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#tuple3","title":"Prelude.tuple3","content":"Prelude.tuple3 \ntuple3 \n\n Creates a 3-tuple\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#tuple4","title":"Prelude.tuple4","content":"Prelude.tuple4 \ntuple4 \n\n Creates a 4-tuple\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#tuple5","title":"Prelude.tuple5","content":"Prelude.tuple5 \ntuple5 \n\n Creates a 5-tuple\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#tuple6","title":"Prelude.tuple6","content":"Prelude.tuple6 \ntuple6 \n\n Creates a 6-tuple\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#fix","title":"Prelude.fix","content":"Prelude.fix \nfix \n\n Fixed point combinator.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#fix2","title":"Prelude.fix2","content":"Prelude.fix2 \nfix2 \n\n Fixed point combinator.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#fix3","title":"Prelude.fix3","content":"Prelude.fix3 \nfix3 \n\n Fixed point combinator.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(^)","title":"Prelude.(^)","content":"Prelude.(^) \n(^) \n\n Sequencing operator like Haskell\u0027s ($). Has better precedence than (\u003C|) due to the\n first character used in the symbol.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#undefined","title":"Prelude.undefined","content":"Prelude.undefined \nundefined \n\n Bottom value\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#tee","title":"Prelude.tee","content":"Prelude.tee \ntee \n\n Given a value, apply a function to it, ignore the result, then return the original value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(!\u003E)","title":"Prelude.(!\u003E)","content":"Prelude.(!\u003E) \n(!\u003E) \n\n Performs an implicit conversion using op_Implicit\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|\u003E!)","title":"Prelude.(|\u003E!)","content":"Prelude.(|\u003E!) \n(|\u003E!) \n\n Custom operator for \u0060tee\u0060: Given a value, apply a function to it, ignore the result, then return the original value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#reraise\u0027","title":"Prelude.reraise\u0027","content":"Prelude.reraise\u0027 \nreraise\u0027 \n\n Rethrows an exception. This can be used even outside of try-with block. The exception object (stacktrace, etc) is not changed.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#reraiseWith","title":"Prelude.reraiseWith","content":"Prelude.reraiseWith \nreraiseWith \n\n Rethrows an exception, but bebore that applies a function on it. This can be used even outside of try-with block. The exception object (stacktrace, etc) is not changed.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#toOption","title":"Prelude.toOption","content":"Prelude.toOption \ntoOption \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#tryWith","title":"Prelude.tryWith","content":"Prelude.tryWith \ntryWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseExactWithOptions","title":"Prelude.parseExactWithOptions","content":"Prelude.parseExactWithOptions \nparseExactWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseExact","title":"Prelude.parseExact","content":"Prelude.parseExact \nparseExact \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseWithOptions","title":"Prelude.parseWithOptions","content":"Prelude.parseWithOptions \nparseWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parse","title":"Prelude.parse","content":"Prelude.parse \nparse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseExactWithOptions","title":"Prelude.parseExactWithOptions","content":"Prelude.parseExactWithOptions \nparseExactWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#parseExact","title":"Prelude.parseExact","content":"Prelude.parseExact \nparseExact \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|Boolean|_|)","title":"Prelude.(|Boolean|_|)","content":"Prelude.(|Boolean|_|) \n(|Boolean|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|Byte|_|)","title":"Prelude.(|Byte|_|)","content":"Prelude.(|Byte|_|) \n(|Byte|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|SByte|_|)","title":"Prelude.(|SByte|_|)","content":"Prelude.(|SByte|_|) \n(|SByte|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|UInt16|_|)","title":"Prelude.(|UInt16|_|)","content":"Prelude.(|UInt16|_|) \n(|UInt16|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|Int16|_|)","title":"Prelude.(|Int16|_|)","content":"Prelude.(|Int16|_|) \n(|Int16|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|UInt32|_|)","title":"Prelude.(|UInt32|_|)","content":"Prelude.(|UInt32|_|) \n(|UInt32|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|Int32|_|)","title":"Prelude.(|Int32|_|)","content":"Prelude.(|Int32|_|) \n(|Int32|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|UInt64|_|)","title":"Prelude.(|UInt64|_|)","content":"Prelude.(|UInt64|_|) \n(|UInt64|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|Int64|_|)","title":"Prelude.(|Int64|_|)","content":"Prelude.(|Int64|_|) \n(|Int64|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|Decimal|_|)","title":"Prelude.(|Decimal|_|)","content":"Prelude.(|Decimal|_|) \n(|Decimal|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|Single|_|)","title":"Prelude.(|Single|_|)","content":"Prelude.(|Single|_|) \n(|Single|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|Double|_|)","title":"Prelude.(|Double|_|)","content":"Prelude.(|Double|_|) \n(|Double|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|DateTime|_|)","title":"Prelude.(|DateTime|_|)","content":"Prelude.(|DateTime|_|) \n(|DateTime|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-prelude.html#(|DateTimeOffset|_|)","title":"Prelude.(|DateTimeOffset|_|)","content":"Prelude.(|DateTimeOffset|_|) \n(|DateTimeOffset|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html","title":"Reader","content":"Reader \n \nReader.Reader\u003C\u0027R, \u0027T\u003E \nReader\u003C\u0027R, \u0027T\u003E \nReader.ReaderBuilder \nReaderBuilder \nReader.bind \nbind \nReader.reader \nreader \nReader.ask \nask \nReader.asks \nasks \nReader.local \nlocal \nReader.returnM \nreturnM \nReader.(\u003E\u003E=) \n(\u003E\u003E=) \nReader.(=\u003C\u003C) \n(=\u003C\u003C) \nReader.(\u003C*\u003E) \n(\u003C*\u003E) \nReader.ap \nap \nReader.map \nmap \nReader.(\u003C!\u003E) \n(\u003C!\u003E) \nReader.lift2 \nlift2 \nReader.( *\u003E ) \n( *\u003E ) \nReader.( \u003C* ) \n( \u003C* ) \nReader.(\u003E\u003E.) \n(\u003E\u003E.) \nReader.(\u003E=\u003E) \n(\u003E=\u003E) \nReader.(\u003C=\u003C) \n(\u003C=\u003C) \nReader.foldM \nfoldM \nReader.sequence \nsequence \nReader.mapM \nmapM"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#bind","title":"Reader.bind","content":"Reader.bind \nbind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#reader","title":"Reader.reader","content":"Reader.reader \nreader \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#ask","title":"Reader.ask","content":"Reader.ask \nask \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#asks","title":"Reader.asks","content":"Reader.asks \nasks \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#local","title":"Reader.local","content":"Reader.local \nlocal \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#returnM","title":"Reader.returnM","content":"Reader.returnM \nreturnM \n\n Inject a value into the Reader type\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#(\u003E\u003E=)","title":"Reader.(\u003E\u003E=)","content":"Reader.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Sequentially compose two actions, passing any value produced by the first as an argument to the second.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#(=\u003C\u003C)","title":"Reader.(=\u003C\u003C)","content":"Reader.(=\u003C\u003C) \n(=\u003C\u003C) \n\n Flipped \u003E\u003E=\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#(\u003C*\u003E)","title":"Reader.(\u003C*\u003E)","content":"Reader.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#ap","title":"Reader.ap","content":"Reader.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#map","title":"Reader.map","content":"Reader.map \nmap \n\n Transforms a Reader value by using a specified mapping function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#(\u003C!\u003E)","title":"Reader.(\u003C!\u003E)","content":"Reader.(\u003C!\u003E) \n(\u003C!\u003E) \n\n Infix map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#lift2","title":"Reader.lift2","content":"Reader.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#( *\u003E )","title":"Reader.( *\u003E )","content":"Reader.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#( \u003C* )","title":"Reader.( \u003C* )","content":"Reader.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#(\u003E\u003E.)","title":"Reader.(\u003E\u003E.)","content":"Reader.(\u003E\u003E.) \n(\u003E\u003E.) \n\n Sequentially compose two reader actions, discarding any value produced by the first\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#(\u003E=\u003E)","title":"Reader.(\u003E=\u003E)","content":"Reader.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Left-to-right Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#(\u003C=\u003C)","title":"Reader.(\u003C=\u003C)","content":"Reader.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Right-to-left Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#foldM","title":"Reader.foldM","content":"Reader.foldM \nfoldM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#sequence","title":"Reader.sequence","content":"Reader.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader.html#mapM","title":"Reader.mapM","content":"Reader.mapM \nmapM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-reader-2.html","title":"Reader\u003C\u0027R, \u0027T\u003E","content":"Reader\u003C\u0027R, \u0027T\u003E \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html","title":"ReaderBuilder","content":"ReaderBuilder \n\n The reader monad.\n This monad comes from Matthew Podwysocki\u0027s http://codebetter.com/blogs/matthew.podwysocki/archive/2010/01/07/much-ado-about-monads-reader-edition.aspx.\n \nReaderBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nReaderBuilder.Bind \nBind \nReaderBuilder.Combine \nCombine \nReaderBuilder.Delay \nDelay \nReaderBuilder.For \nFor \nReaderBuilder.Return \nReturn \nReaderBuilder.ReturnFrom \nReturnFrom \nReaderBuilder.TryFinally \nTryFinally \nReaderBuilder.TryWith \nTryWith \nReaderBuilder.Using \nUsing \nReaderBuilder.While \nWhile \nReaderBuilder.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"ReaderBuilder.\u0060\u0060.ctor\u0060\u0060","content":"ReaderBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#Bind","title":"ReaderBuilder.Bind","content":"ReaderBuilder.Bind \nBind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#Combine","title":"ReaderBuilder.Combine","content":"ReaderBuilder.Combine \nCombine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#Delay","title":"ReaderBuilder.Delay","content":"ReaderBuilder.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#For","title":"ReaderBuilder.For","content":"ReaderBuilder.For \nFor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#Return","title":"ReaderBuilder.Return","content":"ReaderBuilder.Return \nReturn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#ReturnFrom","title":"ReaderBuilder.ReturnFrom","content":"ReaderBuilder.ReturnFrom \nReturnFrom \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#TryFinally","title":"ReaderBuilder.TryFinally","content":"ReaderBuilder.TryFinally \nTryFinally \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#TryWith","title":"ReaderBuilder.TryWith","content":"ReaderBuilder.TryWith \nTryWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#Using","title":"ReaderBuilder.Using","content":"ReaderBuilder.Using \nUsing \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#While","title":"ReaderBuilder.While","content":"ReaderBuilder.While \nWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-reader-readerbuilder.html#Zero","title":"ReaderBuilder.Zero","content":"ReaderBuilder.Zero \nZero \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html","title":"Result","content":"Result \n \nResult.ResultBuilder \nResultBuilder \nResult.returnM \nreturnM \nResult.get \nget \nResult.protect \nprotect \nResult.cast \ncast \nResult.ap \nap \nResult.(\u003C*\u003E) \n(\u003C*\u003E) \nResult.(\u003C!\u003E) \n(\u003C!\u003E) \nResult.lift2 \nlift2 \nResult.( *\u003E ) \n( *\u003E ) \nResult.( \u003C* ) \n( \u003C* ) \nResult.(\u003E\u003E=) \n(\u003E\u003E=) \nResult.(=\u003C\u003C) \n(=\u003C\u003C) \nResult.(\u003E\u003E.) \n(\u003E\u003E.) \nResult.(\u003E=\u003E) \n(\u003E=\u003E) \nResult.(\u003C=\u003C) \n(\u003C=\u003C) \nResult.bimap \nbimap \nResult.ofOption \nofOption \nResult.ofOptionF \nofOptionF \nResult.sequence \nsequence \nResult.defaultWith \ndefaultWith \nResult.defaultValue \ndefaultValue \nResult.either \neither \nResult.result \nresult"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#returnM","title":"Result.returnM","content":"Result.returnM \nreturnM \n\n Inject a value into the Result type\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#get","title":"Result.get","content":"Result.get \nget \n\n If Result is Ok, return its value.\n Otherwise throw ArgumentException.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#protect","title":"Result.protect","content":"Result.protect \nprotect \n\n Wraps a function, encapsulates any exception thrown within to a Result\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#cast","title":"Result.cast","content":"Result.cast \ncast \n\n Attempts to cast an object.\n Stores the cast value in Ok if successful, otherwise stores the exception in Error\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#ap","title":"Result.ap","content":"Result.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#(\u003C*\u003E)","title":"Result.(\u003C*\u003E)","content":"Result.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#(\u003C!\u003E)","title":"Result.(\u003C!\u003E)","content":"Result.(\u003C!\u003E) \n(\u003C!\u003E) \n\n Infix map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#lift2","title":"Result.lift2","content":"Result.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#( *\u003E )","title":"Result.( *\u003E )","content":"Result.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#( \u003C* )","title":"Result.( \u003C* )","content":"Result.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#(\u003E\u003E=)","title":"Result.(\u003E\u003E=)","content":"Result.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Sequentially compose two actions, passing any value produced by the first as an argument to the second.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#(=\u003C\u003C)","title":"Result.(=\u003C\u003C)","content":"Result.(=\u003C\u003C) \n(=\u003C\u003C) \n\n Flipped \u003E\u003E=\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#(\u003E\u003E.)","title":"Result.(\u003E\u003E.)","content":"Result.(\u003E\u003E.) \n(\u003E\u003E.) \n\n Sequentially compose two either actions, discarding any value produced by the first\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#(\u003E=\u003E)","title":"Result.(\u003E=\u003E)","content":"Result.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Left-to-right Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#(\u003C=\u003C)","title":"Result.(\u003C=\u003C)","content":"Result.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Right-to-left Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#bimap","title":"Result.bimap","content":"Result.bimap \nbimap \n\n Maps both parts of a Choice.\n Applies the first function if Result is Ok.\n Otherwise applies the second function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#ofOption","title":"Result.ofOption","content":"Result.ofOption \nofOption \n\n If Some value, returns Ok value. Otherwise, returns the supplied default value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#ofOptionF","title":"Result.ofOptionF","content":"Result.ofOptionF \nofOptionF \n\n If Some value, returns Ok value. Otherwise, returns the supplied default value from a function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#sequence","title":"Result.sequence","content":"Result.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#defaultWith","title":"Result.defaultWith","content":"Result.defaultWith \ndefaultWith \n\n Gets the value of result if the result is Ok, otherwise evaluates f and returns the result.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#defaultValue","title":"Result.defaultValue","content":"Result.defaultValue \ndefaultValue \n\n Gets the value of result if the result is Ok, otherwise returns the specified default value v.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#either","title":"Result.either","content":"Result.either \neither \n\n Case analysis for the Result type. If the value is Ok x, apply the first function to x; if it is Error e, apply the second function to e.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result.html#result","title":"Result.result","content":"Result.result \nresult \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html","title":"ResultBuilder","content":"ResultBuilder \n \nResultBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nResultBuilder.Bind \nBind \nResultBuilder.Delay \nDelay \nResultBuilder.For \nFor \nResultBuilder.Return \nReturn \nResultBuilder.ReturnFrom \nReturnFrom \nResultBuilder.Run \nRun \nResultBuilder.TryFinally \nTryFinally \nResultBuilder.TryWith \nTryWith \nResultBuilder.Using \nUsing \nResultBuilder.While \nWhile \nResultBuilder.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"ResultBuilder.\u0060\u0060.ctor\u0060\u0060","content":"ResultBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#Bind","title":"ResultBuilder.Bind","content":"ResultBuilder.Bind \nBind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#Delay","title":"ResultBuilder.Delay","content":"ResultBuilder.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#For","title":"ResultBuilder.For","content":"ResultBuilder.For \nFor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#Return","title":"ResultBuilder.Return","content":"ResultBuilder.Return \nReturn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#ReturnFrom","title":"ResultBuilder.ReturnFrom","content":"ResultBuilder.ReturnFrom \nReturnFrom \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#Run","title":"ResultBuilder.Run","content":"ResultBuilder.Run \nRun \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#TryFinally","title":"ResultBuilder.TryFinally","content":"ResultBuilder.TryFinally \nTryFinally \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#TryWith","title":"ResultBuilder.TryWith","content":"ResultBuilder.TryWith \nTryWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#Using","title":"ResultBuilder.Using","content":"ResultBuilder.Using \nUsing \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#While","title":"ResultBuilder.While","content":"ResultBuilder.While \nWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-result-resultbuilder.html#Zero","title":"ResultBuilder.Zero","content":"ResultBuilder.Zero \nZero \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-semigroup.html","title":"Semigroup","content":"Semigroup \n \nSemigroup.min \nmin \nSemigroup.max \nmax"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-semigroup.html#min","title":"Semigroup.min","content":"Semigroup.min \nmin \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-semigroup.html#max","title":"Semigroup.max","content":"Semigroup.max \nmax \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html","title":"State","content":"State \n \nState.State\u003C\u0027T, \u0027State\u003E \nState\u003C\u0027T, \u0027State\u003E \nState.StateBuilder \nStateBuilder \nState.getState \ngetState \nState.putState \nputState \nState.eval \neval \nState.exec \nexec \nState.empty \nempty \nState.bind \nbind \nState.state \nstate \nState.returnM \nreturnM \nState.(\u003E\u003E=) \n(\u003E\u003E=) \nState.(=\u003C\u003C) \n(=\u003C\u003C) \nState.(\u003C*\u003E) \n(\u003C*\u003E) \nState.ap \nap \nState.map \nmap \nState.(\u003C!\u003E) \n(\u003C!\u003E) \nState.lift2 \nlift2 \nState.( *\u003E ) \n( *\u003E ) \nState.( \u003C* ) \n( \u003C* ) \nState.(\u003E\u003E.) \n(\u003E\u003E.) \nState.(\u003E=\u003E) \n(\u003E=\u003E) \nState.(\u003C=\u003C) \n(\u003C=\u003C) \nState.foldM \nfoldM \nState.sequence \nsequence \nState.mapM \nmapM"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#getState","title":"State.getState","content":"State.getState \ngetState \n\n Returns state value from the monad.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#putState","title":"State.putState","content":"State.putState \nputState \n\n Replaces state inside the monad.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#eval","title":"State.eval","content":"State.eval \neval \n\n Evaluates a state computation with the given initial state and returns the final value, discarding the final state.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#exec","title":"State.exec","content":"State.exec \nexec \n\n Evaluates a state computation with the given initial state and returns the final state, discarding the final value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#empty","title":"State.empty","content":"State.empty \nempty \n\n Instance of state monad without value\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#bind","title":"State.bind","content":"State.bind \nbind \n\n Sequentially compose two actions, passing any value produced by the first as an argument to the second.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#state","title":"State.state","content":"State.state \nstate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#returnM","title":"State.returnM","content":"State.returnM \nreturnM \n\n Inject a value into the State type\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#(\u003E\u003E=)","title":"State.(\u003E\u003E=)","content":"State.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Sequentially compose two actions, passing any value produced by the first as an argument to the second.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#(=\u003C\u003C)","title":"State.(=\u003C\u003C)","content":"State.(=\u003C\u003C) \n(=\u003C\u003C) \n\n Flipped \u003E\u003E=\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#(\u003C*\u003E)","title":"State.(\u003C*\u003E)","content":"State.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#ap","title":"State.ap","content":"State.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#map","title":"State.map","content":"State.map \nmap \n\n Transforms a State value by using a specified mapping function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#(\u003C!\u003E)","title":"State.(\u003C!\u003E)","content":"State.(\u003C!\u003E) \n(\u003C!\u003E) \n\n Infix map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#lift2","title":"State.lift2","content":"State.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#( *\u003E )","title":"State.( *\u003E )","content":"State.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#( \u003C* )","title":"State.( \u003C* )","content":"State.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#(\u003E\u003E.)","title":"State.(\u003E\u003E.)","content":"State.(\u003E\u003E.) \n(\u003E\u003E.) \n\n Sequentially compose two state actions, discarding any value produced by the first\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#(\u003E=\u003E)","title":"State.(\u003E=\u003E)","content":"State.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Left-to-right Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#(\u003C=\u003C)","title":"State.(\u003C=\u003C)","content":"State.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Right-to-left Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#foldM","title":"State.foldM","content":"State.foldM \nfoldM \n\n Fold encapsulated in the State monad\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#sequence","title":"State.sequence","content":"State.sequence \nsequence \n\n Evaluates each monadic action in the list from left to right, and collects the results.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state.html#mapM","title":"State.mapM","content":"State.mapM \nmapM \n\n Maps each element of a list to a monadic action, evaluates these actions from left to right, and collects the results.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-state-2.html","title":"State\u003C\u0027T, \u0027State\u003E","content":"State\u003C\u0027T, \u0027State\u003E \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html","title":"StateBuilder","content":"StateBuilder \n\n The state monad.\n The algorithm is adjusted from my original work off of Brian Beckman\u0027s http://channel9.msdn.com/shows/Going\u002BDeep/Brian-Beckman-The-Zen-of-Expressing-State-The-State-Monad/.\n The approach was adjusted from Matthew Podwysocki\u0027s http://codebetter.com/blogs/matthew.podwysocki/archive/2009/12/30/much-ado-about-monads-state-edition.aspx and mirrors his final result.\n \nStateBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nStateBuilder.Bind \nBind \nStateBuilder.Combine \nCombine \nStateBuilder.Delay \nDelay \nStateBuilder.For \nFor \nStateBuilder.Return \nReturn \nStateBuilder.ReturnFrom \nReturnFrom \nStateBuilder.TryFinally \nTryFinally \nStateBuilder.TryWith \nTryWith \nStateBuilder.Using \nUsing \nStateBuilder.While \nWhile \nStateBuilder.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"StateBuilder.\u0060\u0060.ctor\u0060\u0060","content":"StateBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#Bind","title":"StateBuilder.Bind","content":"StateBuilder.Bind \nBind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#Combine","title":"StateBuilder.Combine","content":"StateBuilder.Combine \nCombine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#Delay","title":"StateBuilder.Delay","content":"StateBuilder.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#For","title":"StateBuilder.For","content":"StateBuilder.For \nFor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#Return","title":"StateBuilder.Return","content":"StateBuilder.Return \nReturn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#ReturnFrom","title":"StateBuilder.ReturnFrom","content":"StateBuilder.ReturnFrom \nReturnFrom \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#TryFinally","title":"StateBuilder.TryFinally","content":"StateBuilder.TryFinally \nTryFinally \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#TryWith","title":"StateBuilder.TryWith","content":"StateBuilder.TryWith \nTryWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#Using","title":"StateBuilder.Using","content":"StateBuilder.Using \nUsing \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#While","title":"StateBuilder.While","content":"StateBuilder.While \nWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-state-statebuilder.html#Zero","title":"StateBuilder.Zero","content":"StateBuilder.Zero \nZero \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm.html","title":"Stm","content":"Stm \nThe Software Transactional Memory monad. \nStm.ArrayQueue \nArrayQueue \nStm.Core \nCore \nStm.ListQueue \nListQueue"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue.html","title":"ArrayQueue","content":"ArrayQueue \n \nArrayQueue.Queue\u003C\u0027T\u003E \nQueue\u003C\u0027T\u003E \nArrayQueue.newQueueClass \nnewQueueClass \nArrayQueue.newQueueStruct \nnewQueueStruct \nArrayQueue.enqueue \nenqueue \nArrayQueue.dequeue \ndequeue \nArrayQueue.toList \ntoList \nArrayQueue.ofList \nofList"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue.html#newQueueClass","title":"ArrayQueue.newQueueClass","content":"ArrayQueue.newQueueClass \nnewQueueClass \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue.html#newQueueStruct","title":"ArrayQueue.newQueueStruct","content":"ArrayQueue.newQueueStruct \nnewQueueStruct \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue.html#enqueue","title":"ArrayQueue.enqueue","content":"ArrayQueue.enqueue \nenqueue \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue.html#dequeue","title":"ArrayQueue.dequeue","content":"ArrayQueue.dequeue \ndequeue \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue.html#toList","title":"ArrayQueue.toList","content":"ArrayQueue.toList \ntoList \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue.html#ofList","title":"ArrayQueue.ofList","content":"ArrayQueue.ofList \nofList \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue-queue-1.html","title":"Queue\u003C\u0027T\u003E","content":"Queue\u003C\u0027T\u003E \n \nQueue\u003C\u0027T\u003E.head \nhead \nQueue\u003C\u0027T\u003E.used \nused \nQueue\u003C\u0027T\u003E.len \nlen \nQueue\u003C\u0027T\u003E.a \na"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue-queue-1.html#head","title":"Queue\u003C\u0027T\u003E.head","content":"Queue\u003C\u0027T\u003E.head \nhead \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue-queue-1.html#used","title":"Queue\u003C\u0027T\u003E.used","content":"Queue\u003C\u0027T\u003E.used \nused \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue-queue-1.html#len","title":"Queue\u003C\u0027T\u003E.len","content":"Queue\u003C\u0027T\u003E.len \nlen \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-arrayqueue-queue-1.html#a","title":"Queue\u003C\u0027T\u003E.a","content":"Queue\u003C\u0027T\u003E.a \na \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html","title":"Core","content":"Core \n \nCore.Stm\u003C\u0027T\u003E \nStm\u003C\u0027T\u003E \nCore.StmBuilder \nStmBuilder \nCore.TLog \nTLog \nCore.TVar \nTVar \nCore.TVar\u003C\u0027T\u003E \nTVar\u003C\u0027T\u003E \nCore.newTVar \nnewTVar \nCore.readTVar \nreadTVar \nCore.writeTVar \nwriteTVar \nCore.retry \nretry \nCore.orElse \norElse \nCore.atomically \natomically \nCore.stm \nstm \nCore.ifM \nifM \nCore.liftM \nliftM \nCore.sequence \nsequence \nCore.mapM \nmapM \nCore.sequence_ \nsequence_ \nCore.mapM_ \nmapM_ \nCore.filterM \nfilterM"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#newTVar","title":"Core.newTVar","content":"Core.newTVar \nnewTVar \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#readTVar","title":"Core.readTVar","content":"Core.readTVar \nreadTVar \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#writeTVar","title":"Core.writeTVar","content":"Core.writeTVar \nwriteTVar \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#retry","title":"Core.retry","content":"Core.retry \nretry \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#orElse","title":"Core.orElse","content":"Core.orElse \norElse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#atomically","title":"Core.atomically","content":"Core.atomically \natomically \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#stm","title":"Core.stm","content":"Core.stm \nstm \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#ifM","title":"Core.ifM","content":"Core.ifM \nifM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#liftM","title":"Core.liftM","content":"Core.liftM \nliftM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#sequence","title":"Core.sequence","content":"Core.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#mapM","title":"Core.mapM","content":"Core.mapM \nmapM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#sequence_","title":"Core.sequence_","content":"Core.sequence_ \nsequence_ \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#mapM_","title":"Core.mapM_","content":"Core.mapM_ \nmapM_ \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core.html#filterM","title":"Core.filterM","content":"Core.filterM \nfilterM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-stm-1.html","title":"Stm\u003C\u0027T\u003E","content":"Stm\u003C\u0027T\u003E \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-stmbuilder.html","title":"StmBuilder","content":"StmBuilder \n \nStmBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nStmBuilder.Bind \nBind \nStmBuilder.Combine \nCombine \nStmBuilder.Delay \nDelay \nStmBuilder.Let \nLet \nStmBuilder.Return \nReturn \nStmBuilder.ReturnFrom \nReturnFrom \nStmBuilder.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-stmbuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"StmBuilder.\u0060\u0060.ctor\u0060\u0060","content":"StmBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-stmbuilder.html#Bind","title":"StmBuilder.Bind","content":"StmBuilder.Bind \nBind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-stmbuilder.html#Combine","title":"StmBuilder.Combine","content":"StmBuilder.Combine \nCombine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-stmbuilder.html#Delay","title":"StmBuilder.Delay","content":"StmBuilder.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-stmbuilder.html#Let","title":"StmBuilder.Let","content":"StmBuilder.Let \nLet \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-stmbuilder.html#Return","title":"StmBuilder.Return","content":"StmBuilder.Return \nReturn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-stmbuilder.html#ReturnFrom","title":"StmBuilder.ReturnFrom","content":"StmBuilder.ReturnFrom \nReturnFrom \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-stmbuilder.html#Zero","title":"StmBuilder.Zero","content":"StmBuilder.Zero \nZero \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html","title":"TLog","content":"TLog \n \nTLog.OrElse \nOrElse \nTLog.OrElse \nOrElse \nTLog.ReadTVar \nReadTVar \nTLog.Retry \nRetry \nTLog.Retry \nRetry \nTLog.WriteTVar \nWriteTVar \nTLog.Atomic \nAtomic \nTLog.Atomic \nAtomic \nTLog.NewTVar \nNewTVar \nTLog.NewTVarBoxedStruct \nNewTVarBoxedStruct \nTLog.NewTVarClass \nNewTVarClass \nTLog.NewTVarStruct \nNewTVarStruct"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#OrElse","title":"TLog.OrElse","content":"TLog.OrElse \nOrElse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#OrElse","title":"TLog.OrElse","content":"TLog.OrElse \nOrElse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#ReadTVar","title":"TLog.ReadTVar","content":"TLog.ReadTVar \nReadTVar \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#Retry","title":"TLog.Retry","content":"TLog.Retry \nRetry \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#Retry","title":"TLog.Retry","content":"TLog.Retry \nRetry \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#WriteTVar","title":"TLog.WriteTVar","content":"TLog.WriteTVar \nWriteTVar \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#Atomic","title":"TLog.Atomic","content":"TLog.Atomic \nAtomic \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#Atomic","title":"TLog.Atomic","content":"TLog.Atomic \nAtomic \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#NewTVar","title":"TLog.NewTVar","content":"TLog.NewTVar \nNewTVar \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#NewTVarBoxedStruct","title":"TLog.NewTVarBoxedStruct","content":"TLog.NewTVarBoxedStruct \nNewTVarBoxedStruct \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#NewTVarClass","title":"TLog.NewTVarClass","content":"TLog.NewTVarClass \nNewTVarClass \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tlog.html#NewTVarStruct","title":"TLog.NewTVarStruct","content":"TLog.NewTVarStruct \nNewTVarStruct \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tvar.html","title":"TVar","content":"TVar \n \nTVar.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tvar.html#\u0060\u0060.ctor\u0060\u0060","title":"TVar.\u0060\u0060.ctor\u0060\u0060","content":"TVar.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-core-tvar-1.html","title":"TVar\u003C\u0027T\u003E","content":"TVar\u003C\u0027T\u003E \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue.html","title":"ListQueue","content":"ListQueue \n \nListQueue.Node\u003C\u0027T\u003E \nNode\u003C\u0027T\u003E \nListQueue.Queue\u003C\u0027T\u003E \nQueue\u003C\u0027T\u003E \nListQueue.new_queue \nnew_queue \nListQueue.enqueue \nenqueue \nListQueue.ifM \nifM \nListQueue.dequeue \ndequeue \nListQueue.liftM \nliftM \nListQueue.toList \ntoList \nListQueue.ofList \nofList"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue.html#new_queue","title":"ListQueue.new_queue","content":"ListQueue.new_queue \nnew_queue \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue.html#enqueue","title":"ListQueue.enqueue","content":"ListQueue.enqueue \nenqueue \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue.html#ifM","title":"ListQueue.ifM","content":"ListQueue.ifM \nifM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue.html#dequeue","title":"ListQueue.dequeue","content":"ListQueue.dequeue \ndequeue \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue.html#liftM","title":"ListQueue.liftM","content":"ListQueue.liftM \nliftM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue.html#toList","title":"ListQueue.toList","content":"ListQueue.toList \ntoList \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue.html#ofList","title":"ListQueue.ofList","content":"ListQueue.ofList \nofList \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue-node-1.html","title":"Node\u003C\u0027T\u003E","content":"Node\u003C\u0027T\u003E \n \nNode\u003C\u0027T\u003E.Cons \nCons \nNode\u003C\u0027T\u003E.Nil \nNil"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue-node-1.html#Cons","title":"Node\u003C\u0027T\u003E.Cons","content":"Node\u003C\u0027T\u003E.Cons \nCons \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue-node-1.html#Nil","title":"Node\u003C\u0027T\u003E.Nil","content":"Node\u003C\u0027T\u003E.Nil \nNil \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue-queue-1.html","title":"Queue\u003C\u0027T\u003E","content":"Queue\u003C\u0027T\u003E \n \nQueue\u003C\u0027T\u003E.head \nhead \nQueue\u003C\u0027T\u003E.last \nlast"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue-queue-1.html#head","title":"Queue\u003C\u0027T\u003E.head","content":"Queue\u003C\u0027T\u003E.head \nhead \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stm-listqueue-queue-1.html#last","title":"Queue\u003C\u0027T\u003E.last","content":"Queue\u003C\u0027T\u003E.last \nlast \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html","title":"String","content":"String \n\n Functional wrappers around String instance methods\n \nString.contains \ncontains \nString.compare \ncompare \nString.compareIgnoreCase \ncompareIgnoreCase \nString.endsWith \nendsWith \nString.endsWith\u0027 \nendsWith\u0027 \nString.endsWith\u0027\u0027 \nendsWith\u0027\u0027 \nString.equals \nequals \nString.equalsIgnoreCase \nequalsIgnoreCase \nString.indexOfChar \nindexOfChar \nString.indexOfChar\u0027 \nindexOfChar\u0027 \nString.indexOfChar\u0027\u0027 \nindexOfChar\u0027\u0027 \nString.indexOfString \nindexOfString \nString.indexOfString\u0027 \nindexOfString\u0027 \nString.indexOfString\u0027\u0027 \nindexOfString\u0027\u0027 \nString.indexOfStringWithComparison \nindexOfStringWithComparison \nString.indexOfStringWithComparison\u0027 \nindexOfStringWithComparison\u0027 \nString.indexOfStringWithComparison\u0027\u0027 \nindexOfStringWithComparison\u0027\u0027 \nString.indexOfAny \nindexOfAny \nString.indexOfAny\u0027 \nindexOfAny\u0027 \nString.indexOfAny\u0027\u0027 \nindexOfAny\u0027\u0027 \nString.insert \ninsert \nString.isNormalized \nisNormalized \nString.isNormalized\u0027 \nisNormalized\u0027 \nString.lastIndexOfChar \nlastIndexOfChar \nString.lastIndexOfChar\u0027 \nlastIndexOfChar\u0027 \nString.lastIndexOfChar\u0027\u0027 \nlastIndexOfChar\u0027\u0027 \nString.lastIndexOfString \nlastIndexOfString \nString.lastIndexOfString\u0027 \nlastIndexOfString\u0027 \nString.lastIndexOfString\u0027\u0027 \nlastIndexOfString\u0027\u0027 \nString.lastIndexOfStringWithComparison \nlastIndexOfStringWithComparison \nString.lastIndexOfStringWithComparison\u0027 \nlastIndexOfStringWithComparison\u0027 \nString.lastIndexOfStringWithComparison\u0027\u0027 \nlastIndexOfStringWithComparison\u0027\u0027 \nString.normalize \nnormalize \nString.normalize\u0027 \nnormalize\u0027 \nString.padLeft \npadLeft \nString.padLeft\u0027 \npadLeft\u0027 \nString.padRight \npadRight \nString.padRight\u0027 \npadRight\u0027 \nString.remove \nremove \nString.remove\u0027 \nremove\u0027 \nString.replace \nreplace \nString.replace\u0027 \nreplace\u0027 \nString.splitChar \nsplitChar \nString.splitChar\u0027 \nsplitChar\u0027 \nString.splitCharWithOptions \nsplitCharWithOptions \nString.splitCharWithOptions\u0027 \nsplitCharWithOptions\u0027 \nString.splitString \nsplitString \nString.splitString\u0027 \nsplitString\u0027 \nString.startsWith \nstartsWith \nString.startsWith\u0027 \nstartsWith\u0027 \nString.startsWith\u0027\u0027 \nstartsWith\u0027\u0027 \nString.substring \nsubstring \nString.substring\u0027 \nsubstring\u0027 \nString.toCharArray \ntoCharArray \nString.toCharArray\u0027 \ntoCharArray\u0027 \nString.toLower \ntoLower \nString.toLower\u0027 \ntoLower\u0027 \nString.toLowerInvariant \ntoLowerInvariant \nString.toUpper \ntoUpper \nString.toUpper\u0027 \ntoUpper\u0027 \nString.toUpperInvariant \ntoUpperInvariant \nString.trim \ntrim \nString.trim\u0027 \ntrim\u0027 \nString.trimEnd \ntrimEnd \nString.trimStart \ntrimStart"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#contains","title":"String.contains","content":"String.contains \ncontains \n\n Returns a value indicating whether a specified substring occurs within this string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#compare","title":"String.compare","content":"String.compare \ncompare \n\n Compares two specified String objects and returns an integer that indicates their relative position in the sort order.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#compareIgnoreCase","title":"String.compareIgnoreCase","content":"String.compareIgnoreCase \ncompareIgnoreCase \n\n Compares two specified String objects and returns an integer that indicates their relative position in the sort order. Compare strings using ordinal (binary) sort rules and ignoring the case of the strings being compared.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#endsWith","title":"String.endsWith","content":"String.endsWith \nendsWith \n\n Determines whether the end of this string instance matches the specified string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#endsWith\u0027","title":"String.endsWith\u0027","content":"String.endsWith\u0027 \nendsWith\u0027 \n\n Determines whether the end of this string instance matches the specified string when compared using the specified culture.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#endsWith\u0027\u0027","title":"String.endsWith\u0027\u0027","content":"String.endsWith\u0027\u0027 \nendsWith\u0027\u0027 \n\n Determines whether the end of this string instance matches the specified string when compared using the specified comparison option.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#equals","title":"String.equals","content":"String.equals \nequals \n\n Determines whether two specified String objects have the same value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#equalsIgnoreCase","title":"String.equalsIgnoreCase","content":"String.equalsIgnoreCase \nequalsIgnoreCase \n\n Determines whether two specified String objects have the same value. Compare strings using ordinal (binary) sort rules and ignoring the case of the strings being compared.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfChar","title":"String.indexOfChar","content":"String.indexOfChar \nindexOfChar \n\n Reports the zero-based index of the first occurrence of the specified Unicode character in this string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfChar\u0027","title":"String.indexOfChar\u0027","content":"String.indexOfChar\u0027 \nindexOfChar\u0027 \n\n Reports the zero-based index of the first occurrence of the specified Unicode character in this string. The search starts at a specified character position.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfChar\u0027\u0027","title":"String.indexOfChar\u0027\u0027","content":"String.indexOfChar\u0027\u0027 \nindexOfChar\u0027\u0027 \n\n Reports the zero-based index of the first occurrence of the specified character in this instance. The search starts at a specified character position and examines a specified number of character positions.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfString","title":"String.indexOfString","content":"String.indexOfString \nindexOfString \n\n Reports the zero-based index of the first occurrence of the specified string in this instance.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfString\u0027","title":"String.indexOfString\u0027","content":"String.indexOfString\u0027 \nindexOfString\u0027 \n\n Reports the zero-based index of the first occurrence of the specified string in this instance. The search starts at a specified character position.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfString\u0027\u0027","title":"String.indexOfString\u0027\u0027","content":"String.indexOfString\u0027\u0027 \nindexOfString\u0027\u0027 \n\n Reports the zero-based index of the first occurrence of the specified string in this instance. The search starts at a specified character position and examines a specified number of character positions.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfStringWithComparison","title":"String.indexOfStringWithComparison","content":"String.indexOfStringWithComparison \nindexOfStringWithComparison \n\n Reports the zero-based index of the first occurrence of the specified string in the current String object. A parameter specifies the type of search to use for the specified string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfStringWithComparison\u0027","title":"String.indexOfStringWithComparison\u0027","content":"String.indexOfStringWithComparison\u0027 \nindexOfStringWithComparison\u0027 \n\n Reports the zero-based index of the first occurrence of the specified string in the current String object. Parameters specify the starting search position in the current string and the type of search to use for the specified string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfStringWithComparison\u0027\u0027","title":"String.indexOfStringWithComparison\u0027\u0027","content":"String.indexOfStringWithComparison\u0027\u0027 \nindexOfStringWithComparison\u0027\u0027 \n\n Reports the zero-based index of the first occurrence of the specified string in the current String object. Parameters specify the starting search position in the current string, the number of characters in the current string to search, and the type of search to use for the specified string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfAny","title":"String.indexOfAny","content":"String.indexOfAny \nindexOfAny \n\n Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfAny\u0027","title":"String.indexOfAny\u0027","content":"String.indexOfAny\u0027 \nindexOfAny\u0027 \n\n Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters. The search starts at a specified character position.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#indexOfAny\u0027\u0027","title":"String.indexOfAny\u0027\u0027","content":"String.indexOfAny\u0027\u0027 \nindexOfAny\u0027\u0027 \n\n Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters. The search starts at a specified character position and examines a specified number of character positions.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#insert","title":"String.insert","content":"String.insert \ninsert \n\n Returns a new string in which a specified string is inserted at a specified index position in this instance.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#isNormalized","title":"String.isNormalized","content":"String.isNormalized \nisNormalized \n\n Indicates whether this string is in Unicode normalization form C.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#isNormalized\u0027","title":"String.isNormalized\u0027","content":"String.isNormalized\u0027 \nisNormalized\u0027 \n\n Indicates whether this string is in the specified Unicode normalization form.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#lastIndexOfChar","title":"String.lastIndexOfChar","content":"String.lastIndexOfChar \nlastIndexOfChar \n\n Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#lastIndexOfChar\u0027","title":"String.lastIndexOfChar\u0027","content":"String.lastIndexOfChar\u0027 \nlastIndexOfChar\u0027 \n\n Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance. The search starts at a specified character position and proceeds backward toward the beginning of the string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#lastIndexOfChar\u0027\u0027","title":"String.lastIndexOfChar\u0027\u0027","content":"String.lastIndexOfChar\u0027\u0027 \nlastIndexOfChar\u0027\u0027 \n\n Reports the zero-based index position of the last occurrence of the specified Unicode character in a substring within this instance. The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#lastIndexOfString","title":"String.lastIndexOfString","content":"String.lastIndexOfString \nlastIndexOfString \n\n Reports the zero-based index position of the last occurrence of a specified string within this instance.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#lastIndexOfString\u0027","title":"String.lastIndexOfString\u0027","content":"String.lastIndexOfString\u0027 \nlastIndexOfString\u0027 \n\n Reports the zero-based index position of the last occurrence of a specified string within this instance. The search starts at a specified character position and proceeds backward toward the beginning of the string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#lastIndexOfString\u0027\u0027","title":"String.lastIndexOfString\u0027\u0027","content":"String.lastIndexOfString\u0027\u0027 \nlastIndexOfString\u0027\u0027 \n\n Reports the zero-based index position of the last occurrence of a specified string within this instance. The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#lastIndexOfStringWithComparison","title":"String.lastIndexOfStringWithComparison","content":"String.lastIndexOfStringWithComparison \nlastIndexOfStringWithComparison \n\n Reports the zero-based index of the last occurrence of a specified string within the current String object. A parameter specifies the type of search to use for the specified string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#lastIndexOfStringWithComparison\u0027","title":"String.lastIndexOfStringWithComparison\u0027","content":"String.lastIndexOfStringWithComparison\u0027 \nlastIndexOfStringWithComparison\u0027 \n\n Reports the zero-based index of the last occurrence of a specified string within the current String object. The search starts at a specified character position and proceeds backward toward the beginning of the string. A parameter specifies the type of comparison to perform when searching for the specified string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#lastIndexOfStringWithComparison\u0027\u0027","title":"String.lastIndexOfStringWithComparison\u0027\u0027","content":"String.lastIndexOfStringWithComparison\u0027\u0027 \nlastIndexOfStringWithComparison\u0027\u0027 \n\n Reports the zero-based index position of the last occurrence of a specified string within this instance. The search starts at a specified character position and proceeds backward toward the beginning of the string for the specified number of character positions. A parameter specifies the type of comparison to perform when searching for the specified string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#normalize","title":"String.normalize","content":"String.normalize \nnormalize \n\n Returns a new string whose textual value is the same as this string, but whose binary representation is in Unicode normalization form C.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#normalize\u0027","title":"String.normalize\u0027","content":"String.normalize\u0027 \nnormalize\u0027 \n\n Returns a new string whose textual value is the same as this string, but whose binary representation is in the specified Unicode normalization form.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#padLeft","title":"String.padLeft","content":"String.padLeft \npadLeft \n\n Returns a new string that right-aligns the characters in this instance by padding them with spaces on the left, for a specified total length.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#padLeft\u0027","title":"String.padLeft\u0027","content":"String.padLeft\u0027 \npadLeft\u0027 \n\n Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total length.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#padRight","title":"String.padRight","content":"String.padRight \npadRight \n\n Returns a new string that left-aligns the characters in this string by padding them with spaces on the right, for a specified total length.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#padRight\u0027","title":"String.padRight\u0027","content":"String.padRight\u0027 \npadRight\u0027 \n\n Returns a new string that left-aligns the characters in this string by padding them on the right with a specified Unicode character, for a specified total length.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#remove","title":"String.remove","content":"String.remove \nremove \n\n Returns a new string in which all the characters in the current instance, beginning at a specified position and continuing through the last position, have been deleted.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#remove\u0027","title":"String.remove\u0027","content":"String.remove\u0027 \nremove\u0027 \n\n Returns a new string in which a specified number of characters in the current instance beginning at a specified position have been deleted.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#replace","title":"String.replace","content":"String.replace \nreplace \n\n Returns a new string in which all occurrences of a specified Unicode character in this instance are replaced with another specified Unicode character.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#replace\u0027","title":"String.replace\u0027","content":"String.replace\u0027 \nreplace\u0027 \n\n Returns a new string in which all occurrences of a specified string in the current instance are replaced with another specified string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#splitChar","title":"String.splitChar","content":"String.splitChar \nsplitChar \n\n Splits a string into substrings that are based on the characters in an array.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#splitChar\u0027","title":"String.splitChar\u0027","content":"String.splitChar\u0027 \nsplitChar\u0027 \n\n Splits a string into a maximum number of substrings based on the characters in an array. You also specify the maximum number of substrings to return.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#splitCharWithOptions","title":"String.splitCharWithOptions","content":"String.splitCharWithOptions \nsplitCharWithOptions \n\n Splits a string into substrings based on the characters in an array. You can specify whether the substrings include empty array elements.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#splitCharWithOptions\u0027","title":"String.splitCharWithOptions\u0027","content":"String.splitCharWithOptions\u0027 \nsplitCharWithOptions\u0027 \n\n Splits a string into a maximum number of substrings based on the characters in an array.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#splitString","title":"String.splitString","content":"String.splitString \nsplitString \n\n Splits a string into substrings based on the strings in an array. You can specify whether the substrings include empty array elements.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#splitString\u0027","title":"String.splitString\u0027","content":"String.splitString\u0027 \nsplitString\u0027 \n\n Splits a string into a maximum number of substrings based on the strings in an array. You can specify whether the substrings include empty array elements.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#startsWith","title":"String.startsWith","content":"String.startsWith \nstartsWith \n\n Determines whether the beginning of this string instance matches the specified string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#startsWith\u0027","title":"String.startsWith\u0027","content":"String.startsWith\u0027 \nstartsWith\u0027 \n\n Determines whether the beginning of this string instance matches the specified string when compared using the specified comparison option.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#startsWith\u0027\u0027","title":"String.startsWith\u0027\u0027","content":"String.startsWith\u0027\u0027 \nstartsWith\u0027\u0027 \n\n Determines whether the beginning of this string instance matches the specified string when compared using the specified culture.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#substring","title":"String.substring","content":"String.substring \nsubstring \n\n Retrieves a substring from this instance. The substring starts at a specified character position and continues to the end of the string.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#substring\u0027","title":"String.substring\u0027","content":"String.substring\u0027 \nsubstring\u0027 \n\n Retrieves a substring from this instance. The substring starts at a specified character position and has a specified length.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#toCharArray","title":"String.toCharArray","content":"String.toCharArray \ntoCharArray \n\n Copies the characters in this instance to a Unicode character array.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#toCharArray\u0027","title":"String.toCharArray\u0027","content":"String.toCharArray\u0027 \ntoCharArray\u0027 \n\n Copies the characters in a specified substring in this instance to a Unicode character array.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#toLower","title":"String.toLower","content":"String.toLower \ntoLower \n\n Returns a copy of this string converted to lowercase.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#toLower\u0027","title":"String.toLower\u0027","content":"String.toLower\u0027 \ntoLower\u0027 \n\n Returns a copy of this string converted to lowercase, using the casing rules of the specified culture.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#toLowerInvariant","title":"String.toLowerInvariant","content":"String.toLowerInvariant \ntoLowerInvariant \n\n Returns a copy of this String object converted to lowercase using the casing rules of the invariant culture.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#toUpper","title":"String.toUpper","content":"String.toUpper \ntoUpper \n\n Returns a copy of this string converted to uppercase.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#toUpper\u0027","title":"String.toUpper\u0027","content":"String.toUpper\u0027 \ntoUpper\u0027 \n\n Returns a copy of this string converted to uppercase, using the casing rules of the specified culture.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#toUpperInvariant","title":"String.toUpperInvariant","content":"String.toUpperInvariant \ntoUpperInvariant \n\n Returns a copy of this String object converted to uppercase using the casing rules of the invariant culture.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#trim","title":"String.trim","content":"String.trim \ntrim \n\n Removes all leading and trailing white-space characters from the current String object.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#trim\u0027","title":"String.trim\u0027","content":"String.trim\u0027 \ntrim\u0027 \n\n Removes all leading and trailing occurrences of a set of characters specified in an array from the current String object.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#trimEnd","title":"String.trimEnd","content":"String.trimEnd \ntrimEnd \n\n Removes all trailing occurrences of a set of characters specified in an array from the current String object.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-stringmodule.html#trimStart","title":"String.trimStart","content":"String.trimStart \ntrimStart \n\n Removes all leading occurrences of a set of characters specified in an array from the current String object.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html","title":"Task","content":"Task \n \nTask.TokenToTask\u003C\u0027a\u003E \nTokenToTask\u003C\u0027a\u003E \nTask.toAsync \ntoAsync \nTask.mapWithOptions \nmapWithOptions \nTask.map \nmap \nTask.bindWithOptions \nbindWithOptions \nTask.bind \nbind \nTask.returnM \nreturnM \nTask.(\u003E\u003E=) \n(\u003E\u003E=) \nTask.(=\u003C\u003C) \n(=\u003C\u003C) \nTask.(\u003E\u003E.) \n(\u003E\u003E.) \nTask.(\u003E=\u003E) \n(\u003E=\u003E) \nTask.(\u003C=\u003C) \n(\u003C=\u003C) \nTask.lift2 \nlift2 \nTask.ap \nap \nTask.(\u003C*\u003E) \n(\u003C*\u003E) \nTask.(\u003C!\u003E) \n(\u003C!\u003E) \nTask.( *\u003E ) \n( *\u003E ) \nTask.( \u003C* ) \n( \u003C* ) \nTask.foldM \nfoldM \nTask.sequence \nsequence \nTask.mapM \nmapM \nTask.WhenAllUnits \nWhenAllUnits \nTask.ToTaskUnit \nToTaskUnit \nTask.Ignore \nIgnore \nTask.Catch \nCatch \nTask.Parallel \nParallel \nTask.ParallelCatch \nParallelCatch \nTask.ParallelCatchWithThrottle \nParallelCatchWithThrottle \nTask.ParallelWithThrottle \nParallelWithThrottle \nTask.(|AggregateExn|_|) \n(|AggregateExn|_|)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#toAsync","title":"Task.toAsync","content":"Task.toAsync \ntoAsync \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#mapWithOptions","title":"Task.mapWithOptions","content":"Task.mapWithOptions \nmapWithOptions \n\n Transforms a Task\u0027s first value by using a specified mapping function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#map","title":"Task.map","content":"Task.map \nmap \n\n Transforms a Task\u0027s first value by using a specified mapping function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#bindWithOptions","title":"Task.bindWithOptions","content":"Task.bindWithOptions \nbindWithOptions \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#bind","title":"Task.bind","content":"Task.bind \nbind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#returnM","title":"Task.returnM","content":"Task.returnM \nreturnM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#(\u003E\u003E=)","title":"Task.(\u003E\u003E=)","content":"Task.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Sequentially compose two actions, passing any value produced by the first as an argument to the second.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#(=\u003C\u003C)","title":"Task.(=\u003C\u003C)","content":"Task.(=\u003C\u003C) \n(=\u003C\u003C) \n\n Flipped \u003E\u003E=\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#(\u003E\u003E.)","title":"Task.(\u003E\u003E.)","content":"Task.(\u003E\u003E.) \n(\u003E\u003E.) \n\n Sequentially compose two either actions, discarding any value produced by the first\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#(\u003E=\u003E)","title":"Task.(\u003E=\u003E)","content":"Task.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Left-to-right Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#(\u003C=\u003C)","title":"Task.(\u003C=\u003C)","content":"Task.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Right-to-left Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#lift2","title":"Task.lift2","content":"Task.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#ap","title":"Task.ap","content":"Task.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#(\u003C*\u003E)","title":"Task.(\u003C*\u003E)","content":"Task.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#(\u003C!\u003E)","title":"Task.(\u003C!\u003E)","content":"Task.(\u003C!\u003E) \n(\u003C!\u003E) \n\n Infix map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#( *\u003E )","title":"Task.( *\u003E )","content":"Task.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#( \u003C* )","title":"Task.( \u003C* )","content":"Task.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#foldM","title":"Task.foldM","content":"Task.foldM \nfoldM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#sequence","title":"Task.sequence","content":"Task.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#mapM","title":"Task.mapM","content":"Task.mapM \nmapM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#WhenAllUnits","title":"Task.WhenAllUnits","content":"Task.WhenAllUnits \nWhenAllUnits \n\n Creates a single Task\u003Cunit\u003E that will complete when all of the Task\u003Cunit\u003E objects in an enumerable collection have completed.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#ToTaskUnit","title":"Task.ToTaskUnit","content":"Task.ToTaskUnit \nToTaskUnit \n\n Converts a Task into Task\u003Cunit\u003E\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#Ignore","title":"Task.Ignore","content":"Task.Ignore \nIgnore \n\n Creates a task that runs the given task and ignores its result.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#Catch","title":"Task.Catch","content":"Task.Catch \nCatch \n\n Creates a task that executes a specified task.\n If this task completes successfully, then this function returns Choice1Of2 with the returned value.\n If this task raises an exception before it completes then return Choice2Of2 with the raised exception.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#Parallel","title":"Task.Parallel","content":"Task.Parallel \nParallel \n\n Creates a task that executes all the given tasks.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#ParallelCatch","title":"Task.ParallelCatch","content":"Task.ParallelCatch \nParallelCatch \n\n Creates a task that executes all the given tasks.\n This function doesn\u0027t throw exceptions, but instead returns an array of Choices.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#ParallelCatchWithThrottle","title":"Task.ParallelCatchWithThrottle","content":"Task.ParallelCatchWithThrottle \nParallelCatchWithThrottle \n\n Creates a task that executes all the given tasks.\n This function doesn\u0027t throw exceptions, but instead returns an array of Choices.\n The paralelism is throttled, so that at most \u0060throttle\u0060 tasks run at one time.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#ParallelWithThrottle","title":"Task.ParallelWithThrottle","content":"Task.ParallelWithThrottle \nParallelWithThrottle \n\n Creates a task that executes all the given tasks.\n The paralelism is throttled, so that at most \u0060throttle\u0060 tasks run at one time.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task.html#(|AggregateExn|_|)","title":"Task.(|AggregateExn|_|)","content":"Task.(|AggregateExn|_|) \n(|AggregateExn|_|) \n\n Active pattern that matches on flattened inner exceptions in an AggregateException\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-task-tokentotask-1.html","title":"TokenToTask\u003C\u0027a\u003E","content":"TokenToTask\u003C\u0027a\u003E \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-timemeasurement.html","title":"TimeMeasurement","content":"TimeMeasurement \n \nTimeMeasurement.stopTime \nstopTime \nTimeMeasurement.stopAverageTime \nstopAverageTime \nTimeMeasurement.stopAndReportAvarageTime \nstopAndReportAvarageTime \nTimeMeasurement.compareTwoRuntimes \ncompareTwoRuntimes"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-timemeasurement.html#stopTime","title":"TimeMeasurement.stopTime","content":"TimeMeasurement.stopTime \nstopTime \n\n Stops the runtime for a given function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-timemeasurement.html#stopAverageTime","title":"TimeMeasurement.stopAverageTime","content":"TimeMeasurement.stopAverageTime \nstopAverageTime \n\n Stops the average runtime for a given function and applies it the given count\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-timemeasurement.html#stopAndReportAvarageTime","title":"TimeMeasurement.stopAndReportAvarageTime","content":"TimeMeasurement.stopAndReportAvarageTime \nstopAndReportAvarageTime \n\n Stops the average runtime for a given function and applies it the given count\n Afterwards it reports it with the given description\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-timemeasurement.html#compareTwoRuntimes","title":"TimeMeasurement.compareTwoRuntimes","content":"TimeMeasurement.compareTwoRuntimes \ncompareTwoRuntimes \n\n Stops the average runtime for the given functions\n Afterwards it reports it with the given descriptions\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html","title":"Undo","content":"Undo \n \nUndo.History\u003C\u0027T\u003E \nHistory\u003C\u0027T\u003E \nUndo.undoable \nundoable \nUndo.newHistory \nnewHistory \nUndo.current \ncurrent \nUndo.getHistory \ngetHistory \nUndo.putToHistory \nputToHistory \nUndo.exec \nexec \nUndo.getCurrent \ngetCurrent \nUndo.combineWithCurrent \ncombineWithCurrent \nUndo.undo \nundo \nUndo.redo \nredo"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html#undoable","title":"Undo.undoable","content":"Undo.undoable \nundoable \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html#newHistory","title":"Undo.newHistory","content":"Undo.newHistory \nnewHistory \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html#current","title":"Undo.current","content":"Undo.current \ncurrent \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html#getHistory","title":"Undo.getHistory","content":"Undo.getHistory \ngetHistory \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html#putToHistory","title":"Undo.putToHistory","content":"Undo.putToHistory \nputToHistory \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html#exec","title":"Undo.exec","content":"Undo.exec \nexec \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html#getCurrent","title":"Undo.getCurrent","content":"Undo.getCurrent \ngetCurrent \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html#combineWithCurrent","title":"Undo.combineWithCurrent","content":"Undo.combineWithCurrent \ncombineWithCurrent \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html#undo","title":"Undo.undo","content":"Undo.undo \nundo \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo.html#redo","title":"Undo.redo","content":"Undo.redo \nredo \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo-history-1.html","title":"History\u003C\u0027T\u003E","content":"History\u003C\u0027T\u003E \n \nHistory\u003C\u0027T\u003E.Current \nCurrent \nHistory\u003C\u0027T\u003E.Undos \nUndos \nHistory\u003C\u0027T\u003E.Redos \nRedos"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo-history-1.html#Current","title":"History\u003C\u0027T\u003E.Current","content":"History\u003C\u0027T\u003E.Current \nCurrent \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo-history-1.html#Undos","title":"History\u003C\u0027T\u003E.Undos","content":"History\u003C\u0027T\u003E.Undos \nUndos \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-undo-history-1.html#Redos","title":"History\u003C\u0027T\u003E.Redos","content":"History\u003C\u0027T\u003E.Redos \nRedos \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html","title":"Validation","content":"Validation \n \nValidation.CustomValidation\u003C\u0027T\u003E \nCustomValidation\u003C\u0027T\u003E \nValidation.NonEmptyListSemigroup\u003C\u0027T\u003E \nNonEmptyListSemigroup\u003C\u0027T\u003E \nValidation.NonEmptyListValidation\u003C\u0027T\u003E \nNonEmptyListValidation\u003C\u0027T\u003E \nValidation.apa \napa \nValidation.apm \napm \nValidation.ap \nap \nValidation.(\u003C*\u003E) \n(\u003C*\u003E) \nValidation.lift2 \nlift2 \nValidation.( *\u003E ) \n( *\u003E ) \nValidation.( \u003C* ) \n( \u003C* ) \nValidation.seqValidator \nseqValidator \nValidation.sequence \nsequence \nValidation.sequenceIgnore \nsequenceIgnore \nValidation.mapM \nmapM \nValidation.mapMIgnore \nmapMIgnore \nValidation.(|Success|Failure|) \n(|Success|Failure|)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#apa","title":"Validation.apa","content":"Validation.apa \napa \n\n Sequential application, parameterized by append\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#apm","title":"Validation.apm","content":"Validation.apm \napm \n\n Sequential application, parameterized by semigroup\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#ap","title":"Validation.ap","content":"Validation.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#(\u003C*\u003E)","title":"Validation.(\u003C*\u003E)","content":"Validation.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#lift2","title":"Validation.lift2","content":"Validation.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#( *\u003E )","title":"Validation.( *\u003E )","content":"Validation.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#( \u003C* )","title":"Validation.( \u003C* )","content":"Validation.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#seqValidator","title":"Validation.seqValidator","content":"Validation.seqValidator \nseqValidator \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#sequence","title":"Validation.sequence","content":"Validation.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#sequenceIgnore","title":"Validation.sequenceIgnore","content":"Validation.sequenceIgnore \nsequenceIgnore \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#mapM","title":"Validation.mapM","content":"Validation.mapM \nmapM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#mapMIgnore","title":"Validation.mapMIgnore","content":"Validation.mapMIgnore \nmapMIgnore \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation.html#(|Success|Failure|)","title":"Validation.(|Success|Failure|)","content":"Validation.(|Success|Failure|) \n(|Success|Failure|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html","title":"CustomValidation\u003C\u0027T\u003E","content":"CustomValidation\u003C\u0027T\u003E \n \nCustomValidation\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCustomValidation\u003C\u0027T\u003E.ap \nap \nCustomValidation\u003C\u0027T\u003E.apl \napl \nCustomValidation\u003C\u0027T\u003E.apr \napr \nCustomValidation\u003C\u0027T\u003E.lift2 \nlift2 \nCustomValidation\u003C\u0027T\u003E.mapM \nmapM \nCustomValidation\u003C\u0027T\u003E.mapMIgnore \nmapMIgnore \nCustomValidation\u003C\u0027T\u003E.seqValidator \nseqValidator \nCustomValidation\u003C\u0027T\u003E.sequence \nsequence \nCustomValidation\u003C\u0027T\u003E.sequenceIgnore \nsequenceIgnore"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html#\u0060\u0060.ctor\u0060\u0060","title":"CustomValidation\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"CustomValidation\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html#ap","title":"CustomValidation\u003C\u0027T\u003E.ap","content":"CustomValidation\u003C\u0027T\u003E.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html#apl","title":"CustomValidation\u003C\u0027T\u003E.apl","content":"CustomValidation\u003C\u0027T\u003E.apl \napl \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html#apr","title":"CustomValidation\u003C\u0027T\u003E.apr","content":"CustomValidation\u003C\u0027T\u003E.apr \napr \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html#lift2","title":"CustomValidation\u003C\u0027T\u003E.lift2","content":"CustomValidation\u003C\u0027T\u003E.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html#mapM","title":"CustomValidation\u003C\u0027T\u003E.mapM","content":"CustomValidation\u003C\u0027T\u003E.mapM \nmapM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html#mapMIgnore","title":"CustomValidation\u003C\u0027T\u003E.mapMIgnore","content":"CustomValidation\u003C\u0027T\u003E.mapMIgnore \nmapMIgnore \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html#seqValidator","title":"CustomValidation\u003C\u0027T\u003E.seqValidator","content":"CustomValidation\u003C\u0027T\u003E.seqValidator \nseqValidator \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html#sequence","title":"CustomValidation\u003C\u0027T\u003E.sequence","content":"CustomValidation\u003C\u0027T\u003E.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-customvalidation-1.html#sequenceIgnore","title":"CustomValidation\u003C\u0027T\u003E.sequenceIgnore","content":"CustomValidation\u003C\u0027T\u003E.sequenceIgnore \nsequenceIgnore \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-nonemptylistsemigroup-1.html","title":"NonEmptyListSemigroup\u003C\u0027T\u003E","content":"NonEmptyListSemigroup\u003C\u0027T\u003E \n \nNonEmptyListSemigroup\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-nonemptylistsemigroup-1.html#\u0060\u0060.ctor\u0060\u0060","title":"NonEmptyListSemigroup\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"NonEmptyListSemigroup\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-nonemptylistvalidation-1.html","title":"NonEmptyListValidation\u003C\u0027T\u003E","content":"NonEmptyListValidation\u003C\u0027T\u003E \n \nNonEmptyListValidation\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-validation-nonemptylistvalidation-1.html#\u0060\u0060.ctor\u0060\u0060","title":"NonEmptyListValidation\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"NonEmptyListValidation\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html","title":"Writer","content":"Writer \n \nWriter.Writer\u003C\u0027W, \u0027T\u003E \nWriter\u003C\u0027W, \u0027T\u003E \nWriter.WriterBuilder\u003C\u0027W\u003E \nWriterBuilder\u003C\u0027W\u003E \nWriter.bind \nbind \nWriter.returnM \nreturnM \nWriter.writer \nwriter \nWriter.tell \ntell \nWriter.listen \nlisten \nWriter.pass \npass \nWriter.listens \nlistens \nWriter.censor \ncensor \nWriter.(\u003E\u003E=) \n(\u003E\u003E=) \nWriter.(=\u003C\u003C) \n(=\u003C\u003C) \nWriter.(\u003C*\u003E) \n(\u003C*\u003E) \nWriter.ap \nap \nWriter.map \nmap \nWriter.(\u003C!\u003E) \n(\u003C!\u003E) \nWriter.lift2 \nlift2 \nWriter.( *\u003E ) \n( *\u003E ) \nWriter.( \u003C* ) \n( \u003C* ) \nWriter.(\u003E\u003E.) \n(\u003E\u003E.) \nWriter.(\u003E=\u003E) \n(\u003E=\u003E) \nWriter.(\u003C=\u003C) \n(\u003C=\u003C) \nWriter.foldM \nfoldM \nWriter.sequence \nsequence \nWriter.mapM \nmapM"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#bind","title":"Writer.bind","content":"Writer.bind \nbind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#returnM","title":"Writer.returnM","content":"Writer.returnM \nreturnM \n\n Inject a value into the Writer type\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#writer","title":"Writer.writer","content":"Writer.writer \nwriter \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#tell","title":"Writer.tell","content":"Writer.tell \ntell \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#listen","title":"Writer.listen","content":"Writer.listen \nlisten \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#pass","title":"Writer.pass","content":"Writer.pass \npass \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#listens","title":"Writer.listens","content":"Writer.listens \nlistens \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#censor","title":"Writer.censor","content":"Writer.censor \ncensor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#(\u003E\u003E=)","title":"Writer.(\u003E\u003E=)","content":"Writer.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Sequentially compose two actions, passing any value produced by the first as an argument to the second.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#(=\u003C\u003C)","title":"Writer.(=\u003C\u003C)","content":"Writer.(=\u003C\u003C) \n(=\u003C\u003C) \n\n Flipped \u003E\u003E=\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#(\u003C*\u003E)","title":"Writer.(\u003C*\u003E)","content":"Writer.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#ap","title":"Writer.ap","content":"Writer.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#map","title":"Writer.map","content":"Writer.map \nmap \n\n Transforms a Writer value by using a specified mapping function.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#(\u003C!\u003E)","title":"Writer.(\u003C!\u003E)","content":"Writer.(\u003C!\u003E) \n(\u003C!\u003E) \n\n Infix map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#lift2","title":"Writer.lift2","content":"Writer.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#( *\u003E )","title":"Writer.( *\u003E )","content":"Writer.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#( \u003C* )","title":"Writer.( \u003C* )","content":"Writer.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#(\u003E\u003E.)","title":"Writer.(\u003E\u003E.)","content":"Writer.(\u003E\u003E.) \n(\u003E\u003E.) \n\n Sequentially compose two state actions, discarding any value produced by the first\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#(\u003E=\u003E)","title":"Writer.(\u003E=\u003E)","content":"Writer.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Left-to-right Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#(\u003C=\u003C)","title":"Writer.(\u003C=\u003C)","content":"Writer.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Right-to-left Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#foldM","title":"Writer.foldM","content":"Writer.foldM \nfoldM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#sequence","title":"Writer.sequence","content":"Writer.sequence \nsequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer.html#mapM","title":"Writer.mapM","content":"Writer.mapM \nmapM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writer-2.html","title":"Writer\u003C\u0027W, \u0027T\u003E","content":"Writer\u003C\u0027W, \u0027T\u003E \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html","title":"WriterBuilder\u003C\u0027W\u003E","content":"WriterBuilder\u003C\u0027W\u003E \n\n The writer monad.\n This monad comes from Matthew Podwysocki\u0027s http://codebetter.com/blogs/matthew.podwysocki/archive/2010/02/01/a-kick-in-the-monads-writer-edition.aspx.\n \nWriterBuilder\u003C\u0027W\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nWriterBuilder\u003C\u0027W\u003E.Bind \nBind \nWriterBuilder\u003C\u0027W\u003E.Combine \nCombine \nWriterBuilder\u003C\u0027W\u003E.Delay \nDelay \nWriterBuilder\u003C\u0027W\u003E.For \nFor \nWriterBuilder\u003C\u0027W\u003E.Return \nReturn \nWriterBuilder\u003C\u0027W\u003E.ReturnFrom \nReturnFrom \nWriterBuilder\u003C\u0027W\u003E.TryFinally \nTryFinally \nWriterBuilder\u003C\u0027W\u003E.TryWith \nTryWith \nWriterBuilder\u003C\u0027W\u003E.Using \nUsing \nWriterBuilder\u003C\u0027W\u003E.While \nWhile \nWriterBuilder\u003C\u0027W\u003E.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#\u0060\u0060.ctor\u0060\u0060","title":"WriterBuilder\u003C\u0027W\u003E.\u0060\u0060.ctor\u0060\u0060","content":"WriterBuilder\u003C\u0027W\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#Bind","title":"WriterBuilder\u003C\u0027W\u003E.Bind","content":"WriterBuilder\u003C\u0027W\u003E.Bind \nBind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#Combine","title":"WriterBuilder\u003C\u0027W\u003E.Combine","content":"WriterBuilder\u003C\u0027W\u003E.Combine \nCombine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#Delay","title":"WriterBuilder\u003C\u0027W\u003E.Delay","content":"WriterBuilder\u003C\u0027W\u003E.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#For","title":"WriterBuilder\u003C\u0027W\u003E.For","content":"WriterBuilder\u003C\u0027W\u003E.For \nFor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#Return","title":"WriterBuilder\u003C\u0027W\u003E.Return","content":"WriterBuilder\u003C\u0027W\u003E.Return \nReturn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#ReturnFrom","title":"WriterBuilder\u003C\u0027W\u003E.ReturnFrom","content":"WriterBuilder\u003C\u0027W\u003E.ReturnFrom \nReturnFrom \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#TryFinally","title":"WriterBuilder\u003C\u0027W\u003E.TryFinally","content":"WriterBuilder\u003C\u0027W\u003E.TryFinally \nTryFinally \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#TryWith","title":"WriterBuilder\u003C\u0027W\u003E.TryWith","content":"WriterBuilder\u003C\u0027W\u003E.TryWith \nTryWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#Using","title":"WriterBuilder\u003C\u0027W\u003E.Using","content":"WriterBuilder\u003C\u0027W\u003E.Using \nUsing \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#While","title":"WriterBuilder\u003C\u0027W\u003E.While","content":"WriterBuilder\u003C\u0027W\u003E.While \nWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-writer-writerbuilder-1.html#Zero","title":"WriterBuilder\u003C\u0027W\u003E.Zero","content":"WriterBuilder\u003C\u0027W\u003E.Zero \nZero \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-ziplist.html","title":"ZipList","content":"ZipList \n \nZipList.returnM \nreturnM \nZipList.(\u003C*\u003E) \n(\u003C*\u003E) \nZipList.ap \nap \nZipList.lift2 \nlift2 \nZipList.( *\u003E ) \n( *\u003E ) \nZipList.( \u003C* ) \n( \u003C* )"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-ziplist.html#returnM","title":"ZipList.returnM","content":"ZipList.returnM \nreturnM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-ziplist.html#(\u003C*\u003E)","title":"ZipList.(\u003C*\u003E)","content":"ZipList.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-ziplist.html#ap","title":"ZipList.ap","content":"ZipList.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-ziplist.html#lift2","title":"ZipList.lift2","content":"ZipList.lift2 \nlift2 \n\n Promote a function to a monad/applicative, scanning the monadic/applicative arguments from left to right.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-ziplist.html#( *\u003E )","title":"ZipList.( *\u003E )","content":"ZipList.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-ziplist.html#( \u003C* )","title":"ZipList.( \u003C* )","content":"ZipList.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-cont-2.html","title":"Cont\u003C\u0027T, \u0027r\u003E","content":"Cont\u003C\u0027T, \u0027r\u003E \n\n The continuation monad.\n The algorithm is from Wes Dyer http://blogs.msdn.com/b/wesdyer/archive/2008/01/11/the-marvels-of-monads.aspx.\n The builder approach is from Matthew Podwysocki\u0027s excellent Creating Extended Builders series http://codebetter.com/blogs/matthew.podwysocki/archive/2010/01/18/much-ado-about-monads-creating-extended-builders.aspx.\n Current implementation from Matt\u0027s gist at https://gist.github.com/628956\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-coroutine.html","title":"Coroutine","content":"Coroutine \n\n The coroutine type from http://fssnip.net/7M\n \nCoroutine.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCoroutine.Put \nPut \nCoroutine.Run \nRun"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-coroutine.html#\u0060\u0060.ctor\u0060\u0060","title":"Coroutine.\u0060\u0060.ctor\u0060\u0060","content":"Coroutine.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-coroutine.html#Put","title":"Coroutine.Put","content":"Coroutine.Put \nPut \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-coroutine.html#Run","title":"Coroutine.Run","content":"Coroutine.Run \nRun \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-dictionary.html","title":"Dictionary","content":"Dictionary \n \nDictionary.TryFind \nTryFind"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-dictionary.html#TryFind","title":"Dictionary.TryFind","content":"Dictionary.TryFind \nTryFind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-enumerableex.html","title":"EnumerableEx","content":"EnumerableEx \n \nEnumerableEx.FirstOrNone \nFirstOrNone"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-enumerableex.html#FirstOrNone","title":"EnumerableEx.FirstOrNone","content":"EnumerableEx.FirstOrNone \nFirstOrNone \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html","title":"FSharpAsyncEx","content":"FSharpAsyncEx \n \nFSharpAsyncEx.FSharpAsyncDownloadString \nFSharpAsyncDownloadString \nFSharpAsyncEx.FSharpAsyncGetResponse \nFSharpAsyncGetResponse \nFSharpAsyncEx.FromBeginEnd \nFromBeginEnd \nFSharpAsyncEx.IgnoreResult \nIgnoreResult \nFSharpAsyncEx.Parallel \nParallel \nFSharpAsyncEx.Protect \nProtect \nFSharpAsyncEx.Return \nReturn \nFSharpAsyncEx.Run \nRun \nFSharpAsyncEx.Select \nSelect \nFSharpAsyncEx.SelectMany \nSelectMany \nFSharpAsyncEx.SelectMany \nSelectMany \nFSharpAsyncEx.Start \nStart \nFSharpAsyncEx.ToFSharpAsync \nToFSharpAsync"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#FSharpAsyncDownloadString","title":"FSharpAsyncEx.FSharpAsyncDownloadString","content":"FSharpAsyncEx.FSharpAsyncDownloadString \nFSharpAsyncDownloadString \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#FSharpAsyncGetResponse","title":"FSharpAsyncEx.FSharpAsyncGetResponse","content":"FSharpAsyncEx.FSharpAsyncGetResponse \nFSharpAsyncGetResponse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#FromBeginEnd","title":"FSharpAsyncEx.FromBeginEnd","content":"FSharpAsyncEx.FromBeginEnd \nFromBeginEnd \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#IgnoreResult","title":"FSharpAsyncEx.IgnoreResult","content":"FSharpAsyncEx.IgnoreResult \nIgnoreResult \n\n Ignores (discards) the result of the async computation\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#Parallel","title":"FSharpAsyncEx.Parallel","content":"FSharpAsyncEx.Parallel \nParallel \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#Protect","title":"FSharpAsyncEx.Protect","content":"FSharpAsyncEx.Protect \nProtect \n\n Encapsulates any possible exceptions during bind in a Choice\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#Return","title":"FSharpAsyncEx.Return","content":"FSharpAsyncEx.Return \nReturn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#Run","title":"FSharpAsyncEx.Run","content":"FSharpAsyncEx.Run \nRun \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#Select","title":"FSharpAsyncEx.Select","content":"FSharpAsyncEx.Select \nSelect \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#SelectMany","title":"FSharpAsyncEx.SelectMany","content":"FSharpAsyncEx.SelectMany \nSelectMany \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#SelectMany","title":"FSharpAsyncEx.SelectMany","content":"FSharpAsyncEx.SelectMany \nSelectMany \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#Start","title":"FSharpAsyncEx.Start","content":"FSharpAsyncEx.Start \nStart \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpasyncex.html#ToFSharpAsync","title":"FSharpAsyncEx.ToFSharpAsync","content":"FSharpAsyncEx.ToFSharpAsync \nToFSharpAsync \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html","title":"FSharpChoice","content":"FSharpChoice \n \nFSharpChoice.Ap \nAp \nFSharpChoice.ApValidation \nApValidation \nFSharpChoice.Cast \nCast \nFSharpChoice.EnumerableValidator \nEnumerableValidator \nFSharpChoice.Error \nError \nFSharpChoice.Errors \nErrors \nFSharpChoice.Errors \nErrors \nFSharpChoice.Join \nJoin \nFSharpChoice.Match \nMatch \nFSharpChoice.Match \nMatch \nFSharpChoice.Match \nMatch \nFSharpChoice.Match \nMatch \nFSharpChoice.New1Of2 \nNew1Of2 \nFSharpChoice.New1Of3 \nNew1Of3 \nFSharpChoice.New2Of2 \nNew2Of2 \nFSharpChoice.New2Of3 \nNew2Of3 \nFSharpChoice.New3Of3 \nNew3Of3 \nFSharpChoice.Ok \nOk \nFSharpChoice.ReturnValidation \nReturnValidation \nFSharpChoice.Select \nSelect \nFSharpChoice.SelectMValidation \nSelectMValidation \nFSharpChoice.SelectMany \nSelectMany \nFSharpChoice.SelectMany \nSelectMany \nFSharpChoice.SelectSecond \nSelectSecond \nFSharpChoice.Sequence \nSequence \nFSharpChoice.SequenceValidation \nSequenceValidation \nFSharpChoice.ToFSharpOption \nToFSharpOption \nFSharpChoice.Try \nTry \nFSharpChoice.Try \nTry \nFSharpChoice.Validator \nValidator \nFSharpChoice.Value \nValue"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Ap","title":"FSharpChoice.Ap","content":"FSharpChoice.Ap \nAp \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#ApValidation","title":"FSharpChoice.ApValidation","content":"FSharpChoice.ApValidation \nApValidation \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Cast","title":"FSharpChoice.Cast","content":"FSharpChoice.Cast \nCast \n\n Attempts to cast an object.\n Stores the cast value in 1Of2 if successful, otherwise stores the exception in 2Of2\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#EnumerableValidator","title":"FSharpChoice.EnumerableValidator","content":"FSharpChoice.EnumerableValidator \nEnumerableValidator \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Error","title":"FSharpChoice.Error","content":"FSharpChoice.Error \nError \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Errors","title":"FSharpChoice.Errors","content":"FSharpChoice.Errors \nErrors \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Errors","title":"FSharpChoice.Errors","content":"FSharpChoice.Errors \nErrors \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Join","title":"FSharpChoice.Join","content":"FSharpChoice.Join \nJoin \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Match","title":"FSharpChoice.Match","content":"FSharpChoice.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Match","title":"FSharpChoice.Match","content":"FSharpChoice.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Match","title":"FSharpChoice.Match","content":"FSharpChoice.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Match","title":"FSharpChoice.Match","content":"FSharpChoice.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#New1Of2","title":"FSharpChoice.New1Of2","content":"FSharpChoice.New1Of2 \nNew1Of2 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#New1Of3","title":"FSharpChoice.New1Of3","content":"FSharpChoice.New1Of3 \nNew1Of3 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#New2Of2","title":"FSharpChoice.New2Of2","content":"FSharpChoice.New2Of2 \nNew2Of2 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#New2Of3","title":"FSharpChoice.New2Of3","content":"FSharpChoice.New2Of3 \nNew2Of3 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#New3Of3","title":"FSharpChoice.New3Of3","content":"FSharpChoice.New3Of3 \nNew3Of3 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Ok","title":"FSharpChoice.Ok","content":"FSharpChoice.Ok \nOk \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#ReturnValidation","title":"FSharpChoice.ReturnValidation","content":"FSharpChoice.ReturnValidation \nReturnValidation \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Select","title":"FSharpChoice.Select","content":"FSharpChoice.Select \nSelect \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#SelectMValidation","title":"FSharpChoice.SelectMValidation","content":"FSharpChoice.SelectMValidation \nSelectMValidation \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#SelectMany","title":"FSharpChoice.SelectMany","content":"FSharpChoice.SelectMany \nSelectMany \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#SelectMany","title":"FSharpChoice.SelectMany","content":"FSharpChoice.SelectMany \nSelectMany \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#SelectSecond","title":"FSharpChoice.SelectSecond","content":"FSharpChoice.SelectSecond \nSelectSecond \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Sequence","title":"FSharpChoice.Sequence","content":"FSharpChoice.Sequence \nSequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#SequenceValidation","title":"FSharpChoice.SequenceValidation","content":"FSharpChoice.SequenceValidation \nSequenceValidation \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#ToFSharpOption","title":"FSharpChoice.ToFSharpOption","content":"FSharpChoice.ToFSharpOption \nToFSharpOption \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Try","title":"FSharpChoice.Try","content":"FSharpChoice.Try \nTry \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Try","title":"FSharpChoice.Try","content":"FSharpChoice.Try \nTry \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Validator","title":"FSharpChoice.Validator","content":"FSharpChoice.Validator \nValidator \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpchoice.html#Value","title":"FSharpChoice.Value","content":"FSharpChoice.Value \nValue \n\n If Choice is 1Of2, return its value.\n Otherwise throw ArgumentException.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpfunc.html","title":"FSharpFunc","content":"FSharpFunc \n\n Conversion functions from Action/Func to FSharpFunc\n We need these because FuncConvert often makes C# type inference fail.\n  \nFSharpFunc.FromAction \nFromAction \nFSharpFunc.FromAction \nFromAction \nFSharpFunc.FromAction \nFromAction \nFSharpFunc.FromAction \nFromAction \nFSharpFunc.FromFunc \nFromFunc \nFSharpFunc.FromFunc \nFromFunc \nFSharpFunc.FromFunc \nFromFunc"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpfunc.html#FromAction","title":"FSharpFunc.FromAction","content":"FSharpFunc.FromAction \nFromAction \n\n Convert an Action into an F# function returning unit\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpfunc.html#FromAction","title":"FSharpFunc.FromAction","content":"FSharpFunc.FromAction \nFromAction \n\n Convert an Action into an F# function returning unit\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpfunc.html#FromAction","title":"FSharpFunc.FromAction","content":"FSharpFunc.FromAction \nFromAction \n\n Convert an Action into an F# function returning unit\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpfunc.html#FromAction","title":"FSharpFunc.FromAction","content":"FSharpFunc.FromAction \nFromAction \n\n Convert an Action into an F# function returning unit\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpfunc.html#FromFunc","title":"FSharpFunc.FromFunc","content":"FSharpFunc.FromFunc \nFromFunc \n\n Convert a Func into an F# function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpfunc.html#FromFunc","title":"FSharpFunc.FromFunc","content":"FSharpFunc.FromFunc \nFromFunc \n\n Convert a Func into an F# function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpfunc.html#FromFunc","title":"FSharpFunc.FromFunc","content":"FSharpFunc.FromFunc \nFromFunc \n\n Convert a Func into an F# function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplazy.html","title":"FSharpLazy","content":"FSharpLazy \n \nFSharpLazy.Create \nCreate \nFSharpLazy.CreateFromValue \nCreateFromValue"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplazy.html#Create","title":"FSharpLazy.Create","content":"FSharpLazy.Create \nCreate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplazy.html#CreateFromValue","title":"FSharpLazy.CreateFromValue","content":"FSharpLazy.CreateFromValue \nCreateFromValue \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplist.html","title":"FSharpList","content":"FSharpList \n \nFSharpList.Choose \nChoose \nFSharpList.Cons \nCons \nFSharpList.Create \nCreate \nFSharpList.Match \nMatch \nFSharpList.ToFSharpList \nToFSharpList \nFSharpList.TryFind \nTryFind \nFSharpList.TryFind \nTryFind"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplist.html#Choose","title":"FSharpList.Choose","content":"FSharpList.Choose \nChoose \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplist.html#Cons","title":"FSharpList.Cons","content":"FSharpList.Cons \nCons \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplist.html#Create","title":"FSharpList.Create","content":"FSharpList.Create \nCreate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplist.html#Match","title":"FSharpList.Match","content":"FSharpList.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplist.html#ToFSharpList","title":"FSharpList.ToFSharpList","content":"FSharpList.ToFSharpList \nToFSharpList \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplist.html#TryFind","title":"FSharpList.TryFind","content":"FSharpList.TryFind \nTryFind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharplist.html#TryFind","title":"FSharpList.TryFind","content":"FSharpList.TryFind \nTryFind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpmap.html","title":"FSharpMap","content":"FSharpMap \n \nFSharpMap.Create \nCreate \nFSharpMap.ToFSharpMap \nToFSharpMap"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpmap.html#Create","title":"FSharpMap.Create","content":"FSharpMap.Create \nCreate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpmap.html#ToFSharpMap","title":"FSharpMap.ToFSharpMap","content":"FSharpMap.ToFSharpMap \nToFSharpMap \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html","title":"FSharpOption","content":"FSharpOption \n \nFSharpOption.Aggregate \nAggregate \nFSharpOption.Do \nDo \nFSharpOption.GetOrDefault \nGetOrDefault \nFSharpOption.GetOrElse \nGetOrElse \nFSharpOption.GetOrElse \nGetOrElse \nFSharpOption.HasValue \nHasValue \nFSharpOption.Match \nMatch \nFSharpOption.Match \nMatch \nFSharpOption.Match \nMatch \nFSharpOption.OrElse \nOrElse \nFSharpOption.OrElseLazy \nOrElseLazy \nFSharpOption.ParseByte \nParseByte \nFSharpOption.ParseByte \nParseByte \nFSharpOption.ParseDateTime \nParseDateTime \nFSharpOption.ParseDateTime \nParseDateTime \nFSharpOption.ParseDateTimeOffset \nParseDateTimeOffset \nFSharpOption.ParseDateTimeOffset \nParseDateTimeOffset \nFSharpOption.ParseDecimal \nParseDecimal \nFSharpOption.ParseDecimal \nParseDecimal \nFSharpOption.ParseDouble \nParseDouble \nFSharpOption.ParseDouble \nParseDouble \nFSharpOption.ParseFloat \nParseFloat \nFSharpOption.ParseFloat \nParseFloat \nFSharpOption.ParseInt \nParseInt \nFSharpOption.ParseInt \nParseInt \nFSharpOption.ParseInt16 \nParseInt16 \nFSharpOption.ParseInt16 \nParseInt16 \nFSharpOption.ParseInt64 \nParseInt64 \nFSharpOption.ParseInt64 \nParseInt64 \nFSharpOption.Select \nSelect \nFSharpOption.SelectMany \nSelectMany \nFSharpOption.SelectMany \nSelectMany \nFSharpOption.Sequence \nSequence \nFSharpOption.Some \nSome \nFSharpOption.ToArray \nToArray \nFSharpOption.ToFSharpChoice \nToFSharpChoice \nFSharpOption.ToFSharpList \nToFSharpList \nFSharpOption.ToFSharpOption \nToFSharpOption \nFSharpOption.ToFSharpOption \nToFSharpOption \nFSharpOption.ToFSharpResult \nToFSharpResult \nFSharpOption.ToNullable \nToNullable \nFSharpOption.Where \nWhere \nFSharpOption.SomeUnit \nSomeUnit"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#Aggregate","title":"FSharpOption.Aggregate","content":"FSharpOption.Aggregate \nAggregate \n\n Evaluates the equivalent of \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate\u0022\u003EAggregate\u003C/a\u003E for an option\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#Do","title":"FSharpOption.Do","content":"FSharpOption.Do \nDo \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#GetOrDefault","title":"FSharpOption.GetOrDefault","content":"FSharpOption.GetOrDefault \nGetOrDefault \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#GetOrElse","title":"FSharpOption.GetOrElse","content":"FSharpOption.GetOrElse \nGetOrElse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#GetOrElse","title":"FSharpOption.GetOrElse","content":"FSharpOption.GetOrElse \nGetOrElse \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#HasValue","title":"FSharpOption.HasValue","content":"FSharpOption.HasValue \nHasValue \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#Match","title":"FSharpOption.Match","content":"FSharpOption.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#Match","title":"FSharpOption.Match","content":"FSharpOption.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#Match","title":"FSharpOption.Match","content":"FSharpOption.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#OrElse","title":"FSharpOption.OrElse","content":"FSharpOption.OrElse \nOrElse \n\n Gets the option if Some x, otherwise the supplied default value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#OrElseLazy","title":"FSharpOption.OrElseLazy","content":"FSharpOption.OrElseLazy \nOrElseLazy \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseByte","title":"FSharpOption.ParseByte","content":"FSharpOption.ParseByte \nParseByte \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseByte","title":"FSharpOption.ParseByte","content":"FSharpOption.ParseByte \nParseByte \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseDateTime","title":"FSharpOption.ParseDateTime","content":"FSharpOption.ParseDateTime \nParseDateTime \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseDateTime","title":"FSharpOption.ParseDateTime","content":"FSharpOption.ParseDateTime \nParseDateTime \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseDateTimeOffset","title":"FSharpOption.ParseDateTimeOffset","content":"FSharpOption.ParseDateTimeOffset \nParseDateTimeOffset \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseDateTimeOffset","title":"FSharpOption.ParseDateTimeOffset","content":"FSharpOption.ParseDateTimeOffset \nParseDateTimeOffset \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseDecimal","title":"FSharpOption.ParseDecimal","content":"FSharpOption.ParseDecimal \nParseDecimal \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseDecimal","title":"FSharpOption.ParseDecimal","content":"FSharpOption.ParseDecimal \nParseDecimal \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseDouble","title":"FSharpOption.ParseDouble","content":"FSharpOption.ParseDouble \nParseDouble \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseDouble","title":"FSharpOption.ParseDouble","content":"FSharpOption.ParseDouble \nParseDouble \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseFloat","title":"FSharpOption.ParseFloat","content":"FSharpOption.ParseFloat \nParseFloat \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseFloat","title":"FSharpOption.ParseFloat","content":"FSharpOption.ParseFloat \nParseFloat \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseInt","title":"FSharpOption.ParseInt","content":"FSharpOption.ParseInt \nParseInt \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseInt","title":"FSharpOption.ParseInt","content":"FSharpOption.ParseInt \nParseInt \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseInt16","title":"FSharpOption.ParseInt16","content":"FSharpOption.ParseInt16 \nParseInt16 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseInt16","title":"FSharpOption.ParseInt16","content":"FSharpOption.ParseInt16 \nParseInt16 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseInt64","title":"FSharpOption.ParseInt64","content":"FSharpOption.ParseInt64 \nParseInt64 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ParseInt64","title":"FSharpOption.ParseInt64","content":"FSharpOption.ParseInt64 \nParseInt64 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#Select","title":"FSharpOption.Select","content":"FSharpOption.Select \nSelect \n\n Transforms an option value by using a specified mapping function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#SelectMany","title":"FSharpOption.SelectMany","content":"FSharpOption.SelectMany \nSelectMany \n\n Invokes a function on an optional value that itself yields an option,\n and then applies a mapping function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#SelectMany","title":"FSharpOption.SelectMany","content":"FSharpOption.SelectMany \nSelectMany \n\n Invokes a function on an optional value that itself yields an option\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#Sequence","title":"FSharpOption.Sequence","content":"FSharpOption.Sequence \nSequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#Some","title":"FSharpOption.Some","content":"FSharpOption.Some \nSome \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ToArray","title":"FSharpOption.ToArray","content":"FSharpOption.ToArray \nToArray \n\n Converts the option to an array of length 0 or 1\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ToFSharpChoice","title":"FSharpOption.ToFSharpChoice","content":"FSharpOption.ToFSharpChoice \nToFSharpChoice \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ToFSharpList","title":"FSharpOption.ToFSharpList","content":"FSharpOption.ToFSharpList \nToFSharpList \n\n Converts the option to a list of length 0 or 1\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ToFSharpOption","title":"FSharpOption.ToFSharpOption","content":"FSharpOption.ToFSharpOption \nToFSharpOption \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ToFSharpOption","title":"FSharpOption.ToFSharpOption","content":"FSharpOption.ToFSharpOption \nToFSharpOption \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ToFSharpResult","title":"FSharpOption.ToFSharpResult","content":"FSharpOption.ToFSharpResult \nToFSharpResult \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#ToNullable","title":"FSharpOption.ToNullable","content":"FSharpOption.ToNullable \nToNullable \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#Where","title":"FSharpOption.Where","content":"FSharpOption.Where \nWhere \n\n Applies a predicate to the option. If the predicate returns true, returns Some x, otherwise None.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpoption.html#SomeUnit","title":"FSharpOption.SomeUnit","content":"FSharpOption.SomeUnit \nSomeUnit \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html","title":"FSharpResult","content":"FSharpResult \n \nFSharpResult.Cast \nCast \nFSharpResult.Match \nMatch \nFSharpResult.Match \nMatch \nFSharpResult.NewError \nNewError \nFSharpResult.NewOk \nNewOk \nFSharpResult.Select \nSelect \nFSharpResult.SelectError \nSelectError \nFSharpResult.SelectMany \nSelectMany \nFSharpResult.SelectMany \nSelectMany \nFSharpResult.Sequence \nSequence \nFSharpResult.ToFSharpOption \nToFSharpOption \nFSharpResult.Value \nValue"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#Cast","title":"FSharpResult.Cast","content":"FSharpResult.Cast \nCast \n\n Attempts to cast an object.\n Stores the cast value in Ok if successful, otherwise stores the exception in Error\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#Match","title":"FSharpResult.Match","content":"FSharpResult.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#Match","title":"FSharpResult.Match","content":"FSharpResult.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#NewError","title":"FSharpResult.NewError","content":"FSharpResult.NewError \nNewError \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#NewOk","title":"FSharpResult.NewOk","content":"FSharpResult.NewOk \nNewOk \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#Select","title":"FSharpResult.Select","content":"FSharpResult.Select \nSelect \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#SelectError","title":"FSharpResult.SelectError","content":"FSharpResult.SelectError \nSelectError \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#SelectMany","title":"FSharpResult.SelectMany","content":"FSharpResult.SelectMany \nSelectMany \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#SelectMany","title":"FSharpResult.SelectMany","content":"FSharpResult.SelectMany \nSelectMany \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#Sequence","title":"FSharpResult.Sequence","content":"FSharpResult.Sequence \nSequence \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#ToFSharpOption","title":"FSharpResult.ToFSharpOption","content":"FSharpResult.ToFSharpOption \nToFSharpOption \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpresult.html#Value","title":"FSharpResult.Value","content":"FSharpResult.Value \nValue \n\n If Result is Ok, return its value.\n Otherwise throw ArgumentException.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpset.html","title":"FSharpSet","content":"FSharpSet \n \nFSharpSet.Create \nCreate \nFSharpSet.ToFSharpSet \nToFSharpSet"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpset.html#Create","title":"FSharpSet.Create","content":"FSharpSet.Create \nCreate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-fsharpset.html#ToFSharpSet","title":"FSharpSet.ToFSharpSet","content":"FSharpSet.ToFSharpSet \nToFSharpSet \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html","title":"Funcs","content":"Funcs \n\n Extensions around Actions and Funcs\n \nFuncs.AndThen \nAndThen \nFuncs.Compose \nCompose \nFuncs.Curry \nCurry \nFuncs.Curry \nCurry \nFuncs.ToFunc \nToFunc \nFuncs.ToFunc \nToFunc \nFuncs.ToFunc \nToFunc \nFuncs.ToFunc \nToFunc \nFuncs.Tuple \nTuple \nFuncs.Tuple \nTuple \nFuncs.Tuple \nTuple \nFuncs.Untuple \nUntuple \nFuncs.Untuple \nUntuple \nFuncs.Untuple \nUntuple"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#AndThen","title":"Funcs.AndThen","content":"Funcs.AndThen \nAndThen \n\n Composes two functions (forward composition).\n Mathematically: g . f\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#Compose","title":"Funcs.Compose","content":"Funcs.Compose \nCompose \n\n Composes two functions.\n Mathematically: f . g\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#Curry","title":"Funcs.Curry","content":"Funcs.Curry \nCurry \n\n Converts an uncurried function to a curried function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#Curry","title":"Funcs.Curry","content":"Funcs.Curry \nCurry \n\n Converts an uncurried function to a curried function\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#ToFunc","title":"Funcs.ToFunc","content":"Funcs.ToFunc \nToFunc \n\n Converts an action to a function returning Unit\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#ToFunc","title":"Funcs.ToFunc","content":"Funcs.ToFunc \nToFunc \n\n Converts an action to a function returning Unit\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#ToFunc","title":"Funcs.ToFunc","content":"Funcs.ToFunc \nToFunc \n\n Converts an action to a function returning Unit\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#ToFunc","title":"Funcs.ToFunc","content":"Funcs.ToFunc \nToFunc \n\n Converts an action to a function returning Unit\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#Tuple","title":"Funcs.Tuple","content":"Funcs.Tuple \nTuple \n\n Converts an action with 4 arguments into an action taking a 4-tuple\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#Tuple","title":"Funcs.Tuple","content":"Funcs.Tuple \nTuple \n\n Converts an action with 3 arguments into an action taking a 3-tuple\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#Tuple","title":"Funcs.Tuple","content":"Funcs.Tuple \nTuple \n\n Converts an action with 2 arguments into an action taking a 2-tuple\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#Untuple","title":"Funcs.Untuple","content":"Funcs.Untuple \nUntuple \n\n Converts an action taking a 4-tuple into an action with 4 parameters\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#Untuple","title":"Funcs.Untuple","content":"Funcs.Untuple \nUntuple \n\n /// Converts an action taking a 3-tuple into an action with 3 parameters\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-funcs.html#Untuple","title":"Funcs.Untuple","content":"Funcs.Untuple \nUntuple \n\n Converts an action taking a 2-tuple into an action with 2 parameters\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-isemigroup-1.html","title":"ISemigroup\u003C\u0027T\u003E","content":"ISemigroup\u003C\u0027T\u003E \n\n Semigroup (set with associative binary operation)\n \nISemigroup\u003C\u0027T\u003E.Combine \nCombine"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-isemigroup-1.html#Combine","title":"ISemigroup\u003C\u0027T\u003E.Combine","content":"ISemigroup\u003C\u0027T\u003E.Combine \nCombine \n\n Associative operation\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-l.html","title":"L","content":"L \n\n Helps the C# compiler with Func type inference.\n \nL.F \nF \nL.F \nF \nL.F \nF"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-l.html#F","title":"L.F","content":"L.F \nF \n\n Helps the C# compiler with Func type inference.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-l.html#F","title":"L.F","content":"L.F \nF \n\n Helps the C# compiler with Func type inference.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-l.html#F","title":"L.F","content":"L.F \nF \n\n Helps the C# compiler with Func type inference.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid-1.html","title":"Monoid\u003C\u0027T\u003E","content":"Monoid\u003C\u0027T\u003E \n\n Monoid (associative binary operation with identity)\n \nMonoid\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMonoid\u003C\u0027T\u003E.Combine \nCombine \nMonoid\u003C\u0027T\u003E.Concat \nConcat \nMonoid\u003C\u0027T\u003E.Delay \nDelay \nMonoid\u003C\u0027T\u003E.For \nFor \nMonoid\u003C\u0027T\u003E.Yield \nYield \nMonoid\u003C\u0027T\u003E.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid-1.html#\u0060\u0060.ctor\u0060\u0060","title":"Monoid\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Monoid\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid-1.html#Combine","title":"Monoid\u003C\u0027T\u003E.Combine","content":"Monoid\u003C\u0027T\u003E.Combine \nCombine \n\n Associative operation\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid-1.html#Concat","title":"Monoid\u003C\u0027T\u003E.Concat","content":"Monoid\u003C\u0027T\u003E.Concat \nConcat \n\n Fold a list using this monoid\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid-1.html#Delay","title":"Monoid\u003C\u0027T\u003E.Delay","content":"Monoid\u003C\u0027T\u003E.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid-1.html#For","title":"Monoid\u003C\u0027T\u003E.For","content":"Monoid\u003C\u0027T\u003E.For \nFor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid-1.html#Yield","title":"Monoid\u003C\u0027T\u003E.Yield","content":"Monoid\u003C\u0027T\u003E.Yield \nYield \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-monoid-1.html#Zero","title":"Monoid\u003C\u0027T\u003E.Zero","content":"Monoid\u003C\u0027T\u003E.Zero \nZero \n\n Identity\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nonemptylistex.html","title":"NonEmptyListEx","content":"NonEmptyListEx \n \nNonEmptyListEx.Concat \nConcat \nNonEmptyListEx.Concat \nConcat \nNonEmptyListEx.Cons \nCons \nNonEmptyListEx.Select \nSelect"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nonemptylistex.html#Concat","title":"NonEmptyListEx.Concat","content":"NonEmptyListEx.Concat \nConcat \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nonemptylistex.html#Concat","title":"NonEmptyListEx.Concat","content":"NonEmptyListEx.Concat \nConcat \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nonemptylistex.html#Cons","title":"NonEmptyListEx.Cons","content":"NonEmptyListEx.Cons \nCons \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-nonemptylistex.html#Select","title":"NonEmptyListEx.Select","content":"NonEmptyListEx.Select \nSelect \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-bytestring.html","title":"ByteString","content":"ByteString \n \nByteString.monoid \nmonoid"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-bytestring.html#monoid","title":"ByteString.monoid","content":"ByteString.monoid \nmonoid \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-list.html","title":"List","content":"List \n \nList.monoid \nmonoid"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-list.html#monoid","title":"List.monoid","content":"List.monoid \nmonoid \n\n List monoid\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-map.html","title":"Map","content":"Map \n \nMap.monoid \nmonoid"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-map.html#monoid","title":"Map.monoid","content":"Map.monoid \nmonoid \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-seq.html","title":"Seq","content":"Seq \n \nSeq.monoid \nmonoid \nSeq.foldMap \nfoldMap"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-seq.html#monoid","title":"Seq.monoid","content":"Seq.monoid \nmonoid \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-seq.html#foldMap","title":"Seq.foldMap","content":"Seq.foldMap \nfoldMap \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-set.html","title":"Set","content":"Set \n \nSet.monoid \nmonoid"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-collections-set.html#monoid","title":"Set.monoid","content":"Set.monoid \nmonoid \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html","title":"Enumerator","content":"Enumerator \n \nEnumerator.EnumerableBuilder \nEnumerableBuilder \nEnumerator.singleton \nsingleton \nEnumerator.bind \nbind \nEnumerator.combine \ncombine \nEnumerator.empty \nempty \nEnumerator.delay \ndelay \nEnumerator.toSeq \ntoSeq \nEnumerator.iter \niter \nEnumerator.head \nhead \nEnumerator.firstOrDefault \nfirstOrDefault \nEnumerator.lastOrDefault \nlastOrDefault \nEnumerator.last \nlast \nEnumerator.length \nlength \nEnumerator.skip \nskip \nEnumerator.take \ntake \nEnumerator.zip \nzip \nEnumerator.map \nmap \nEnumerator.scan \nscan \nEnumerator.scanWhile \nscanWhile \nEnumerator.scanUntil \nscanUntil"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#singleton","title":"Enumerator.singleton","content":"Enumerator.singleton \nsingleton \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#bind","title":"Enumerator.bind","content":"Enumerator.bind \nbind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#combine","title":"Enumerator.combine","content":"Enumerator.combine \ncombine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#empty","title":"Enumerator.empty","content":"Enumerator.empty \nempty \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#delay","title":"Enumerator.delay","content":"Enumerator.delay \ndelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#toSeq","title":"Enumerator.toSeq","content":"Enumerator.toSeq \ntoSeq \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#iter","title":"Enumerator.iter","content":"Enumerator.iter \niter \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#head","title":"Enumerator.head","content":"Enumerator.head \nhead \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#firstOrDefault","title":"Enumerator.firstOrDefault","content":"Enumerator.firstOrDefault \nfirstOrDefault \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#lastOrDefault","title":"Enumerator.lastOrDefault","content":"Enumerator.lastOrDefault \nlastOrDefault \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#last","title":"Enumerator.last","content":"Enumerator.last \nlast \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#length","title":"Enumerator.length","content":"Enumerator.length \nlength \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#skip","title":"Enumerator.skip","content":"Enumerator.skip \nskip \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#take","title":"Enumerator.take","content":"Enumerator.take \ntake \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#zip","title":"Enumerator.zip","content":"Enumerator.zip \nzip \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#map","title":"Enumerator.map","content":"Enumerator.map \nmap \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#scan","title":"Enumerator.scan","content":"Enumerator.scan \nscan \n\n Scan progressively folds over the enumerator, returning a new enumerator\n that lazily computes each state.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#scanWhile","title":"Enumerator.scanWhile","content":"Enumerator.scanWhile \nscanWhile \n\n Scan progressively folds over the enumerator, returning a new enumerator\n that lazily computes each state while the provided predicate is true.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator.html#scanUntil","title":"Enumerator.scanUntil","content":"Enumerator.scanUntil \nscanUntil \n\n Scan progressively folds over the enumerator, returning a new enumerator\n that lazily computes each state until the provided predicate is true.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator-enumerablebuilder.html","title":"EnumerableBuilder","content":"EnumerableBuilder \n \nEnumerableBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEnumerableBuilder.Bind \nBind \nEnumerableBuilder.Combine \nCombine \nEnumerableBuilder.Delay \nDelay \nEnumerableBuilder.Yield \nYield \nEnumerableBuilder.YieldFrom \nYieldFrom \nEnumerableBuilder.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator-enumerablebuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"EnumerableBuilder.\u0060\u0060.ctor\u0060\u0060","content":"EnumerableBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator-enumerablebuilder.html#Bind","title":"EnumerableBuilder.Bind","content":"EnumerableBuilder.Bind \nBind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator-enumerablebuilder.html#Combine","title":"EnumerableBuilder.Combine","content":"EnumerableBuilder.Combine \nCombine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator-enumerablebuilder.html#Delay","title":"EnumerableBuilder.Delay","content":"EnumerableBuilder.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator-enumerablebuilder.html#Yield","title":"EnumerableBuilder.Yield","content":"EnumerableBuilder.Yield \nYield \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator-enumerablebuilder.html#YieldFrom","title":"EnumerableBuilder.YieldFrom","content":"EnumerableBuilder.YieldFrom \nYieldFrom \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator-enumerablebuilder.html#Zero","title":"EnumerableBuilder.Zero","content":"EnumerableBuilder.Zero \nZero \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html","title":"Iteratee","content":"Iteratee \n \nIteratee.Binary \nBinary \nIteratee.List \nList \nIteratee.IterateeBuilder \nIterateeBuilder \nIteratee.returnI \nreturnI \nIteratee.empty \nempty \nIteratee.doneI \ndoneI \nIteratee.continueI \ncontinueI \nIteratee.throw \nthrow \nIteratee.bind \nbind \nIteratee.opt \nopt \nIteratee.catchError \ncatchError \nIteratee.tryFinally \ntryFinally \nIteratee.enumEOF \nenumEOF \nIteratee.enumErr \nenumErr \nIteratee.run_ \nrun_ \nIteratee.run \nrun \nIteratee.iteratee \niteratee \nIteratee.returnM \nreturnM \nIteratee.(\u003E\u003E=) \n(\u003E\u003E=) \nIteratee.(=\u003C\u003C) \n(=\u003C\u003C) \nIteratee.(\u003C*\u003E) \n(\u003C*\u003E) \nIteratee.ap \nap \nIteratee.map \nmap \nIteratee.(\u003C!\u003E) \n(\u003C!\u003E) \nIteratee.lift2 \nlift2 \nIteratee.( *\u003E ) \n( *\u003E ) \nIteratee.( \u003C* ) \n( \u003C* ) \nIteratee.(\u003E\u003E.) \n(\u003E\u003E.) \nIteratee.(\u003E=\u003E) \n(\u003E=\u003E) \nIteratee.(\u003C=\u003C) \n(\u003C=\u003C) \nIteratee.joinI \njoinI \nIteratee.enumList \nenumList \nIteratee.checkDoneEx \ncheckDoneEx \nIteratee.checkDone \ncheckDone \nIteratee.checkContinue0 \ncheckContinue0"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#returnI","title":"Iteratee.returnI","content":"Iteratee.returnI \nreturnI \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#empty","title":"Iteratee.empty","content":"Iteratee.empty \nempty \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#doneI","title":"Iteratee.doneI","content":"Iteratee.doneI \ndoneI \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#continueI","title":"Iteratee.continueI","content":"Iteratee.continueI \ncontinueI \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#throw","title":"Iteratee.throw","content":"Iteratee.throw \nthrow \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#bind","title":"Iteratee.bind","content":"Iteratee.bind \nbind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#opt","title":"Iteratee.opt","content":"Iteratee.opt \nopt \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#catchError","title":"Iteratee.catchError","content":"Iteratee.catchError \ncatchError \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#tryFinally","title":"Iteratee.tryFinally","content":"Iteratee.tryFinally \ntryFinally \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#enumEOF","title":"Iteratee.enumEOF","content":"Iteratee.enumEOF \nenumEOF \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#enumErr","title":"Iteratee.enumErr","content":"Iteratee.enumErr \nenumErr \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#run_","title":"Iteratee.run_","content":"Iteratee.run_ \nrun_ \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#run","title":"Iteratee.run","content":"Iteratee.run \nrun \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#iteratee","title":"Iteratee.iteratee","content":"Iteratee.iteratee \niteratee \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#returnM","title":"Iteratee.returnM","content":"Iteratee.returnM \nreturnM \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#(\u003E\u003E=)","title":"Iteratee.(\u003E\u003E=)","content":"Iteratee.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#(=\u003C\u003C)","title":"Iteratee.(=\u003C\u003C)","content":"Iteratee.(=\u003C\u003C) \n(=\u003C\u003C) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#(\u003C*\u003E)","title":"Iteratee.(\u003C*\u003E)","content":"Iteratee.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#ap","title":"Iteratee.ap","content":"Iteratee.ap \nap \n\n Sequential application\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#map","title":"Iteratee.map","content":"Iteratee.map \nmap \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#(\u003C!\u003E)","title":"Iteratee.(\u003C!\u003E)","content":"Iteratee.(\u003C!\u003E) \n(\u003C!\u003E) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#lift2","title":"Iteratee.lift2","content":"Iteratee.lift2 \nlift2 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#( *\u003E )","title":"Iteratee.( *\u003E )","content":"Iteratee.( *\u003E ) \n( *\u003E ) \n\n Sequence actions, discarding the value of the first argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#( \u003C* )","title":"Iteratee.( \u003C* )","content":"Iteratee.( \u003C* ) \n( \u003C* ) \n\n Sequence actions, discarding the value of the second argument.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#(\u003E\u003E.)","title":"Iteratee.(\u003E\u003E.)","content":"Iteratee.(\u003E\u003E.) \n(\u003E\u003E.) \n\n Sequentially compose two iteratee actions, discarding any value produced by the first\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#(\u003E=\u003E)","title":"Iteratee.(\u003E=\u003E)","content":"Iteratee.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Left-to-right Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#(\u003C=\u003C)","title":"Iteratee.(\u003C=\u003C)","content":"Iteratee.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Right-to-left Kleisli composition\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#joinI","title":"Iteratee.joinI","content":"Iteratee.joinI \njoinI \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#enumList","title":"Iteratee.enumList","content":"Iteratee.enumList \nenumList \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#checkDoneEx","title":"Iteratee.checkDoneEx","content":"Iteratee.checkDoneEx \ncheckDoneEx \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#checkDone","title":"Iteratee.checkDone","content":"Iteratee.checkDone \ncheckDone \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule.html#checkContinue0","title":"Iteratee.checkContinue0","content":"Iteratee.checkContinue0 \ncheckContinue0 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html","title":"Binary","content":"Binary \n \nBinary.BS \nBS \nBinary.fold \nfold \nBinary.length \nlength \nBinary.peek \npeek \nBinary.head \nhead \nBinary.drop \ndrop \nBinary.dropWhile \ndropWhile \nBinary.dropUntil \ndropUntil \nBinary.take \ntake \nBinary.takeWhile \ntakeWhile \nBinary.takeUntil \ntakeUntil \nBinary.heads \nheads \nBinary.many \nmany \nBinary.skipNewline \nskipNewline \nBinary.readLine \nreadLine \nBinary.readLines \nreadLines \nBinary.consume \nconsume \nBinary.enumeratePure1Chunk \nenumeratePure1Chunk \nBinary.enumeratePureNChunk \nenumeratePureNChunk \nBinary.enumerate \nenumerate \nBinary.repeat \nrepeat \nBinary.replicate \nreplicate \nBinary.isolate \nisolate \nBinary.isolateWhile \nisolateWhile \nBinary.isolateUntil \nisolateUntil \nBinary.concatMap \nconcatMap \nBinary.map \nmap \nBinary.filter \nfilter"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#fold","title":"Binary.fold","content":"Binary.fold \nfold \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#length","title":"Binary.length","content":"Binary.length \nlength \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#peek","title":"Binary.peek","content":"Binary.peek \npeek \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#head","title":"Binary.head","content":"Binary.head \nhead \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#drop","title":"Binary.drop","content":"Binary.drop \ndrop \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#dropWhile","title":"Binary.dropWhile","content":"Binary.dropWhile \ndropWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#dropUntil","title":"Binary.dropUntil","content":"Binary.dropUntil \ndropUntil \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#take","title":"Binary.take","content":"Binary.take \ntake \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#takeWhile","title":"Binary.takeWhile","content":"Binary.takeWhile \ntakeWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#takeUntil","title":"Binary.takeUntil","content":"Binary.takeUntil \ntakeUntil \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#heads","title":"Binary.heads","content":"Binary.heads \nheads \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#many","title":"Binary.many","content":"Binary.many \nmany \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#skipNewline","title":"Binary.skipNewline","content":"Binary.skipNewline \nskipNewline \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#readLine","title":"Binary.readLine","content":"Binary.readLine \nreadLine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#readLines","title":"Binary.readLines","content":"Binary.readLines \nreadLines \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#consume","title":"Binary.consume","content":"Binary.consume \nconsume \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#enumeratePure1Chunk","title":"Binary.enumeratePure1Chunk","content":"Binary.enumeratePure1Chunk \nenumeratePure1Chunk \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#enumeratePureNChunk","title":"Binary.enumeratePureNChunk","content":"Binary.enumeratePureNChunk \nenumeratePureNChunk \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#enumerate","title":"Binary.enumerate","content":"Binary.enumerate \nenumerate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#repeat","title":"Binary.repeat","content":"Binary.repeat \nrepeat \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#replicate","title":"Binary.replicate","content":"Binary.replicate \nreplicate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#isolate","title":"Binary.isolate","content":"Binary.isolate \nisolate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#isolateWhile","title":"Binary.isolateWhile","content":"Binary.isolateWhile \nisolateWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#isolateUntil","title":"Binary.isolateUntil","content":"Binary.isolateUntil \nisolateUntil \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#concatMap","title":"Binary.concatMap","content":"Binary.concatMap \nconcatMap \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#map","title":"Binary.map","content":"Binary.map \nmap \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule.html#filter","title":"Binary.filter","content":"Binary.filter \nfilter \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule-bs.html","title":"BS","content":"BS \n \nBS.Offset \nOffset \nBS.Count \nCount \nBS.Array \nArray \nBS.Item \nItem"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule-bs.html#Offset","title":"BS.Offset","content":"BS.Offset \nOffset \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule-bs.html#Count","title":"BS.Count","content":"BS.Count \nCount \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule-bs.html#Array","title":"BS.Array","content":"BS.Array \nArray \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-binarymodule-bs.html#Item","title":"BS.Item","content":"BS.Item \nItem \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html","title":"List","content":"List \n \nList.fold \nfold \nList.length \nlength \nList.peek \npeek \nList.head \nhead \nList.drop \ndrop \nList.dropWhile \ndropWhile \nList.dropUntil \ndropUntil \nList.take \ntake \nList.takeWhile \ntakeWhile \nList.takeUntil \ntakeUntil \nList.heads \nheads \nList.many \nmany \nList.skipNewline \nskipNewline \nList.readLine \nreadLine \nList.readLines \nreadLines \nList.consume \nconsume \nList.enumeratePure1Chunk \nenumeratePure1Chunk \nList.enumeratePureNChunk \nenumeratePureNChunk \nList.enumerate \nenumerate \nList.connect \nconnect \nList.repeat \nrepeat \nList.replicate \nreplicate \nList.isolate \nisolate \nList.isolateWhile \nisolateWhile \nList.isolateUntil \nisolateUntil \nList.concatMap \nconcatMap \nList.map \nmap \nList.filter \nfilter"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#fold","title":"List.fold","content":"List.fold \nfold \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#length","title":"List.length","content":"List.length \nlength \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#peek","title":"List.peek","content":"List.peek \npeek \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#head","title":"List.head","content":"List.head \nhead \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#drop","title":"List.drop","content":"List.drop \ndrop \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#dropWhile","title":"List.dropWhile","content":"List.dropWhile \ndropWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#dropUntil","title":"List.dropUntil","content":"List.dropUntil \ndropUntil \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#take","title":"List.take","content":"List.take \ntake \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#takeWhile","title":"List.takeWhile","content":"List.takeWhile \ntakeWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#takeUntil","title":"List.takeUntil","content":"List.takeUntil \ntakeUntil \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#heads","title":"List.heads","content":"List.heads \nheads \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#many","title":"List.many","content":"List.many \nmany \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#skipNewline","title":"List.skipNewline","content":"List.skipNewline \nskipNewline \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#readLine","title":"List.readLine","content":"List.readLine \nreadLine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#readLines","title":"List.readLines","content":"List.readLines \nreadLines \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#consume","title":"List.consume","content":"List.consume \nconsume \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#enumeratePure1Chunk","title":"List.enumeratePure1Chunk","content":"List.enumeratePure1Chunk \nenumeratePure1Chunk \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#enumeratePureNChunk","title":"List.enumeratePureNChunk","content":"List.enumeratePureNChunk \nenumeratePureNChunk \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#enumerate","title":"List.enumerate","content":"List.enumerate \nenumerate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#connect","title":"List.connect","content":"List.connect \nconnect \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#repeat","title":"List.repeat","content":"List.repeat \nrepeat \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#replicate","title":"List.replicate","content":"List.replicate \nreplicate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#isolate","title":"List.isolate","content":"List.isolate \nisolate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#isolateWhile","title":"List.isolateWhile","content":"List.isolateWhile \nisolateWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#isolateUntil","title":"List.isolateUntil","content":"List.isolateUntil \nisolateUntil \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#concatMap","title":"List.concatMap","content":"List.concatMap \nconcatMap \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#map","title":"List.map","content":"List.map \nmap \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-listmodule.html#filter","title":"List.filter","content":"List.filter \nfilter \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html","title":"IterateeBuilder","content":"IterateeBuilder \n \nIterateeBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nIterateeBuilder.Bind \nBind \nIterateeBuilder.Combine \nCombine \nIterateeBuilder.Delay \nDelay \nIterateeBuilder.For \nFor \nIterateeBuilder.Return \nReturn \nIterateeBuilder.ReturnFrom \nReturnFrom \nIterateeBuilder.TryFinally \nTryFinally \nIterateeBuilder.TryWith \nTryWith \nIterateeBuilder.Using \nUsing \nIterateeBuilder.While \nWhile \nIterateeBuilder.Zero \nZero"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"IterateeBuilder.\u0060\u0060.ctor\u0060\u0060","content":"IterateeBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#Bind","title":"IterateeBuilder.Bind","content":"IterateeBuilder.Bind \nBind \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#Combine","title":"IterateeBuilder.Combine","content":"IterateeBuilder.Combine \nCombine \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#Delay","title":"IterateeBuilder.Delay","content":"IterateeBuilder.Delay \nDelay \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#For","title":"IterateeBuilder.For","content":"IterateeBuilder.For \nFor \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#Return","title":"IterateeBuilder.Return","content":"IterateeBuilder.Return \nReturn \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#ReturnFrom","title":"IterateeBuilder.ReturnFrom","content":"IterateeBuilder.ReturnFrom \nReturnFrom \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#TryFinally","title":"IterateeBuilder.TryFinally","content":"IterateeBuilder.TryFinally \nTryFinally \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#TryWith","title":"IterateeBuilder.TryWith","content":"IterateeBuilder.TryWith \nTryWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#Using","title":"IterateeBuilder.Using","content":"IterateeBuilder.Using \nUsing \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#While","title":"IterateeBuilder.While","content":"IterateeBuilder.While \nWhile \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iterateemodule-iterateebuilder.html#Zero","title":"IterateeBuilder.Zero","content":"IterateeBuilder.Zero \nZero \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html","title":"Lens","content":"Lens \n \nLens.Operators \nOperators \nLens.StateOperators \nStateOperators \nLens.get \nget \nLens.set \nset \nLens.update \nupdate \nLens.compose \ncompose \nLens.choice \nchoice \nLens.pair \npair \nLens.cond \ncond \nLens.getState \ngetState \nLens.setState \nsetState \nLens.updateState \nupdateState \nLens.getAndModifyState \ngetAndModifyState \nLens.modifyAndGetState \nmodifyAndGetState \nLens.fst \nfst \nLens.snd \nsnd \nLens.id \nid \nLens.codiag \ncodiag \nLens.forSet \nforSet \nLens.forMap \nforMap \nLens.forArray \nforArray \nLens.forList \nforList \nLens.listMap \nlistMap \nLens.arrayMap \narrayMap \nLens.seqMap \nseqMap \nLens.xmap \nxmap \nLens.listToArray \nlistToArray \nLens.ignore \nignore"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#get","title":"Lens.get","content":"Lens.get \nget \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#set","title":"Lens.set","content":"Lens.set \nset \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#update","title":"Lens.update","content":"Lens.update \nupdate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#compose","title":"Lens.compose","content":"Lens.compose \ncompose \n\n Sequentially composes two lenses\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#choice","title":"Lens.choice","content":"Lens.choice \nchoice \n\n Composes two lenses through a sum in the source\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#pair","title":"Lens.pair","content":"Lens.pair \npair \n\n Pair two lenses\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#cond","title":"Lens.cond","content":"Lens.cond \ncond \n\u003Cspan class=\u0022fsdocs-param-name\u0022\u003Epred\u003C/span\u003E is applied to source. \n If true, \u003Cspan class=\u0022fsdocs-param-name\u0022\u003ElensTrue\u003C/span\u003E is selected.\n If false, \u003Cspan class=\u0022fsdocs-param-name\u0022\u003ElensFalse\u003C/span\u003E is selected.\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#getState","title":"Lens.getState","content":"Lens.getState \ngetState \n\n Applies a lens in the \u0027get\u0027 direction within a state monad      \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#setState","title":"Lens.setState","content":"Lens.setState \nsetState \n\n Applies a lens in the \u0027set\u0027 direction within a state monad\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#updateState","title":"Lens.updateState","content":"Lens.updateState \nupdateState \n\n Update through a lens within a state monad\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#getAndModifyState","title":"Lens.getAndModifyState","content":"Lens.getAndModifyState \ngetAndModifyState \n\n Modifies the state in a state monad and returns the original value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#modifyAndGetState","title":"Lens.modifyAndGetState","content":"Lens.modifyAndGetState \nmodifyAndGetState \n\n Modifies the state in a state monad and returns the modified value.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#fst","title":"Lens.fst","content":"Lens.fst \nfst \n\n Gets/sets the fst element in a pair\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#snd","title":"Lens.snd","content":"Lens.snd \nsnd \n\n Gets/sets the snd element in a pair\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#id","title":"Lens.id","content":"Lens.id \nid \n\n Identity lens\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#codiag","title":"Lens.codiag","content":"Lens.codiag \ncodiag \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#forSet","title":"Lens.forSet","content":"Lens.forSet \nforSet \n\n Lens for a particular value in a set\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#forMap","title":"Lens.forMap","content":"Lens.forMap \nforMap \n\n Lens for a particular key in a map\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#forArray","title":"Lens.forArray","content":"Lens.forArray \nforArray \n\n Lens for a particular position in an array\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#forList","title":"Lens.forList","content":"Lens.forList \nforList \n\n Lens for a particular position in a list\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#listMap","title":"Lens.listMap","content":"Lens.listMap \nlistMap \n\n Creates a lens that maps the given lens in a list\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#arrayMap","title":"Lens.arrayMap","content":"Lens.arrayMap \narrayMap \n\n Creates a lens that maps the given lens in an array\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#seqMap","title":"Lens.seqMap","content":"Lens.seqMap \nseqMap \n\n Creates a lens that maps the given lens in a sequence\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#xmap","title":"Lens.xmap","content":"Lens.xmap \nxmap \n\n Applies an isomorphism to the value viewed through a lens\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#listToArray","title":"Lens.listToArray","content":"Lens.listToArray \nlistToArray \n\n Converts a lens that views a list into a lens that views an array\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule.html#ignore","title":"Lens.ignore","content":"Lens.ignore \nignore \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html","title":"Operators","content":"Operators \n \nOperators.(\u003E\u003E|) \n(\u003E\u003E|) \nOperators.(|\u003C\u003C) \n(|\u003C\u003C) \nOperators.(.|.) \n(.|.) \nOperators.( *** ) \n( *** ) \nOperators.(\u002B=) \n(\u002B=) \nOperators.(-=) \n(-=) \nOperators.(/=) \n(/=) \nOperators.( *= ) \n( *= ) \nOperators.(|||=) \n(|||=) \nOperators.(||=) \n(||=) \nOperators.(\u0026\u0026\u0026=) \n(\u0026\u0026\u0026=) \nOperators.(\u0026\u0026=) \n(\u0026\u0026=) \nOperators.(=!) \n(=!)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(\u003E\u003E|)","title":"Operators.(\u003E\u003E|)","content":"Operators.(\u003E\u003E|) \n(\u003E\u003E|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(|\u003C\u003C)","title":"Operators.(|\u003C\u003C)","content":"Operators.(|\u003C\u003C) \n(|\u003C\u003C) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(.|.)","title":"Operators.(.|.)","content":"Operators.(.|.) \n(.|.) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#( *** )","title":"Operators.( *** )","content":"Operators.( *** ) \n( *** ) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(\u002B=)","title":"Operators.(\u002B=)","content":"Operators.(\u002B=) \n(\u002B=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(-=)","title":"Operators.(-=)","content":"Operators.(-=) \n(-=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(/=)","title":"Operators.(/=)","content":"Operators.(/=) \n(/=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#( *= )","title":"Operators.( *= )","content":"Operators.( *= ) \n( *= ) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(|||=)","title":"Operators.(|||=)","content":"Operators.(|||=) \n(|||=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(||=)","title":"Operators.(||=)","content":"Operators.(||=) \n(||=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(\u0026\u0026\u0026=)","title":"Operators.(\u0026\u0026\u0026=)","content":"Operators.(\u0026\u0026\u0026=) \n(\u0026\u0026\u0026=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(\u0026\u0026=)","title":"Operators.(\u0026\u0026=)","content":"Operators.(\u0026\u0026=) \n(\u0026\u0026=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-operators.html#(=!)","title":"Operators.(=!)","content":"Operators.(=!) \n(=!) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-stateoperators.html","title":"StateOperators","content":"StateOperators \n \nStateOperators.(\u002B=) \n(\u002B=) \nStateOperators.(-=) \n(-=) \nStateOperators.(/=) \n(/=) \nStateOperators.( *= ) \n( *= ) \nStateOperators.(|||=) \n(|||=) \nStateOperators.(||=) \n(||=) \nStateOperators.(\u0026\u0026\u0026=) \n(\u0026\u0026\u0026=) \nStateOperators.(\u0026\u0026=) \n(\u0026\u0026=) \nStateOperators.(=!) \n(=!)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-stateoperators.html#(\u002B=)","title":"StateOperators.(\u002B=)","content":"StateOperators.(\u002B=) \n(\u002B=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-stateoperators.html#(-=)","title":"StateOperators.(-=)","content":"StateOperators.(-=) \n(-=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-stateoperators.html#(/=)","title":"StateOperators.(/=)","content":"StateOperators.(/=) \n(/=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-stateoperators.html#( *= )","title":"StateOperators.( *= )","content":"StateOperators.( *= ) \n( *= ) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-stateoperators.html#(|||=)","title":"StateOperators.(|||=)","content":"StateOperators.(|||=) \n(|||=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-stateoperators.html#(||=)","title":"StateOperators.(||=)","content":"StateOperators.(||=) \n(||=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-stateoperators.html#(\u0026\u0026\u0026=)","title":"StateOperators.(\u0026\u0026\u0026=)","content":"StateOperators.(\u0026\u0026\u0026=) \n(\u0026\u0026\u0026=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-stateoperators.html#(\u0026\u0026=)","title":"StateOperators.(\u0026\u0026=)","content":"StateOperators.(\u0026\u0026=) \n(\u0026\u0026=) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lensmodule-stateoperators.html#(=!)","title":"StateOperators.(=!)","content":"StateOperators.(=!) \n(=!) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumeratee-3.html","title":"Enumeratee\u003C\u0027ChunkOut, \u0027ChunkIn, \u0027T\u003E","content":"Enumeratee\u003C\u0027ChunkOut, \u0027ChunkIn, \u0027T\u003E \n\n An enumeratee is an enumerator that produces an iteratee using another iteratee as input.\n Enumeratees can be used for tasks such as encoding or encrypting data.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-enumerator-2.html","title":"Enumerator\u003C\u0027Chunk, \u0027T\u003E","content":"Enumerator\u003C\u0027Chunk, \u0027T\u003E \n\n An enumerator generates a stream of data and feeds an iteratee, returning a new iteratee.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iteratee-2.html","title":"Iteratee\u003C\u0027Chunk, \u0027T\u003E","content":"Iteratee\u003C\u0027Chunk, \u0027T\u003E \n\n The iteratee is a stream consumer that will consume a stream of data until either \n it receives an EOF or meets its own requirements for consuming data. The iteratee\n will return Continue whenever it is ready to receive the next chunk. An iteratee\n is fed data by an Enumerator, which generates a Stream. \n \nIteratee\u003C\u0027Chunk, \u0027T\u003E.Done \nDone \nIteratee\u003C\u0027Chunk, \u0027T\u003E.Error \nError \nIteratee\u003C\u0027Chunk, \u0027T\u003E.Continue \nContinue"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iteratee-2.html#Done","title":"Iteratee\u003C\u0027Chunk, \u0027T\u003E.Done","content":"Iteratee\u003C\u0027Chunk, \u0027T\u003E.Done \nDone \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iteratee-2.html#Error","title":"Iteratee\u003C\u0027Chunk, \u0027T\u003E.Error","content":"Iteratee\u003C\u0027Chunk, \u0027T\u003E.Error \nError \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-iteratee-2.html#Continue","title":"Iteratee\u003C\u0027Chunk, \u0027T\u003E.Continue","content":"Iteratee\u003C\u0027Chunk, \u0027T\u003E.Continue \nContinue \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lens-2.html","title":"Lens\u003C\u0027T, \u0027U\u003E","content":"Lens\u003C\u0027T, \u0027U\u003E \n \nLens\u003C\u0027T, \u0027U\u003E.Update \nUpdate \nLens\u003C\u0027T, \u0027U\u003E.Get \nGet \nLens\u003C\u0027T, \u0027U\u003E.Set \nSet"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lens-2.html#Update","title":"Lens\u003C\u0027T, \u0027U\u003E.Update","content":"Lens\u003C\u0027T, \u0027U\u003E.Update \nUpdate \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lens-2.html#Get","title":"Lens\u003C\u0027T, \u0027U\u003E.Get","content":"Lens\u003C\u0027T, \u0027U\u003E.Get \nGet \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-lens-2.html#Set","title":"Lens\u003C\u0027T, \u0027U\u003E.Set","content":"Lens\u003C\u0027T, \u0027U\u003E.Set \nSet \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-stream-1.html","title":"Stream\u003C\u0027Chunk\u003E","content":"Stream\u003C\u0027Chunk\u003E \n\n A stream of chunks of data generated by an Enumerator.\n The stream can be composed of chunks of \u0027T, empty blocks indicating a wait, or an EOF marker.\n Be aware that when using #seq\u003C_\u003E types, you will need to check for both Seq.empty ([]) and Empty.\n \nStream\u003C\u0027Chunk\u003E.Chunk \nChunk \nStream\u003C\u0027Chunk\u003E.Empty \nEmpty \nStream\u003C\u0027Chunk\u003E.EOF \nEOF"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-stream-1.html#Chunk","title":"Stream\u003C\u0027Chunk\u003E.Chunk","content":"Stream\u003C\u0027Chunk\u003E.Chunk \nChunk \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-stream-1.html#Empty","title":"Stream\u003C\u0027Chunk\u003E.Empty","content":"Stream\u003C\u0027Chunk\u003E.Empty \nEmpty \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-functional-stream-1.html#EOF","title":"Stream\u003C\u0027Chunk\u003E.EOF","content":"Stream\u003C\u0027Chunk\u003E.EOF \nEOF \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html","title":"Conneg","content":"Conneg \n \nConneg.parseQ \nparseQ \nConneg.parseAccept \nparseAccept \nConneg.filterSortAccept \nfilterSortAccept \nConneg.parseFilterSortAccept \nparseFilterSortAccept \nConneg.splitMediaTypeSubtype \nsplitMediaTypeSubtype \nConneg.parseMediaTypes \nparseMediaTypes \nConneg.filterMediaTypes \nfilterMediaTypes \nConneg.matchMediaType \nmatchMediaType \nConneg.negotiateList \nnegotiateList \nConneg.negotiate \nnegotiate \nConneg.negotiateMediaType \nnegotiateMediaType \nConneg.bestOf \nbestOf \nConneg.bestMediaType \nbestMediaType \nConneg.matchLanguage \nmatchLanguage \nConneg.negotiateLanguage \nnegotiateLanguage \nConneg.bestLanguage \nbestLanguage \nConneg.matchCharset \nmatchCharset \nConneg.negotiateCharset \nnegotiateCharset \nConneg.bestCharset \nbestCharset \nConneg.negotiateEncoding \nnegotiateEncoding \nConneg.bestEncoding \nbestEncoding \nConneg.(|AcceptsMedia|_|) \n(|AcceptsMedia|_|)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#parseQ","title":"Conneg.parseQ","content":"Conneg.parseQ \nparseQ \n\n Parses a single Accept-* header item. \n Returns item with associated q\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#parseAccept","title":"Conneg.parseAccept","content":"Conneg.parseAccept \nparseAccept \n\n Parses any Accept-* header, returns a seq of items with associated q (quality/preference)\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#filterSortAccept","title":"Conneg.filterSortAccept","content":"Conneg.filterSortAccept \nfilterSortAccept \n\n Takes a list of items with associated numeric quality (preference), and:\n removes all items with q=0 (i.e. not acceptable by client);\n sorts by q descending (client preference)\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#parseFilterSortAccept","title":"Conneg.parseFilterSortAccept","content":"Conneg.parseFilterSortAccept \nparseFilterSortAccept \n\n Parses any Accept-* header. \n Removes all items with q=0 (i.e. not acceptable by client).\n Sorts by q descending (client preference)\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#splitMediaTypeSubtype","title":"Conneg.splitMediaTypeSubtype","content":"Conneg.splitMediaTypeSubtype \nsplitMediaTypeSubtype \n\n Splits media type and subtype, e.g. \u0022text/html\u0022 -\u003E \u0022text\u0022,\u0022html\u0022\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#parseMediaTypes","title":"Conneg.parseMediaTypes","content":"Conneg.parseMediaTypes \nparseMediaTypes \n\n Parses an Accept header into a list of media,(media type, media subtype),q\n E.g. \u0022text/html\u0022,(\u0022text\u0022,\u0022html\u0022),0.8\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#filterMediaTypes","title":"Conneg.filterMediaTypes","content":"Conneg.filterMediaTypes \nfilterMediaTypes \n\n Filters an Accept header by type.\n E.g. \u003Ccode\u003EfilterMediaTypes \u0026quot;image\u0026quot; \u0026quot;image/png,text/html\u0026quot;\u003C/code\u003E -\u003E \u003Ccode\u003E[\u0026quot;image/png\u0026quot;]\u003C/code\u003E"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#matchMediaType","title":"Conneg.matchMediaType","content":"Conneg.matchMediaType \nmatchMediaType \n\n Finds a match between two media types, handling wildcards.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if no match, otherwise \u003Ccode\u003ESome media\u003C/code\u003E\n Example: \u003Ccode\u003EmatchMediaType \u0026quot;text/*\u0026quot; \u0026quot;text/plain\u0026quot;\u003C/code\u003E -\u003E \u003Ccode\u003E\u0026quot;text/plain\u0026quot;\u003C/code\u003E"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#negotiateList","title":"Conneg.negotiateList","content":"Conneg.negotiateList \nnegotiateList \n\n Filters and maps two sequences of items using a matcher function.\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#negotiate","title":"Conneg.negotiate","content":"Conneg.negotiate \nnegotiate \n\n Filters and maps a list of served items and a Accept-* header of acceptable items using a matcher function\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#negotiateMediaType","title":"Conneg.negotiateMediaType","content":"Conneg.negotiateMediaType \nnegotiateMediaType \n\n Intersects accepted and served media. \n Returns a list of viable media, sorted by client preference in descending order\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#bestOf","title":"Conneg.bestOf","content":"Conneg.bestOf \nbestOf \n\n Gets the first item from a list of negotiated items\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#bestMediaType","title":"Conneg.bestMediaType","content":"Conneg.bestMediaType \nbestMediaType \n\n Intersects accepted and served media.\n Returns the preferred viable media, or \u003Ccode\u003ENone\u003C/code\u003E.\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#matchLanguage","title":"Conneg.matchLanguage","content":"Conneg.matchLanguage \nmatchLanguage \n\n Matches two language tags\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#negotiateLanguage","title":"Conneg.negotiateLanguage","content":"Conneg.negotiateLanguage \nnegotiateLanguage \n\n Intersects accepted and served languages. \n Returns a list of viable languages, sorted by client preference in descending order\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#bestLanguage","title":"Conneg.bestLanguage","content":"Conneg.bestLanguage \nbestLanguage \n\n Intersects accepted and served media.\n Returns the preferred viable language, or \u003Ccode\u003ENone\u003C/code\u003E.\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#matchCharset","title":"Conneg.matchCharset","content":"Conneg.matchCharset \nmatchCharset \n\n Matches two charset tags\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#negotiateCharset","title":"Conneg.negotiateCharset","content":"Conneg.negotiateCharset \nnegotiateCharset \n\n Intersects accepted and served charsets. \n Returns a list of viable charsets, sorted by client preference in descending order\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#bestCharset","title":"Conneg.bestCharset","content":"Conneg.bestCharset \nbestCharset \n\n Intersects accepted and served charsets.\n Returns the preferred viable charset, or \u003Ccode\u003ENone\u003C/code\u003E.\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#negotiateEncoding","title":"Conneg.negotiateEncoding","content":"Conneg.negotiateEncoding \nnegotiateEncoding \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#bestEncoding","title":"Conneg.bestEncoding","content":"Conneg.bestEncoding \nbestEncoding \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-http-conneg.html#(|AcceptsMedia|_|)","title":"Conneg.(|AcceptsMedia|_|)","content":"Conneg.(|AcceptsMedia|_|) \n(|AcceptsMedia|_|) \n\n Matches if the media parameter can be handled by the accept list\n "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html","title":"IOPrimitives","content":"IOPrimitives \n \nIOPrimitives.LinuxLineBreaks \nLinuxLineBreaks \nIOPrimitives.WindowsLineBreaks \nWindowsLineBreaks \nIOPrimitives.MacLineBreaks \nMacLineBreaks \nIOPrimitives.directoryInfo \ndirectoryInfo \nIOPrimitives.fileInfo \nfileInfo \nIOPrimitives.fileSystemInfo \nfileSystemInfo \nIOPrimitives.getFullName \ngetFullName \nIOPrimitives.subDirectories \nsubDirectories \nIOPrimitives.filesInDir \nfilesInDir \nIOPrimitives.currentDirectory \ncurrentDirectory \nIOPrimitives.checkFileExists \ncheckFileExists \nIOPrimitives.allFilesExist \nallFilesExist \nIOPrimitives.readFileAsString \nreadFileAsString \nIOPrimitives.readFile \nreadFile \nIOPrimitives.writeToFile \nwriteToFile \nIOPrimitives.writeStringToFile \nwriteStringToFile \nIOPrimitives.replaceFile \nreplaceFile \nIOPrimitives.convertTextToWindowsLineBreaks \nconvertTextToWindowsLineBreaks \nIOPrimitives.append \nappend \nIOPrimitives.appendIfTrue \nappendIfTrue \nIOPrimitives.appendIfFalse \nappendIfFalse \nIOPrimitives.appendIfNotNull \nappendIfNotNull \nIOPrimitives.appendStringIfValueIsNotNull \nappendStringIfValueIsNotNull \nIOPrimitives.appendStringIfValueIsNotNullOrEmpty \nappendStringIfValueIsNotNullOrEmpty \nIOPrimitives.appendFileNamesIfNotNull \nappendFileNamesIfNotNull \nIOPrimitives.directorySeparator \ndirectorySeparator \nIOPrimitives.combinePaths \ncombinePaths"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#LinuxLineBreaks","title":"IOPrimitives.LinuxLineBreaks","content":"IOPrimitives.LinuxLineBreaks \nLinuxLineBreaks \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#WindowsLineBreaks","title":"IOPrimitives.WindowsLineBreaks","content":"IOPrimitives.WindowsLineBreaks \nWindowsLineBreaks \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#MacLineBreaks","title":"IOPrimitives.MacLineBreaks","content":"IOPrimitives.MacLineBreaks \nMacLineBreaks \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#directoryInfo","title":"IOPrimitives.directoryInfo","content":"IOPrimitives.directoryInfo \ndirectoryInfo \n\n Creates a DirectoryInfo for the given path\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#fileInfo","title":"IOPrimitives.fileInfo","content":"IOPrimitives.fileInfo \nfileInfo \n\n Creates a FileInfo for the given path\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#fileSystemInfo","title":"IOPrimitives.fileSystemInfo","content":"IOPrimitives.fileSystemInfo \nfileSystemInfo \n\n Creates a FileInfo or a DirectoryInfo for the given path\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#getFullName","title":"IOPrimitives.getFullName","content":"IOPrimitives.getFullName \ngetFullName \n\n Converts a file to it\u0027s full file system name\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#subDirectories","title":"IOPrimitives.subDirectories","content":"IOPrimitives.subDirectories \nsubDirectories \n\n Gets all subdirectories\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#filesInDir","title":"IOPrimitives.filesInDir","content":"IOPrimitives.filesInDir \nfilesInDir \n\n Gets all files in the directory\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#currentDirectory","title":"IOPrimitives.currentDirectory","content":"IOPrimitives.currentDirectory \ncurrentDirectory \n\n Gets the current directory\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#checkFileExists","title":"IOPrimitives.checkFileExists","content":"IOPrimitives.checkFileExists \ncheckFileExists \n\n Checks if the file exists on disk.\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#allFilesExist","title":"IOPrimitives.allFilesExist","content":"IOPrimitives.allFilesExist \nallFilesExist \n\n Checks if all given files exists\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#readFileAsString","title":"IOPrimitives.readFileAsString","content":"IOPrimitives.readFileAsString \nreadFileAsString \n\n Reads a file as one text\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#readFile","title":"IOPrimitives.readFile","content":"IOPrimitives.readFile \nreadFile \n\n Reads a file line by line\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#writeToFile","title":"IOPrimitives.writeToFile","content":"IOPrimitives.writeToFile \nwriteToFile \n\n Writes a file line by line\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#writeStringToFile","title":"IOPrimitives.writeStringToFile","content":"IOPrimitives.writeStringToFile \nwriteStringToFile \n\n Writes a single string to a file\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#replaceFile","title":"IOPrimitives.replaceFile","content":"IOPrimitives.replaceFile \nreplaceFile \n\n Replaces the file with the given string\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#convertTextToWindowsLineBreaks","title":"IOPrimitives.convertTextToWindowsLineBreaks","content":"IOPrimitives.convertTextToWindowsLineBreaks \nconvertTextToWindowsLineBreaks \n\n Converts the given text from linux or mac linebreaks to windows line breaks\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#append","title":"IOPrimitives.append","content":"IOPrimitives.append \nappend \n\n Appends a text\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#appendIfTrue","title":"IOPrimitives.appendIfTrue","content":"IOPrimitives.appendIfTrue \nappendIfTrue \n\n Appends a text if the predicate is true\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#appendIfFalse","title":"IOPrimitives.appendIfFalse","content":"IOPrimitives.appendIfFalse \nappendIfFalse \n\n Appends a text if the predicate is false\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#appendIfNotNull","title":"IOPrimitives.appendIfNotNull","content":"IOPrimitives.appendIfNotNull \nappendIfNotNull \n\n Appends a text if the value is not null\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#appendStringIfValueIsNotNull","title":"IOPrimitives.appendStringIfValueIsNotNull","content":"IOPrimitives.appendStringIfValueIsNotNull \nappendStringIfValueIsNotNull \n\n Appends a text if the value is not null\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#appendStringIfValueIsNotNullOrEmpty","title":"IOPrimitives.appendStringIfValueIsNotNullOrEmpty","content":"IOPrimitives.appendStringIfValueIsNotNullOrEmpty \nappendStringIfValueIsNotNullOrEmpty \n\n Appends a text if the value is not null or empty\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#appendFileNamesIfNotNull","title":"IOPrimitives.appendFileNamesIfNotNull","content":"IOPrimitives.appendFileNamesIfNotNull \nappendFileNamesIfNotNull \n\n Appends all notnull fileNames\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#directorySeparator","title":"IOPrimitives.directorySeparator","content":"IOPrimitives.directorySeparator \ndirectorySeparator \n\n The directory separator string. On most systems / or \\\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-io-ioprimitives.html#combinePaths","title":"IOPrimitives.combinePaths","content":"IOPrimitives.combinePaths \ncombinePaths \n\n Combines two path strings\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-linq-extrahashcompare.html","title":"ExtraHashCompare","content":"ExtraHashCompare \n \nExtraHashCompare.GenericNotEqualIntrinsic \nGenericNotEqualIntrinsic"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-linq-extrahashcompare.html#GenericNotEqualIntrinsic","title":"ExtraHashCompare.GenericNotEqualIntrinsic","content":"ExtraHashCompare.GenericNotEqualIntrinsic \nGenericNotEqualIntrinsic \n\n An intrinsic for compiling \u003Cc\u003E\u0026lt;@ x \u003C\u003E y @\u0026gt;\u003C/c\u003E to expression trees\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule.html","title":"Regex","content":"Regex \n \nRegex.Compiled \nCompiled \nRegex.Interpreted \nInterpreted \nRegex.Options \nOptions \nRegex.replaceWithAcc \nreplaceWithAcc \nRegex.replaceWith \nreplaceWith \nRegex.tryMatchWithOptions \ntryMatchWithOptions \nRegex.tryMatch \ntryMatch \nRegex.(|Match|_|) \n(|Match|_|)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule.html#replaceWithAcc","title":"Regex.replaceWithAcc","content":"Regex.replaceWithAcc \nreplaceWithAcc \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule.html#replaceWith","title":"Regex.replaceWith","content":"Regex.replaceWith \nreplaceWith \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule.html#tryMatchWithOptions","title":"Regex.tryMatchWithOptions","content":"Regex.tryMatchWithOptions \ntryMatchWithOptions \n\nflags:RegexOptions -\u003E pattern:string -\u003E input:string -\u003E Regex.ActiveMatch option\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule.html#tryMatch","title":"Regex.tryMatch","content":"Regex.tryMatch \ntryMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule.html#(|Match|_|)","title":"Regex.(|Match|_|)","content":"Regex.(|Match|_|) \n(|Match|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule-compiled.html","title":"Compiled","content":"Compiled \n \nCompiled.(|Match|_|) \n(|Match|_|)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule-compiled.html#(|Match|_|)","title":"Compiled.(|Match|_|)","content":"Compiled.(|Match|_|) \n(|Match|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule-interpreted.html","title":"Interpreted","content":"Interpreted \n \nInterpreted.(|Match|_|) \n(|Match|_|)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule-interpreted.html#(|Match|_|)","title":"Interpreted.(|Match|_|)","content":"Interpreted.(|Match|_|) \n(|Match|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-regexmodule-options.html","title":"Options","content":"Options \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html","title":"Strings","content":"Strings \n \nStrings.startsWith \nstartsWith \nStrings.replace \nreplace \nStrings.contains \ncontains \nStrings.split \nsplit \nStrings.toCharArray \ntoCharArray \nStrings.isNewline \nisNewline \nStrings.splitBy \nsplitBy \nStrings.toLines \ntoLines \nStrings.joinLines \njoinLines \nStrings.toWords \ntoWords \nStrings.joinWords \njoinWords \nStrings.isNullOrEmpty \nisNullOrEmpty \nStrings.pluralize \npluralize \nStrings.singularize \nsingularize \nStrings.(@?) \n(@?) \nStrings.satisfies \nsatisfies \nStrings.niceName \nniceName \nStrings.isBool \nisBool \nStrings.isInt \nisInt \nStrings.isInt64 \nisInt64 \nStrings.isFloat \nisFloat \nStrings.inferType \ninferType \nStrings.(|EOF|_|) \n(|EOF|_|) \nStrings.(|LetterDigit|_|) \n(|LetterDigit|_|) \nStrings.(|Upper|_|) \n(|Upper|_|) \nStrings.(|Lower|_|) \n(|Lower|_|)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#startsWith","title":"Strings.startsWith","content":"Strings.startsWith \nstartsWith \n\n Checks whether the given text starts with the given prefix\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#replace","title":"Strings.replace","content":"Strings.replace \nreplace \n\n Replaces the given \u0022replacement\u0022 for every occurence of the pattern in the given text \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#contains","title":"Strings.contains","content":"Strings.contains \ncontains \n\n Returns a value indicating whether the specified substring occurs within this string\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#split","title":"Strings.split","content":"Strings.split \nsplit \n\n Splits the given string at the given delimiter\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#toCharArray","title":"Strings.toCharArray","content":"Strings.toCharArray \ntoCharArray \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#isNewline","title":"Strings.isNewline","content":"Strings.isNewline \nisNewline \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#splitBy","title":"Strings.splitBy","content":"Strings.splitBy \nsplitBy \n\n Returns a sequence of strings split by the predicate    \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#toLines","title":"Strings.toLines","content":"Strings.toLines \ntoLines \n\n Splits a string based on newlines \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#joinLines","title":"Strings.joinLines","content":"Strings.joinLines \njoinLines \n\n Creates newline seperated string from the string list\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#toWords","title":"Strings.toWords","content":"Strings.toWords \ntoWords \n\n Splits a string based on whitespace (spaces, tabs, and newlines)\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#joinWords","title":"Strings.joinWords","content":"Strings.joinWords \njoinWords \n\n Folds the string list by seperating entries with a single space\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#isNullOrEmpty","title":"Strings.isNullOrEmpty","content":"Strings.isNullOrEmpty \nisNullOrEmpty \n\n Returns if the string is null or empty\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#pluralize","title":"Strings.pluralize","content":"Strings.pluralize \npluralize \n\n Returns the pluralized version of a noun\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#singularize","title":"Strings.singularize","content":"Strings.singularize \nsingularize \n\n Returns the singularized version of a noun\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#(@?)","title":"Strings.(@?)","content":"Strings.(@?) \n(@?) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#satisfies","title":"Strings.satisfies","content":"Strings.satisfies \nsatisfies \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#niceName","title":"Strings.niceName","content":"Strings.niceName \nniceName \n\n Turns a string into a nice PascalCase identifier\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#isBool","title":"Strings.isBool","content":"Strings.isBool \nisBool \n\n Checks whether the string is a boolean value\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#isInt","title":"Strings.isInt","content":"Strings.isInt \nisInt \n\n Checks whether the string is an int32\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#isInt64","title":"Strings.isInt64","content":"Strings.isInt64 \nisInt64 \n\n Checks whether the string is an int64\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#isFloat","title":"Strings.isFloat","content":"Strings.isFloat \nisFloat \n\n Checks whether the string is a float\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#inferType","title":"Strings.inferType","content":"Strings.inferType \ninferType \n\n Checks whether all values of the sequence can be inferred to a special type\n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#(|EOF|_|)","title":"Strings.(|EOF|_|)","content":"Strings.(|EOF|_|) \n(|EOF|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#(|LetterDigit|_|)","title":"Strings.(|LetterDigit|_|)","content":"Strings.(|LetterDigit|_|) \n(|LetterDigit|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#(|Upper|_|)","title":"Strings.(|Upper|_|)","content":"Strings.(|Upper|_|) \n(|Upper|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-strings.html#(|Lower|_|)","title":"Strings.(|Lower|_|)","content":"Strings.(|Lower|_|) \n(|Lower|_|) \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-activematch.html","title":"ActiveMatch","content":"ActiveMatch \n \nActiveMatch.Match \nMatch \nActiveMatch.MatchValue \nMatchValue \nActiveMatch.Groups \nGroups \nActiveMatch.OptionalGroups \nOptionalGroups \nActiveMatch.GroupValues \nGroupValues \nActiveMatch.OptionalGroupValues \nOptionalGroupValues"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-activematch.html#Match","title":"ActiveMatch.Match","content":"ActiveMatch.Match \nMatch \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-activematch.html#MatchValue","title":"ActiveMatch.MatchValue","content":"ActiveMatch.MatchValue \nMatchValue \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-activematch.html#Groups","title":"ActiveMatch.Groups","content":"ActiveMatch.Groups \nGroups \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-activematch.html#OptionalGroups","title":"ActiveMatch.OptionalGroups","content":"ActiveMatch.OptionalGroups \nOptionalGroups \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-activematch.html#GroupValues","title":"ActiveMatch.GroupValues","content":"ActiveMatch.GroupValues \nGroupValues \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/reference/fsharpx-text-activematch.html#OptionalGroupValues","title":"ActiveMatch.OptionalGroupValues","content":"ActiveMatch.OptionalGroupValues \nOptionalGroupValues \n"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/DiningPhilosophers.html","title":"DiningPhilosophers","content":"#r @\u0022../bin/FSharpx.Extras.dll\u0022\n\nopen System\nopen System.Threading\nopen FSharpx.Stm\n\nlet check p =\n    match p with\n    | true -\u003E stm.Return(())\n    | false -\u003E retry ()\n\nlet forkIO (f : unit -\u003E unit) = (new Thread(f)).Start()\n\nlet rec forever act : unit = act (); forever act\n\nlet take fork = \n    stm {\n        let! ref_fork = readTVar (fork)\n        do! check ref_fork\n        do! writeTVar (fork) false\n    } \n\nlet adquire left_fork right_fork  =  \n    stm { \n        do! take left_fork\n        do! take right_fork\n    } |\u003E atomically    \n\nlet release left_fork right_fork = \n    stm { \n        do! writeTVar left_fork true\n        do! writeTVar right_fork true\n    } |\u003E atomically    \n    \nlet rng = new Random()\n\nlet n = 7 ;\n\nlet thinking = Array.zeroCreate n\nlet eating   = Array.zeroCreate n\n\nlet randomDelay () = \n    let waitTime = rng.Next(1000)\n    Thread.Sleep waitTime\n    uint64 waitTime\n\nlet eatOrThink i left_fork right_fork = \n    if (rng.Next(100)) \u003E 50\n    then \n        adquire left_fork right_fork\n        printf \u0022philosopher [%d] is eating.\\n\u0022 i\n        eating.[i] \u003C- eating.[i] \u002B randomDelay ()\n        release left_fork right_fork\n    else \n        printf \u0022philosopher [%d] is thinking.\\n\u0022 i\n        thinking.[i] \u003C- thinking.[i] \u002B randomDelay ()\n\nlet philosofer i leftfork rightfork = \n    fun () -\u003E forever (fun () -\u003E eatOrThink i leftfork rightfork)\n\nlet timer = new System.Diagnostics.Stopwatch()\n\ntimer.Start()\n\nlet rec main () = \n    let forks = Array.init n (fun _ -\u003E newTVar(true))\n    for i in 0..n-1 do\n        forkIO (philosofer i forks.[i] forks.[(i \u002B 1) % n])\n    \nlet onInterrupt _ _ =\n    timer.Stop()\n    printf \u0022\\ndone.\\n\u0022\n    let total = float timer.ElapsedMilliseconds\n    let p x = ((float x) * 100.0) / (float total)\n    for i in 0..n-1 do\n        printf \u0022philosopher [%d] - percents: %.2f eating, %.2f thinking, %.2f obtaining forks\\n\u0022\n            i (p eating.[i]) (p thinking.[i]) (100. - (p eating.[i] \u002B p thinking.[i]))\n    \nConsole.CancelKeyPress.AddHandler( new ConsoleCancelEventHandler( onInterrupt ))\n\nmain()"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/index.html","title":"FSharpx.Extras\r\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#I \u0022../bin\u0022\n\n(** \n# FSharpx.Extras\n\n## FSharpx.Extras\n\nFSharpx.Extras implements:\n\n* Several standard monads: State, Reader, Writer, Either, Continuation, Distribution\n\n* Validation applicative functor\n\n* General functions like flip\n\n* Some asynchronous programming utilities\n\n* Functions to make C# - F# interop easier.\n\n* A few features for working with HTTP applications.\n\nFSharpx.Extras is a set of additions on top of FSharpx.Collections and FSharpx.Async\n\n\n## FSharpx.Text.StructuredFormat\n\nThis is a separate component:\n\n* FSharpx.Text.StructuredFormat provides data structures and functions for pretty printers.\n\n\n*)\n\n#r \u0022FSharpx.Collections.dll\u0022\n#r \u0022FSharpx.Extras.dll\u0022\n\nopen FSharpx\n\nopen FSharpx.Collections\n\n// Access the object that proves that \u0027List\u0027 is a \u0027monoid\u0027\n\nFSharpx.Collections.List.monoid\n\n(**\n\n## Examples\n\n* [DiningPhilosophers](DiningPhilosophers.html)\n* [Santa](Santa.html)\n* [StmSample](StmSample.html)\n* [UndoSample](UndoSample.html)\n* [WebProxy](WebProxy.html)\n\n*)"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/MonoidCESample.html","title":"MonoidCESample","content":"#r @\u0022../bin/FSharpx.Extras.dll\u0022\n#r @\u0022../bin/FSharpx.Collections.dll\u0022\n\nopen FSharpx\n\n// Sample monoid implementation\nlet addition = Monoid.sum()\n\n// Using monoids computation expression capabilities\nlet x : float =\n    addition {\n        yield 1.0\n        yield 5.0\n        yield 6.0\n    }\n\n// Getting the zero\nlet zero : float =\n    addition {\n        ()\n    }"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/Santa.html","title":"Santa","content":"#r @\u0022../bin/FSharpx.Extras.dll\u0022\n\nopen System\nopen System.Threading\nopen FSharpx.Stm\n\nlet check p =\n  match p with\n  | true -\u003E stm.Return(())\n  | false -\u003E retry ()\n\nlet forkIO (f : unit -\u003E unit) = \n  let t = new Thread(f)\n  t.Start()\n  t\n\n//----------------\n\n//forever :: IO () -\u003E IO ()\n// Repeatedly perform the action\nlet rec forever act : unit = act (); forever act\n\n//randomDelay :: IO ()\n// Delay for a random time between 1 and 1000,000 microseconds\nlet rng = new Random()\nlet randomDelay () = \n  let waitTime = rng.Next(1000)\n  Thread.Sleep(waitTime)\n\n//choose :: [(STM a, a -\u003E IO ())] -\u003E IO ()\nlet choose choices : unit = \n  //stmActions :: [STM (IO ())]\n  let stmActions = [ for (guard, rhs) in choices -\u003E stm { let! v = guard in return (rhs v) } ]\n  stmActions |\u003E List.reduceBack orElse |\u003E atomically\n\n//---------------\ntype Gate = MkGate of int * TVar\u003Cint\u003E\n\n//newGate :: Int -\u003E STM Gate\nlet newGate n = \n  stm { let tv = newTVar 0 in return MkGate (n, tv) }\n\n//passGate :: Gate -\u003E IO ()\nlet passGate (MkGate (n,tv)) =\n  stm { let! n_left = readTVar tv\n        do! check (n_left \u003E 0)\n        do! writeTVar tv (n_left-1)\n        return () } |\u003E atomically\n\n//operateGate :: Gate -\u003E IO ()\nlet operateGate (MkGate (n,tv)) =\n   stm { return! writeTVar tv n } |\u003E atomically\n   stm { let! n_left = readTVar tv\n         return! check (n_left = 0) } |\u003E atomically\n\n//---------------\ntype Group = MkGroup of int * TVar\u003Cint * Gate * Gate\u003E\n\n//newGroup :: Int -\u003E IO Group\nlet newGroup n = \n  stm { let! g1 = newGate n\n        let! g2 = newGate n\n        let  tv = newTVar (n, g1, g2)\n        return MkGroup (n, tv)  } |\u003E atomically\n\n//joinGroup :: Group -\u003E IO (Gate,Gate)\nlet joinGroup (MkGroup (n,tv)) =\n  stm { let! n_left, g1, g2 = readTVar tv\n        do! check (n_left \u003E 0) \n        do! writeTVar tv (n_left-1, g1, g2)\n        return (g1,g2) } |\u003E atomically\n\n//awaitGroup :: Group -\u003E STM (Gate,Gate)\nlet awaitGroup (MkGroup (n,tv)) =\n  stm { let! n_left, g1, g2 = readTVar tv\n        do! check (n_left = 0) \n        let! new_g1 = newGate n\n        let! new_g2 = newGate n\n        do! writeTVar tv (n,new_g1,new_g2)\n        return (g1,g2) }\n\n//---------------       \nlet rec main () = \n  let elf_gp = newGroup 3\n  List.iter (fun n -\u003E elf elf_gp n |\u003E ignore) [1..10]\n  let rein_gp = newGroup 9\n  List.iter (fun n -\u003E reindeer rein_gp n |\u003E ignore) [1..9]\n  forever (fun () -\u003E santa elf_gp rein_gp)\n\nand elf gp id = forkIO (fun () -\u003E forever (fun () -\u003E elf1 gp id; randomDelay ()))\n\nand reindeer gp id = forkIO (fun () -\u003E forever (fun () -\u003E reindeer1 gp id; randomDelay ()))\n\n//santa :: Group -\u003E Group -\u003E IO ()\nand santa elf_group rein_group =\n  Console.WriteLine(\u0022----------\u0022)\n  choose [awaitGroup rein_group, run \u0022deliver toys\u0022; \n          awaitGroup elf_group,  run \u0022meet in my study\u0022]\n\n//run :: String -\u003E (Gate,Gate) -\u003E IO ()\nand run task (in_gate,out_gate) =\n  Console.WriteLine(\u0022Ho! Ho! Ho! let\u0027s {0}\u0022, task)\n  operateGate in_gate\n  operateGate out_gate\n\n//helper1 :: Group -\u003E IO () -\u003E IO ()\nand helper1 group do_task =\n  let in_gate, out_gate = joinGroup group\n  passGate in_gate\n  do_task ()\n  passGate out_gate\n\n//elf1, reindeer1 :: Group -\u003E Int -\u003E IO ()\nand elf1 group id = helper1 group (fun () -\u003E meetInStudy id)\nand reindeer1 group id = helper1 group (fun () -\u003E deliverToys id)\n\nand meetInStudy id = Console.WriteLine(\u0022Elf {0} meeting in the study\u0022, id)\nand deliverToys id = Console.WriteLine(\u0022Reindeer {0} delivering toys\u0022, id)\n\n#if INTERACTIVE\nmain()\n#else\n[\u003CEntryPoint\u003E]\nlet entryPoint args = main(); 0\n#endif"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/StateSample.html","title":"StateSample","content":"#r @\u0022../bin/FSharpx.Extras.dll\u0022\n#r @\u0022../bin/FSharpx.Collections.dll\u0022\n\nopen System\nopen System.Threading\nopen FSharpx\n\ntype MyStateRecord =\n    {\n        X:int\n        Y:string\n    }\ntype MyResultType =\n    {\n        R: double\n    }\n\nlet \u0060\u0060nested step without result\u0060\u0060 : State.State\u003Cunit,MyStateRecord\u003E =\n    State.state {\n        printfn \u0022Starting \u0060\u0060nested step without result\u0060\u0060\u0022\n        \n        let! s = State.getState\n        do! State.putState {s with X = s.X\u002B1}\n        printfn \u0022Ending \u0060\u0060nested step without result\u0060\u0060\u0022\n    }\n\nlet \u0060\u0060nested step with same state type, but different result type\u0060\u0060 : State.State\u003Cchar,MyStateRecord\u003E =\n    State.state {\n        printfn \u0022Starting \u0060\u0060nested step with same state type, but different result type\u0060\u0060\u0022\n        \n        printfn \u0022Getting the state sn1 inside nested step \u0022\n        let! sn1 = State.getState\n        printfn \u0022sn1: %A\u0022 sn1\n\n        printfn \u0022Writing state inside nested step\u0022\n        do! State.putState {sn1 with X=0;  Y=\u0022nested Step\u0022}\n        printfn \u0022Getting the state sn2 inside nested step \u0022\n        let! sn2 = State.getState\n        \n        printfn \u0022Notice that put does not mutate sn1\u0022\n        printfn \u0022sn1: %A\u0022 sn1\n        printfn \u0022sn2: %A\u0022 sn2\n        \n        printfn \u0022Ending \u0060\u0060nested step with same state type, but different result type\u0060\u0060\u0022\n        return (char sn1.X)\n    }\n\nlet \u0060\u0060computation using state monad\u0060\u0060  : State.State\u003CMyResultType, MyStateRecord\u003E =\n    State.state {\n        printfn \u0022Starting \u0060\u0060computation using state monad\u0060\u0060\u0022\n        printfn \u0022Getting state value s1\u0022\n        let! s1 = State.getState\n        printfn \u0022s1: %A\u0022 s1\n\n        printfn \u0022Writing state\u0022\n        do! State.putState {s1 with Y = \u0022first put\u0022}\n        printfn \u0022Getting state value s2\u0022\n        let! s2 = State.getState\n        printfn \u0022s2: %A\u0022 s2\n\n        printfn \u0022Start nested step resulting in c1\u0022\n        let! c1 = \u0060\u0060nested step with same state type, but different result type\u0060\u0060\n        printfn \u0022End nested step resulting in c1\u0022\n        printfn \u0022Getting state value s3\u0022\n        let! s3 = State.getState\n        printfn \u0022c1: %A, s3: %A\u0022 c1 s3\n\n        printfn \u0022Start nested step without result (increases X by one)\u0022\n        do! \u0060\u0060nested step without result\u0060\u0060\n        printfn \u0022End nested step resulting\u0022\n        printfn \u0022Getting state value s4\u0022\n        let! s4 = State.getState\n        printfn \u0022s4: %A\u0022 s4\n        \n        printfn \u0022double c1: %A double s4.X: %A\u0022 (double c1) (double s4.X)\n        printfn \u0022Ending \u0060\u0060computation using state monad\u0060\u0060\u0022\n        return {R= 123.0 \u002B double c1 \u002B double s4.X}\n    }\n\nlet run () =\n    let startingState = {X = 42; Y=\u0022start\u0022}\n    \n    printfn \u0022You can get both result and state by providing the State monad with start state\u0022\n    printfn \u0022(Notice that computation won\u0027t start until you provide \u0060startState\u0060)\u0022\n    let (result, endState) = \u0060\u0060computation using state monad\u0060\u0060 startingState\n    printfn \u0022result: %A, endState: %A\u0022 result endState\n    printfn \u0022\u0022\n    printfn \u0022\u0022\n    printfn \u0022\u0022\n    printfn \u0022Or result only with \u0060eval\u0060\u0022\n    printfn \u0022(Notice recomputation)\u0022\n    let resultOnly = State.eval \u0060\u0060computation using state monad\u0060\u0060 startingState\n    printfn \u0022resultOnly: %A\u0022 resultOnly\n    printfn \u0022\u0022\n    printfn \u0022\u0022\n    printfn \u0022\u0022\n    printfn \u0022Or endState only with \u0060exec\u0060\u0022\n    let onlyEndState = State.exec \u0060\u0060computation using state monad\u0060\u0060 startingState\n    printfn \u0022onlyEndState: %A\u0022 onlyEndState\n    ()"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/StmSample.html","title":"StmSample","content":"#r @\u0022../bin/FSharpx.Extras.dll\u0022\n\nopen System\nopen System.Threading\nopen FSharpx.Stm\n\nlet test l1 l2 num_threads =\n    let q1 = ListQueue.ofList l1\n    let q2 = ListQueue.ofList l2\n    let move_item q1 q2 =\n        stm { let! x = ListQueue.dequeue q1\n              do! ListQueue.enqueue q2 x \n              return x }\n    let stop = newTVar false\n    let rnd = new Random()\n    let rec worker q1 q2 (fmt : string) =\n        let x = \n            stm { let! stop\u0027 = readTVar stop\n                  return! if not stop\u0027 \n                            then liftM Some (move_item q1 q2)\n                            else stm.Return(None) } |\u003E atomically\n        match x with\n        | Some x -\u003E Console.WriteLine(fmt, Thread.CurrentThread.ManagedThreadId, x)\n                    Thread.Sleep(rnd.Next(1000))\n                    worker q1 q2 fmt\n        | None -\u003E ()\n    let left_worker () = worker q1 q2 \u0022Thread {0} moved item {1} left.\u0022\n    let right_worker () = worker q2 q1 \u0022Thread {0} moved item {1} right.\u0022\n    let spawn (f : unit -\u003E unit) = let t = new Thread(f) in t.Start(); t\n    let threads = [ for _ in [1..num_threads] -\u003E [spawn left_worker; spawn right_worker] ]\n    let terminate () = \n        writeTVar stop true |\u003E atomically\n        threads |\u003E Seq.concat |\u003E Seq.iter (fun t -\u003E t.Join()) \n        Console.WriteLine(\u0022Terminated.\u0022)\n        stm { let! l1 = ListQueue.toList q1\n              let! l2 = ListQueue.toList q2\n              return l1,l2 } |\u003E atomically\n    terminate\n    \nlet runTest () = \n    Console.WriteLine(\u0022Started.\u0022)\n    let t = test [1..50] [51..100] 10 \n    Thread.Sleep(3000)\n    t () |\u003E ignore\n     "},{"uri":"https://fsprojects.github.io/FSharpx.Extras/UndoSample.html","title":"UndoSample","content":"#r @\u0022../bin/FSharpx.Extras.dll\u0022\n\nopen System\nopen FSharpx.Undo\n\nmodule Sample =\n    let rec handleInput\u003C\u0027a\u003E = undoable {         \n        match Console.ReadLine() with         \n        | \u0022undo\u0022 -\u003E \n                let! _ = undo\n                ()\n        | input -\u003E \n                match Double.TryParse input with\n                | true,x -\u003E do! combineWithCurrent (\u002B) x\n                | _ -\u003E ()\n\n        let! currentVal = getCurrent\n        printfn \u0022The current total is %O\u0022 currentVal\n        return! handleInput }\n\nSample.handleInput (newHistory 0.) |\u003E ignore"},{"uri":"https://fsprojects.github.io/FSharpx.Extras/WebProxy.html","title":"WebProxy","content":"#r @\u0022../bin/FSharpx.Extras.dll\u0022\n#r @\u0022../bin/FSharpx.Async.dll\u0022\n#r @\u0022../bin/FSharp.Control.AsyncSeq.dll\u0022\n\nopen FSharp.Control\nopen FSharpx.IO\nopen FSharpx.Net\n\nopen System\nopen System.Net\nopen System.Threading\n\nlet root = \u0022http://msdn.microsoft.com\u0022\nlet proxy = \u0022http://localhost:8082/\u0022\n\n// ----------------------------------------------------------------------------\n// Simple web proxy implemented using \u0027HttpListener\u0027. This version downloads\n// the entire web page as a string and then writes it to the response stream.\n\nlet cts1 = new CancellationTokenSource()\nHttpListener.Start(proxy, (fun (req, resp) -\u003E async {\n    // Download the web page\n    let url = root \u002B req.Url.PathAndQuery\n    let wc = new WebClient()\n    let! html = wc.AsyncDownloadString(Uri(url))\n\n    // Replace URLs and send to the response stream\n    let html = html.Replace(root, proxy)\n    do! resp.AsyncReply(html) }), cancellationToken = cts1.Token)\n\n// Now go to: http://localhost:8082/en-us/fsharp\ncts1.Cancel()\n\n// ----------------------------------------------------------------------------\n// Better version of a proxy - this time, we read data from the input stream\n// in chunks and write them to the response stream as they arive.\n\nlet cts2 = new CancellationTokenSource()\nHttpListener.Start(proxy, (fun (req, resp) -\u003E async {\n    // Initialize the download\n    let url = root \u002B req.Url.PathAndQuery\n    let targetReq = HttpWebRequest.Create(url)\n    use! targetResp = targetReq.AsyncGetResponse()\n    use stream = targetResp.GetResponseStream()\n  \n    // Copy data until we read the entire input\n    let count = ref 1\n    let buffer = Array.zeroCreate 4096\n    while !count \u003E 0 do\n      let! read = stream.AsyncRead(buffer, 0, buffer.Length)\n      do! resp.OutputStream.AsyncWrite(buffer, 0, read)    \n      count := read\n    resp.Close() }), cancellationToken = cts2.Token)\n\ncts2.Cancel()\n\n// ----------------------------------------------------------------------------\n// Proxy that copies data in chunks can be easily implemented using \n// asynchronous sequences. We read all data as asynchronous sequence and\n// write them to the output (Even simpler version could use \u0027AsyncWriteSeq\u0027\n// to write all input buffers to the output stream).\n\nlet cts3 = new CancellationTokenSource()\nHttpListener.Start(proxy, (fun (req, resp) -\u003E async {\n    // Initialize the download\n    let url = root \u002B req.Url.PathAndQuery\n    let targetReq = HttpWebRequest.Create(url)\n    use! targetResp = targetReq.AsyncGetResponse()\n    use stream = targetResp.GetResponseStream()\n  \n    // Iterate over chunks read as an asynchronous sequence\n    // and write them to the output stream\n    for buffer in stream.AsyncReadSeq(4096) do\n      do! resp.OutputStream.AsyncWrite(buffer, 0, buffer.Length)\n    resp.Close() }), cancellationToken = cts3.Token)\n\ncts3.Cancel()\n\n// ----------------------------------------------------------------------------\n// A more sophisticated version of proxy that caches web \n// pages using a simple agent.\n\ntype CacheMessage =\n  | TryGet of string * AsyncReplyChannel\u003Coption\u003Cbyte[]\u003E\u003E\n  | Add of string * byte[]\n\n// Creates an agent that handles \u0027CacheMessage\u0027 and implements the cache\nlet cache = MailboxProcessor.Start(fun agent -\u003E async {\n  let pages = new System.Collections.Generic.Dictionary\u003C_, _\u003E()\n  while true do\n    let! msg = agent.Receive()\n    match msg with \n    | TryGet(url, repl) -\u003E\n        // Try to get a value from the dictionary\n        match pages.TryGetValue(url) with\n        | true, data -\u003E repl.Reply(Some(data))\n        | _ -\u003E repl.Reply(None)\n    | Add(url, data) -\u003E\n        // Add byte array to the cache\n        pages.[url] \u003C- data })\n\n\nlet cts4 = new CancellationTokenSource()\nHttpListener.Start(proxy, (fun (req, resp) -\u003E async {\n    // Generate URL and check data from the cache\n    let url = root \u002B req.Url.PathAndQuery\n    let! cached = cache.PostAndAsyncReply(fun repl -\u003E TryGet(url, repl))\n    match cached with \n    | Some data -\u003E\n        // Reply using data from the cache\n        do! resp.OutputStream.AsyncWrite(data)\n        resp.Close() \n    | None -\u003E\n        // Initialize the download\n        let targetReq = HttpWebRequest.Create(url)\n        use! targetResp = targetReq.AsyncGetResponse()\n        use stream = targetResp.GetResponseStream()\n  \n        // Create a cached asynchronous sequence \n        // (that reads the stream only once)\n        let cachedData = stream.AsyncReadSeq(4096) |\u003E AsyncSeq.cache\n\n        // Start workflow that reads all data in memory (for caching)\n        let! allBytes = \n          cachedData \n          |\u003E AsyncSeq.fold (fun st data -\u003E data::st) []\n          |\u003E Async.StartChild\n        // Write all data from the async sequence to the output\n        for buffer in cachedData do\n          do! resp.OutputStream.AsyncWrite(buffer, 0, buffer.Length)\n        resp.Close() \n\n        // Get all data accumulated in background and save\n        // them to the cache (for later use)\n        let! allData = allBytes\n        let data = allData |\u003E List.rev |\u003E Array.concat \n        cache.Post(Add(url, data)) }), cts4.Token)\n\ncts4.Cancel()"}]